<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="6b6bff27-af8d-4e5a-b3ec-e60ba2cc8651" activeEnvironment="Default" name="TestProject" resourceRoot="" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:testSuite id="95e7e084-6b25-45be-937a-28f06f346a1d" name="SetEnvironment"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="251acca0-4cf9-4a3f-862f-8b958a346239" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetEnvVariable" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="ef3c22fe-d473-45ea-b576-cc8d8cc9ca20"><con:settings/><con:config><script>def UserProfile = System.getenv("UserProfile");
def HostfileLocation = UserProfile.toString() + "\\Desktop\\host.txt";
log.info HostfileLocation;

def file = new File(HostfileLocation);
def lines = file.readLines();
def line = new String[8];
def WORKSPACE,HOST,NAMESERVER,USER,PWD,WEBSERVICE,PCUSER,REPORTFOLDER,REPORTFILE;
int i=0;
lines.each{
	String lin->lin;
		if(i==0)
		{
			WORKSPACE=lin;
		}
		if(i==1)
		{
			HOST=lin;
		}
		if(i==2)
		{
			NAMESERVER=lin;
		}
		if(i==3)
		{
			USER=lin;
		}
		if(i==4)
		{
			PWD=lin;
		}
		if(i==5)
		{
			WEBSERVICE=lin;
		}
		if(i==6)
		{
			PCUSER=lin;
		}
		if(i==7)
		{
			REPORTFOLDER=lin;
		}
		if(i==8)
		{
			REPORTFILE=lin;
		}
		i++;
	};
/*log.info WORKSPACE;
log.info HOST;
log.info NAMESERVER;
log.info USER;
log.info PWD;
log.info WEBSERVICE;
log.info PCUSER;
log.info REPORTFOLDER;
log.info REPORTFILE;
*/
def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].setPropertyValue("WORKSPACE",WORKSPACE);

def XmlFileName = WORKSPACE+'\\'+'HOSTNAME.xml';
def xml = new XmlParser().parse(new File(XmlFileName));

xml.breadthFirst().each
{
	if(it.name().contains("host"))
	it.value()[0]=HOST;
	if(it.name().contains("nameServer"))
	it.value()[0]=NAMESERVER;
	if(it.name().contains("user"))
	it.value()[0]=USER;
	if(it.name().contains("password"))
	it.value()[0]=PWD;
	if(it.name().contains("webservice"))
	it.value()[0]=WEBSERVICE;
	if(it.name().contains("pcuser"))
	it.value()[0]=PCUSER;
	if(it.name().contains("reportFolder"))
	it.value()[0]=REPORTFOLDER;
	if(it.name().contains("reportfile"))
	it.value()[0]=REPORTFILE;
};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(xml);
def newXml = stringWriter.toString();
log.info newXml;

def file1 = new File(XmlFileName);
file1.delete();
def filewriter = new FileWriter(XmlFileName);
file1 &lt;&lt; newXml;
</script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="84c5576a-a10d-42ac-a428-db1b7eabd5bf"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>WORKSPACE</con:name><con:value>C:\JenkinsTest\workspace\testwebservice</con:value></con:property></con:properties></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="af6a02f1-2482-4311-9433-64ae519f52d9" name="ScriptLibrary"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="2a942317-9c25-4539-8df1-b0753ecfb44c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Library" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Utility" id="defa73b5-0ad7-4b64-b0e8-a9143508450d"><con:settings/><con:config><script>class utility{
	def ETAG_At_Header(responseHeader)
	{
		def ETag = responseHeader["ETag"];
		def headers = new com.eviware.soapui.support.types.StringToStringMap();
		headers.put("If-Match",ETag[0]);
		return headers;
	}
	
	def GetContentID(responseHeader)
	{
		def Location = responseHeader["Location"];
		def len = Location[0].length();
		def start = Location[0].indexOf("content/")+("content/").length();//len-4;
		def end = len-1;
		def contentID = Location[0][start..end];
		return contentID;
	}

	def GetContentUri(responseHeader)
	{
		def Location = responseHeader["Location"][0];
		return Location;
	}
	
	def GetETag(responseHeader)
	{
		def ETag = responseHeader["ETag"][0];
		def ETagValue = ETag[1..ETag.length()-2];
		return ETagValue;
	}

	def GetStatusCode(responseHeader)
	{
		def statusCode = responseHeader["#status#"];
		def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0];
		return httpStatusCode;
	}
	
	def GetPrivateLockID(responseHeader)
	{
		def lockUrl = responseHeader["Location"];
		int start = lockUrl[0].indexOf("private")+"private".length()+1
		int end = lockUrl[0].length()-1
		def privateLockID = lockUrl[0][start..end];
		return privateLockID;
	}

	def GetPublicLockID(holder)
	{
		def byteresponse = holder.getNodeValue("//*:entry//*:id");

		def start = byteresponse.indexOf("public")+"public".length()+1;
		def end = byteresponse.length()-1;
		def publicLock = byteresponse[start..end];
		return publicLock;
	}

	def GetTitleFromResponse(response)
	{
		def xml = new XmlParser().parseText(response);
		def root = xml.'content'.'vdf:payload'.'vdf:field';
		String title;
		for(int i=0;i&lt;root.size();i++)
		{
			if(root[i].@'name'=="title")
			{
				title = root[i].'vdf:value'[0].value()[0];
				break;
			}
		}
		title = title.replaceAll(" ","-");
		return title;
	}

	String GetNameServerName()
	{
		def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
		String nameServer = xml.'nameServer';
		return nameServer;
	}

	def GetAListIDFromResponse(response)
	{
		def xml = new XmlParser().parseText(response);
		def start,end;
		
		def ListID = xml.'entry'.'id';
		def ID = ListID[0].value()[0];
		start = ID.indexOf("list")+"list/".length();
		end = ID.length()-1;
		ID = ID[start..end];
		return ID;
	}

	int GetNumberOfListItems(response)
	{
		def xml = new XmlParser().parseText(response);
		def start,end;
		def ID = xml.'entry'.'id';
		return ID.size();
	}

	def GetContentUrl(response)
	{
		def contentUrl = response["Location"];
		return contentUrl[0];
	}

	String GetAHandleIDOfList(response, int position)
	{
		def xml = new XmlParser().parseText(response);
		def start,end;
		def ID = xml.'entry'.'id';
		if(ID.size()>position)
		{
			def handleId = ID[position].value()[0];
			start = handleId.indexOf("handle")+"handle/".length();
			end = handleId.length()-1;
			handleId = handleId[start..end];
			return handleId;
		}
		return "";
	}

	int IsContenType(response,String search)
	{
		def contentType = response["Content-Type"];
		contentType = contentType[0];
		int index = contentType.indexOf(search);
		if(index>=0)
		return 1;
		else
		return 0;
	}

	int IsPinnedItem(response,int position)
	{
		def xml = new XmlParser().parseText(response);
		def start,end;
		def Items = xml.'entry'.'content';
		
		def ListItem = Items[position].'vdf:payload'.'vdf:field';
		def isPinned,priority;
		for(int i=0;i&lt;ListItem.size();i++)
		{
			if(ListItem[i].@name=="com.escenic.priority")
				priority =  ListItem[i].'vdf:value'[0].value()[0];
			if(ListItem[i].@name=="com.escenic.pinned")
				isPinned =  ListItem[i].'vdf:value'[0].value()[0];
		}
		if(isPinned=="true" &amp;&amp; priority>=0)
		return 1;
		else
		return 0;
	}

	int isETagEqual(etag,etag2)
	{
		a=etag2.toString();
		b=etag.toString();
		if(a.size()!=b.size())
		return 0;
		for(int i=0;i&lt;a.size();i++)
		{
			if(a[i]!=b[i])
			{
				return 0;
			}
		}
		return 1;
	}

	
}

context.setProperty("utility",new utility());</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="e1dcedaf-b8b5-4723-aee5-9b32db8be3bb" name="TestReport"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="38378078-78aa-4d7c-b573-faad8d94169c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ReportGeneration" searchProperties="true"><con:settings/><con:testStep type="groovy" name="ReportGeneration" id="db49ce1c-b495-4924-a537-618bb795f210"><con:settings/><con:config><script><![CDATA[import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;
import groovy.xml.*;

def designXml = '''
<Design>
    <ColumnHead>
        <Title>Time Of Execution</Title>
    </ColumnHead>
    <ColumnHead>
        <Title>Host Name</Title>
    </ColumnHead>
    <ColumnHead>
        <Title>Project Name</Title>
    </ColumnHead>
    <ColumnHead>
        <Title>Test Suite Name</Title>
    </ColumnHead>
    <ColumnHead>
        <Title>Test Case Name</Title>
    </ColumnHead>
	<ColumnHead>
        <Title>Test Step Name</Title>
    </ColumnHead>
	<ColumnHead>
        <Title>Result</Title>
    </ColumnHead>
    <ColumnHead>
        <Title>Expected Result</Title>
    </ColumnHead>
    <ColumnHead>
        <Title>Actual Result</Title>
    </ColumnHead>
    <ColumnHead>
        <Title>Comment</Title>
    </ColumnHead>
</Design>
'''
def xml = new XmlSlurper().parseText(designXml);

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def date = new Date()
def sdf = new SimpleDateFormat("dd-MM-yyyy")
String worksheet = sdf.format(date)

def root = new XmlSlurper().parse(WORKSPACE+"\\HOSTNAME.xml");
String reportFolder = root.'reportFolder';
String report = root.'reportfile';
String LogInUser = root.'pcuser';
def folder = new File(WORKSPACE+"\\"+reportFolder);//( 'C:\\Users\\amnm\\Desktop\\TEST REPORT' )
log.info "folder "+folder;
if(!folder.exists())
{
	folder.mkdirs()
}
def sheet;
def settings;
def  workbook=null;
def found = 0;
//def path = reportFolder+"\\\\"+report;//"C:\\Users\\amnm\\Desktop\\TEST REPORT\\Report.xls"
log.info reportFolder
log.info report
//log.info path
File file = new File(folder,report);//(folder,'Report.xls')

WritableFont cellFont = new WritableFont(WritableFont.TIMES, 12)
WritableCellFormat cellFormat = new WritableCellFormat(cellFont);
cellFormat.setBackground(Colour.GREEN);
cellFormat.setWrap(true);
cellFormat.setAlignment(jxl.format.Alignment.CENTRE)
cellFormat.setBorder(jxl.format.Border.ALL, jxl.format.BorderLineStyle.MEDIUM, jxl.format.Colour.BLACK);
int CellWidth = 25;

if(file.exists())
{
	workbook = Workbook.getWorkbook(file)
	for(int i=0;i<workbook.getNumberOfSheets();i++)
	{
		String name = workbook.getSheet(i).getName();
		if(name==worksheet)
		{
			found=1
			break;
		}
	}
	if(found==0)
	{
		int index = workbook.getNumberOfSheets()+1;
		def temp_copy = Workbook.createWorkbook(new File(folder,report),workbook)//(new File(folder,'Reports.xls'),workbook)
		sheet = temp_copy.createSheet(worksheet,0)//index

		/* *********This is where the value is saved for the next empty row index */
		WritableFont font = new WritableFont(WritableFont.TIMES, 12)
		font.setColour(Colour.WHITE)
		WritableCellFormat format = new WritableCellFormat(font);
		sheet.addCell(new Label(11,11,"1",format));
		for(int j=1;j<11;j++)
			sheet.setColumnView(j,CellWidth);
		xml.ColumnHead.Title.eachWithIndex{Title,row=0,
			col ->
			sheet.addCell(new Label(col,row,Title.text(),cellFormat))
		}

/* * ********This is where the value is retrieved from the cell of the next empty row index */
		Cell cell= sheet.getCell(11,11);
		def val=cell.getContents();
		val = val.toInteger();
		
		temp_copy.write();
		temp_copy.close();

		file.delete();
	     file = new File(folder,report);//(folder,'Reports.xls');
		file.renameTo(new File(folder,report));//(new File(folder,'Report.xls'))
	}
}
else
{
	workbook = Workbook.createWorkbook(file);
	sheet = workbook.createSheet(worksheet,0);

	/* *********This is where the value is saved for the next empty row index */
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	font.setColour(Colour.WHITE);
	WritableCellFormat format = new WritableCellFormat(font);
	sheet.addCell(new Label(11,11,"1",format));

	for(int j=1;j<11;j++)
		sheet.setColumnView(j,CellWidth);
		xml.ColumnHead.Title.eachWithIndex{Title,row=0,
			col ->
			sheet.addCell(new Label(col,row,Title.text(),cellFormat))
		}

	
	workbook.write();
	workbook.close();
}

/* 
 * XML file generation
 */
def XmlClosure = 
{
	Design
	{
		ColumnHead
		{
			Title('Time Of Execution')
		}
	}
};

File xmlfile = new File(folder,'Report.xml');
if(xmlfile.exists())
{
	log.info "file exists";
}
else
{
	def XmlFileName = WORKSPACE+"\\"+reportFolder+'\\'+'Report.xml';
	def filewriter = new FileWriter(XmlFileName);
	//def builder = new MarkupBuilder(filewriter);
	//filewriter.close();
	def xmlFile = new File(XmlFileName);
	xmlFile << "<root></root>";
}

]]></script></con:config></con:testStep><con:testStep type="groovy" name="TestPass" id="cf724ec0-852e-4fb0-9ad6-dd6093fd9900"><con:settings/><con:config><script><![CDATA[import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;
import groovy.xml.*;


def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def root = new XmlSlurper().parse(WORKSPACE+"\\"+"HOSTNAME.xml");//("C:/Users/amnm/Desktop/HOSTNAME.xml")
String HOST = root.'host';
String reportFolder = root.'reportFolder';
String report = root.'reportfile';
String LogInUser = root.'pcuser';
String excTime = GetTime();

def folder = new File(WORKSPACE+'\\'+reportFolder);
log.info folder;
def sheet;
def  workbook;
File file = new File(folder,report);
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

def stepName = project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].getPropertyValue("name");
def expectedResult = project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].getPropertyValue("expectedresult");
def actualResult = project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].getPropertyValue("actualresult");

WritableCellFormat format;
format = createFormatCellStatus(1);
format.setWrap(true);
sheet.addCell(new Label(6,RowId,"PASS",format));
sheet.addCell(new Label(7,RowId,expectedResult,format));
sheet.addCell(new Label(8,RowId,actualResult,format));
//sheet.addCell(new Label(10,RowId,httpStatusCode.toString(),format));
sheet.addCell(new Label(0,RowId,excTime,format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].getPropertyValue("name"),format));//context.getCurrentStep().getLabel()
//sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

if(!context.testCase.testSuite.name.toString().contains("TestReport"))
{
	temp_copy.write()
	temp_copy.close()
	file.delete();
	file = new File(folder,'Reports.xls');
	file.renameTo(new File(folder,report));


	/* 
	 * XML file generation
	 */
	def XmlFileName = WORKSPACE+'\\'+reportFolder+'\\'+'Report.xml';
	def xml = new XmlParser().parse(new File(XmlFileName));
	actualResult = actualResult.replaceAll("<","&lt;");
	actualResult = actualResult.replaceAll("<","&gt;");
	actualResult = actualResult.replaceAll("\"","&quot;");
	
	expectedResult = expectedResult.replaceAll("<","&lt;");
	expectedResult = expectedResult.replaceAll("<","&gt;");
	expectedResult = expectedResult.replaceAll("\"","&quot;");
	
	def toAdd = "<TestCase>"+"<executionTime>"+excTime+"</executionTime>"+"<hostName>"+HOST+"</hostName>"+"<prjectName>"+project.name+"</prjectName>"+"<suite>"+context.testCase.testSuite.name+"</suite>"+"<tcName>"+context.testCase.name+"</tcName>"+"<stepName>"+stepName+"</stepName>"+"<result>PASS</result>"+"<expected>"+expectedResult+"</expected>"+"<actual>"+actualResult+"</actual>"+"</TestCase>";
	def nodetoAdd = new XmlParser(false,false).parseText(toAdd);
	xml.breadthFirst().each
	{
		if(it.name().contains("root"))
		{
			log.info it.@'name'.toString();
			it.children().add(nodetoAdd);
		}
	}
	
	def stringWriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
	printer.preserveWhitespace=true;
	printer.print(xml);
	def newXml = stringWriter.toString();
	
	def file1 = new File(XmlFileName);
	file1.delete();
	def filewriter = new FileWriter(XmlFileName);
	//def str = "<?xml-stylesheet type=\"text/xsl\" href=\"C:\\stylesheet.xsl\"?>";
	def str = "<?xml-stylesheet type=\"text/xsl\" href=\""+WORKSPACE+"\\stylesheet.xsl\"?>";
	newXml = str + newXml;
	file1 << newXml;

}]]></script></con:config></con:testStep><con:testStep type="groovy" name="TestFail" id="600c101b-389e-4afc-9513-26699be27bd4"><con:settings/><con:config><script><![CDATA[import jxl.CellType;
import jxl.SheetSettings.*;
import jxl.Workbook;
import jxl.write.*;
import jxl.Cell;
import java.text.SimpleDateFormat
import jxl.format.Colour;
import jxl.format.Pattern;


def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

WritableCellFormat createFormatCellStatus(int result)
{
	WritableFont font = new WritableFont(WritableFont.TIMES, 12);
	if(result==1)
	font.setColour(Colour.GREEN)
	else if(result==2)
	font.setColour(Colour.RED)
	else if(result==3)
	font.setColour(Colour.WHITE)
	WritableCellFormat Format=new WritableCellFormat(font);
	return Format
}

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)
	return time;
}

def root = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");//("C:/Users/amnm/Desktop/HOSTNAME.xml");
String HOST = root.'host';
String reportFolder = root.'reportFolder';
String report = root.'reportfile';
String LogInUser = root.'pcuser';
String excTime = GetTime();

def folder = new File(WORKSPACE+'\\'+reportFolder);
def sheet;
def  workbook;
File file = new File(folder,report);
workbook = Workbook.getWorkbook(file)
int Last_Index = workbook.getNumberOfSheets()-1;
def temp_copy = Workbook.createWorkbook(new File(folder,'Reports.xls'),workbook)
sheet = temp_copy.getSheet(0);//Last_Index
def EmptyRowIndex=sheet.getCell(11,11).getContents();
int RowId = EmptyRowIndex.toInteger();

def stepName = project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].getPropertyValue("name");
def expectedResult = project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].getPropertyValue("expectedresult");
def actualResult = project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].getPropertyValue("actualresult");

WritableCellFormat format;
format = createFormatCellStatus(2);
format.setWrap(true);
sheet.addCell(new Label(6,RowId,"FAIL",format));
sheet.addCell(new Label(7,RowId,project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].getPropertyValue("expectedresult"),format));
sheet.addCell(new Label(8,RowId,project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].getPropertyValue("actualresult"),format));
sheet.addCell(new Label(0,RowId,excTime,format));
sheet.addCell(new Label(1,RowId,HOST,format));
sheet.addCell(new Label(2,RowId,project.name,format));
sheet.addCell(new Label(3,RowId,context.testCase.testSuite.name,format));
sheet.addCell(new Label(4,RowId,context.testCase.name,format));
sheet.addCell(new Label(5,RowId,project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].getPropertyValue("name"),format));
//sheet.addCell(new Label(6,RowId,"AssertStatusCode",format));

RowId +=1;
String RowIndex=RowId.toString();
format = createFormatCellStatus(3)
sheet.addCell(new Label(11,11,RowIndex,format));

if(!context.testCase.testSuite.name.toString().contains("TestReport"))
{
	temp_copy.write()
	temp_copy.close()
	file.delete();
	file = new File(folder,'Reports.xls');
	file.renameTo(new File(folder,report));



	/* 
	 * XML file generation
	 */
	def XmlFileName = WORKSPACE+'\\'+reportFolder+'\\'+'Report.xml';
	def xml = new XmlParser().parse(new File(XmlFileName));
	actualResult = actualResult.replaceAll("<","&lt;");
	actualResult = actualResult.replaceAll("<","&gt;");
	actualResult = actualResult.replaceAll("\"","&quot;");
	
	expectedResult = expectedResult.replaceAll("<","&lt;");
	expectedResult = expectedResult.replaceAll("<","&gt;");
	expectedResult = expectedResult.replaceAll("\"","&quot;");
	
	def toAdd = "<TestCase>"+"<executionTime>"+excTime+"</executionTime>"+"<hostName>"+HOST+"</hostName>"+"<prjectName>"+project.name+"</prjectName>"+"<suite>"+context.testCase.testSuite.name+"</suite>"+"<tcName>"+context.testCase.name+"</tcName>"+"<stepName>"+stepName+"</stepName>"+"<result>FAIL</result>"+"<expected>"+expectedResult+"</expected>"+"<actual>"+actualResult+"</actual>"+"</TestCase>";
	def nodetoAdd = new XmlParser(false,false).parseText(toAdd);
	xml.breadthFirst().each
	{
		if(it.name().contains("root"))
		{
			log.info it.@'name'.toString();
			it.children().add(nodetoAdd);
		}
	}
	
	def stringWriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
	printer.preserveWhitespace=true;
	printer.print(xml);
	def newXml = stringWriter.toString();
	
	def file1 = new File(XmlFileName);
	file1.delete();
	def filewriter = new FileWriter(XmlFileName);
	//def str = "<?xml-stylesheet type=\"text/xsl\" href=\"C:\\stylesheet.xsl\"?>";
	def str = "<?xml-stylesheet type=\"text/xsl\" href=\""+WORKSPACE+"\\stylesheet.xsl\"?>";   //C:\\stylesheet.xsl\"?>";
	newXml = str + newXml;
	file1 << newXml;

}
]]></script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="984351df-6834-4773-86fb-178d096b6be1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>name</con:name><con:value>SearchByID</con:value></con:property><con:property><con:name>expectedresult</con:name><con:value>Found at least one Content with the same ID : 473</con:value></con:property><con:property><con:name>actualresult</con:name><con:value>Found 1 Section  with ID : 473</con:value></con:property></con:properties></con:config></con:testStep><con:properties><con:property><con:name>name</con:name><con:value>GetAContentStory</con:value></con:property><con:property><con:name>assert</con:name><con:value>200</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="127f98b7-27f7-4de1-b7d2-5b212aa3fecb" name="ContentTest"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4e21fdb2-757f-4b38-adc5-565c9f08d1cb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ContentCreateAndRetrive_backup" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="3f80f452-11f9-4963-8db9-734405d2e5b3"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String homeUrl = xml.'homeUrl_for_Eng_6';
String rootUrl = xml.'rootUrl_for_Eng_6';
String user = xml.'user';
String password = xml.'password';
String url = server+rootUrl;//homeUrl;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetPublication"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetPublication" id="87c3a07c-9aed-41c8-b169-583dfc4d73b9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="f39e9731-819f-4060-815a-8ba5af999e05" name="GetPublication" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="40930089-7fdb-41a5-a56d-d860aa6ffc6e" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="506d40ae-aaa5-4165-835a-488d94dae9e4"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetPublication#Response}');
def xml = new XmlParser().parseText(response);

def root = xml.'link';
String SectionUri,SectionPage;
for(int i=0;i&lt;root.size();i++)
{
	if(root[i].@'rel'=="down")
	{
		SectionUri = root[i].@'href';
	}
	if(root[i].@'rel'=='http://www.vizrt.com/types/relation/pages')
	{
		s=root[i].@'href';
		if(s.contains("/section/"))
		SectionPage=root[i].@'href';
	}
}	
log.info SectionUri;
log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="a685745f-e404-4132-8940-494c995b2dcd"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetSectionPage" id="2bf53b7e-e35e-4e33-a847-5c4e66cd33d5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="78d9e201-1600-4347-80c8-17a56b8f548d" name="GetSectionPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/pages</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="88940ba3-02b9-4b19-ad9d-320df3d346d9" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParsingVDFModel" id="6adf0aaa-4256-47a5-973c-4b6b3ee596ab"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetSectionPage#Response}');
def xml = new XmlParser().parseText(response);
def Story_Content_URI;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp;
		it.@'rel'=="related" &amp;&amp;
		it.'vdf:payload'.@'model'.toString().contains("story")
		) Story_Content_URI = it.@'href'};


context.testCase.testSteps["GetAContentStory"].setPropertyValue("EndPoint",Story_Content_URI);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetSectionURIForContent" id="838b3c72-2357-45ea-b526-27a184fd7b2c"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
/*
def section_entris = xml.'entry';
if(section_entris.size())
{
	section_uri = section_entris[0].'id'[0].value()[0] + "/content-items";
	context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",section_uri);
}
*/
xml.breadthFirst().
each {
		if(it.name().toString().contains("id") &amp;&amp; 
		it.value()[0].contains("/section/") &amp;&amp; 
		!it.value()[0].contains("subsection"))
		section_uri = it.value()[0]};

if(section_uri!=null)
{
	section_uri+="/content-items";
	context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",section_uri);
}</script></con:config></con:testStep><con:testStep type="httprequest" name="GetAContentStory" id="2341b2dc-ed78-44a5-bc28-d27c27481e87"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="05ec5e0d-5c2f-4229-9fd6-cf5ecebdc80e" name="GetAContentStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/131</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="ada3fc63-94e3-4a6d-8152-fce220baf769" name="TestRetriveStory"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])



suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);

if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Story_Model" id="ec1f87e3-3028-42c3-953b-417050fda6eb"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetAContentStory#Response}');
def xml = new XmlParser().parseText(response);

def model = xml.'content'.'vdf:payload'[0].@'model';
//log.info model;
def request = context.expand('${CreateContent#Request}');

def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{it.@'model'=model}

log.info xml.'content'[0];

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(story_xml);
def newXml = stringWriter.toString();
//newXml.replace("&lt;entry","asdas");
log.info newXml

context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);

</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="6c8fcb8c-9f3a-4975-a378-8ed8288fe2f7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/3/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>
          This is a test story title
        </vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>
              This is test sample story body!
            </p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="dec29192-6fe5-4813-a062-ca349cf80e93" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ContentUpdateDelete_backup" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="b1f0bf9f-052d-46c6-b650-dd3b7c2db7e8"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String homeUrl = xml.'homeUrl_for_Eng_6';
String rootUrl = xml.'rootUrl_for_Eng_6';
String user = xml.'user';
String password = xml.'password';
String url = server+rootUrl;//homeUrl;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetPublication"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetPublication" id="a6d54f82-3aa7-4e61-b5f1-3e6b2189baea"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="f39e9731-819f-4060-815a-8ba5af999e05" name="GetPublication" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="40930089-7fdb-41a5-a56d-d860aa6ffc6e" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="e0ed0a83-337c-40dd-807c-8b1bb9be10df"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetPublication#Response}');
def xml = new XmlParser().parseText(response);

def root = xml.'link';
String SectionUri,SectionPage;
for(int i=0;i&lt;root.size();i++)
{
	if(root[i].@'rel'=="down")
	{
		SectionUri = root[i].@'href';
	}
	if(root[i].@'rel'=='http://www.vizrt.com/types/relation/pages')
	{
		s=root[i].@'href';
		if(s.contains("/section/"))
		SectionPage=root[i].@'href';
	}
}	
log.info SectionUri;
log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="672fd55f-7258-40c3-aac8-036d38155e40"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetSectionPage" id="f73a705e-ccc3-4249-9cfe-7f02713b5f8b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="78d9e201-1600-4347-80c8-17a56b8f548d" name="GetSectionPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/pages</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="88940ba3-02b9-4b19-ad9d-320df3d346d9" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParsingVDFModel" id="48196693-6dbd-4aac-bb14-b4d6f96ec3e9"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetSectionPage#Response}');
def xml = new XmlParser().parseText(response);
def Story_Content_URI;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp;
		it.@'rel'=="related" &amp;&amp;
		it.'vdf:payload'.@'model'.toString().contains("story")
		) Story_Content_URI = it.@'href'};


context.testCase.testSteps["GetAContentStory"].setPropertyValue("EndPoint",Story_Content_URI);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetSectionURIForContent" id="ed9ab83c-a403-4a30-84a9-775b85afa4cc"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
/*
def section_entris = xml.'entry';
if(section_entris.size())
{
	section_uri = section_entris[0].'id'[0].value()[0] + "/content-items";
	context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",section_uri);
}
*/
xml.breadthFirst().
each {
		if(it.name().toString().contains("id") &amp;&amp; 
		it.value()[0].contains("/section/") &amp;&amp; 
		!it.value()[0].contains("subsection"))
		section_uri = it.value()[0]};

if(section_uri!=null)
{
	section_uri+="/content-items";
	context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",section_uri);
}</script></con:config></con:testStep><con:testStep type="httprequest" name="GetAContentStory" id="b0ed90a6-7700-4b39-8c28-baa07622d024"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="05ec5e0d-5c2f-4229-9fd6-cf5ecebdc80e" name="GetAContentStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/131</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="ada3fc63-94e3-4a6d-8152-fce220baf769" name="TestRetriveStory"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Story_Model" id="28552fb1-c41c-4f47-9313-13a2ca1fd81f"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetAContentStory#Response}');
def xml = new XmlParser().parseText(response);

def model = xml.'content'.'vdf:payload'[0].@'model';
//log.info model;
def request = context.expand('${CreateContent#Request}');

def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{it.@'model'=model}

log.info xml.'content'[0];

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(story_xml);
def newXml = stringWriter.toString();
//newXml.replace("&lt;entry","asdas");
log.info newXml

context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);

</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="87934804-c492-43cc-9ae3-05dce83c0dbc"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/3/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>
          This is a test story title
        </vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>
              This is test sample story body!
            </p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="0a36a6e3-eebd-4423-bea4-e2cbdff293ce" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetContentURI" id="136445b7-176d-432d-b9d8-d27425d173d3"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
def contentID = context.utility.GetContentID(httpResponseHeader);
def content_uri = context.utility.GetContentUri(httpResponseHeader);
def ID=contentID+10;
def newURI = content_uri.toString().replace(contentID.toString(),ID+"");
//log.info content_uri;
context.testCase.testSteps["GETContent"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["UpdateContent"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["UpdateContentAgainWithoutModify"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["DeleteContent"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["DeleteNonExistingContent"].setPropertyValue("EndPoint",newURI);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GETContent" id="a4c9e38c-cdbc-4a6e-aac5-918e2c9f22b3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="091d5de7-11b7-488c-b435-d776f09c5f74" name="GETContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/955</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8f420f5d-7e38-4312-b6b2-d1830d444065" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SaveResponse" id="a7703efe-6074-4e9a-8b35-00a0934f4d40"><con:settings/><con:config><script>def response = context.expand( '${GETContent#Response}' )

response = response.replaceAll("This is test sample story body!","Update:This is test sample story body!")
response = response.replaceAll("This is a test story title","Update:This is a test story title")
context.testCase.testSteps["UpdateContent"].setPropertyValue("Request",response)
context.testCase.testSteps["UpdateContentAgainWithoutModify"].setPropertyValue("Request",response)</script></con:config></con:testStep><con:testStep type="groovy" name="SetETagValue" id="5f0114ad-34c6-4cf6-9372-3a8f91e142e5"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["GETContent"].testRequest.response.responseHeaders
suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def headers = context.utility.ETAG_At_Header(httpResponseHeader);
context.testCase.testSteps["UpdateContent"].testRequest.setRequestHeaders(headers)
context.testCase.testSteps["UpdateContentAgainWithoutModify"].testRequest.setRequestHeaders(headers)
//log.info "ETag Value: "+ETag[0]
</script></con:config></con:testStep><con:testStep type="httprequest" name="UpdateContent" id="80b8a56d-7816-4558-94d0-9c4cd68b209c"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="acf6aabc-a091-4bbe-a288-0a2c6c80d5e8" name="UpdateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;5c6a6c8&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/955</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-epsilon:8080/webservice/escenic/content/955</id>\r
   <link rel="self" href="http://qa-epsilon:8080/webservice/escenic/content/955" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-epsilon:8080/webservice/escenic/content/955" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-epsilon:8080/webservice/escenic/lock/article/955/5c6a6c8" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>955</dcterms:identifier>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" title="qa">\r
      <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-epsilon:8080/webservice/escenic/section/3" title="Config" type="application/atom+xml; type=entry"/>\r
      <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-epsilon:8080/webservice/escenic/section/3" title="Config" type="application/atom+xml; type=entry"/>\r
   </metadata:publication>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-epsilon:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-epsilon:8080/webservice/escenic/content/955/log/" type="application/atom+xml; type=entry" title="History"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-epsilon:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-epsilon:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://epsilon.qa.local/config/article955.ece" type="application/xhtml+xml" title="cXense Analytics"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-epsilon:8080/webservice-extensions/note/note.html?url=http://qa-epsilon:8080/note-webservice/escenic/content/955/notes" type="application/xhtml+xml" title="Notes"/>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/story" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="title">\r
            <vdf:value>Update:This is a test story title</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="subtitle"/>\r
         <vdf:field name="leadtext"/>\r
         <vdf:field name="body">\r
            <vdf:value>\r
               <div xmlns="http://www.w3.org/1999/xhtml">\r
                  <p>Update:This is test sample story body!</p>\r
               </div>\r
            </vdf:value>\r
         </vdf:field>\r
         <vdf:field name="byline"/>\r
         <vdf:field name="creditLine"/>\r
         <vdf:field name="overline"/>\r
         <vdf:field name="datelineTag"/>\r
         <vdf:field name="shirttail"/>\r
         <vdf:field name="quote"/>\r
         <vdf:field name="storyKeywords"/>\r
         <vdf:field name="originatingURL"/>\r
         <vdf:field name="priority"/>\r
         <vdf:field name="indexable"/>\r
         <vdf:field name="followlinks"/>\r
         <vdf:field name="copyright"/>\r
         <vdf:field name="owner"/>\r
         <vdf:field name="source"/>\r
         <vdf:field name="layoutVariant"/>\r
         <vdf:field name="customConfig"/>\r
         <vdf:field name="com.escenic.tags">\r
            <vdf:list/>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <title type="text">Update:This is a test story title</title>\r
   <summary type="text"/>\r
   <link href="http://epsilon.qa.local/config/article955.ece" rel="alternate"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>\r
   <app:edited>2017-08-17T07:40:17.000Z</app:edited>\r
   <dcterms:created>2017-08-17T07:40:17.000Z</dcterms:created>\r
   <metadata:reference source="ece-auto-gen" sourceid="7c2ee0d7-0609-4419-a44f-aaf76b2c2ed2"/>\r
   <author>\r
      <name>qa Administrator</name>\r
      <uri>http://qa-epsilon:8080/webservice/escenic/person/1</uri>\r
   </author>\r
   <metadata:creator>\r
      <name>qa Administrator</name>\r
   </metadata:creator>\r
   <metadata:last-edited-by>\r
      <name>qa Administrator</name>\r
   </metadata:last-edited-by>\r
   <app:control xmlns:vaext="http://www.vizrt.com/atom-ext">\r
      <app:draft>yes</app:draft>\r
      <vaext:state name="draft" href="http://qa-epsilon:8080/webservice/escenic/content/state/draft/editor"/>\r
   </app:control>\r
   <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-epsilon:8080/webservice/escenic/section/3" title="Config" type="application/atom+xml; type=entry"/>\r
   <link rel="usage" href="http://qa-epsilon:8080/webservice/usage/article/955" type="text/uri-list" title="Incoming Links"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/content/955/preview" rel="http://www.vizrt.com/types/relation/preview"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/content/955/log" rel="http://www.vizrt.com/types/relation/log"/>\r
   <link href="http://qa-epsilon:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>\r
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="869c7096-554c-41d5-8fa1-fe39482d4fc4" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="UpdateContentAgainWithoutModify" id="8db574b3-42e3-4964-839c-0e24f560972a"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="f3d73af5-851e-4326-ae4c-b018b41f95ca" name="UpdateContentAgainWithoutModify" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;5c6a6c8&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/955</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-epsilon:8080/webservice/escenic/content/955</id>\r
   <link rel="self" href="http://qa-epsilon:8080/webservice/escenic/content/955" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-epsilon:8080/webservice/escenic/content/955" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-epsilon:8080/webservice/escenic/lock/article/955/5c6a6c8" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>955</dcterms:identifier>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" title="qa">\r
      <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-epsilon:8080/webservice/escenic/section/3" title="Config" type="application/atom+xml; type=entry"/>\r
      <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-epsilon:8080/webservice/escenic/section/3" title="Config" type="application/atom+xml; type=entry"/>\r
   </metadata:publication>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-epsilon:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-epsilon:8080/webservice/escenic/content/955/log/" type="application/atom+xml; type=entry" title="History"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-epsilon:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-epsilon:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://epsilon.qa.local/config/article955.ece" type="application/xhtml+xml" title="cXense Analytics"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-epsilon:8080/webservice-extensions/note/note.html?url=http://qa-epsilon:8080/note-webservice/escenic/content/955/notes" type="application/xhtml+xml" title="Notes"/>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/story" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="title">\r
            <vdf:value>Update:This is a test story title</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="subtitle"/>\r
         <vdf:field name="leadtext"/>\r
         <vdf:field name="body">\r
            <vdf:value>\r
               <div xmlns="http://www.w3.org/1999/xhtml">\r
                  <p>Update:This is test sample story body!</p>\r
               </div>\r
            </vdf:value>\r
         </vdf:field>\r
         <vdf:field name="byline"/>\r
         <vdf:field name="creditLine"/>\r
         <vdf:field name="overline"/>\r
         <vdf:field name="datelineTag"/>\r
         <vdf:field name="shirttail"/>\r
         <vdf:field name="quote"/>\r
         <vdf:field name="storyKeywords"/>\r
         <vdf:field name="originatingURL"/>\r
         <vdf:field name="priority"/>\r
         <vdf:field name="indexable"/>\r
         <vdf:field name="followlinks"/>\r
         <vdf:field name="copyright"/>\r
         <vdf:field name="owner"/>\r
         <vdf:field name="source"/>\r
         <vdf:field name="layoutVariant"/>\r
         <vdf:field name="customConfig"/>\r
         <vdf:field name="com.escenic.tags">\r
            <vdf:list/>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <title type="text">Update:This is a test story title</title>\r
   <summary type="text"/>\r
   <link href="http://epsilon.qa.local/config/article955.ece" rel="alternate"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>\r
   <app:edited>2017-08-17T07:40:17.000Z</app:edited>\r
   <dcterms:created>2017-08-17T07:40:17.000Z</dcterms:created>\r
   <metadata:reference source="ece-auto-gen" sourceid="7c2ee0d7-0609-4419-a44f-aaf76b2c2ed2"/>\r
   <author>\r
      <name>qa Administrator</name>\r
      <uri>http://qa-epsilon:8080/webservice/escenic/person/1</uri>\r
   </author>\r
   <metadata:creator>\r
      <name>qa Administrator</name>\r
   </metadata:creator>\r
   <metadata:last-edited-by>\r
      <name>qa Administrator</name>\r
   </metadata:last-edited-by>\r
   <app:control xmlns:vaext="http://www.vizrt.com/atom-ext">\r
      <app:draft>yes</app:draft>\r
      <vaext:state name="draft" href="http://qa-epsilon:8080/webservice/escenic/content/state/draft/editor"/>\r
   </app:control>\r
   <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-epsilon:8080/webservice/escenic/section/3" title="Config" type="application/atom+xml; type=entry"/>\r
   <link rel="usage" href="http://qa-epsilon:8080/webservice/usage/article/955" type="text/uri-list" title="Incoming Links"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/content/955/preview" rel="http://www.vizrt.com/types/relation/preview"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/content/955/log" rel="http://www.vizrt.com/types/relation/log"/>\r
   <link href="http://qa-epsilon:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>\r
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="3b21e1f6-8099-4049-9c33-8a53638ed0c0" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","412");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="412")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteContent" id="e401e1a6-1f5f-421e-a931-51a2b82e4859"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="310efa9d-9381-45d2-be5f-eb5aecacbc38" name="DeleteContent" postQueryString="false" mediaType="application/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/955</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="2ad197be-4e19-41c6-8f1a-dbe624db55e3" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteNonExistingContent" id="889e1f12-6b77-4a07-a8ae-b2068b1c022b"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="3827b35d-4c3e-4cdf-bf87-7085a1eda37f" name="DeleteNonExistingContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/95510</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4adbafb2-9db9-4265-926b-1850558332be" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="218dae59-cb67-477c-8d5a-5f56cd21a034" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ChangingArticleChangeETag_backup" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="5cf9206e-f898-4d37-82fb-28cbae38e548"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String homeUrl = xml.'homeUrl_for_Eng_6';
String rootUrl = xml.'rootUrl_for_Eng_6';
String user = xml.'user';
String password = xml.'password';
String url = server+rootUrl;//homeUrl;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetPublication"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetPublication" id="516e9da3-4c4a-4ba4-ab77-3d2f782231a8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="f39e9731-819f-4060-815a-8ba5af999e05" name="GetPublication" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="40930089-7fdb-41a5-a56d-d860aa6ffc6e" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="3f0afaf4-8b1f-4e6b-ac8c-a32bf796ffd4"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetPublication#Response}');
def xml = new XmlParser().parseText(response);

def root = xml.'link';
String SectionUri,SectionPage;
for(int i=0;i&lt;root.size();i++)
{
	if(root[i].@'rel'=="down")
	{
		SectionUri = root[i].@'href';
	}
	if(root[i].@'rel'=='http://www.vizrt.com/types/relation/pages')
	{
		s=root[i].@'href';
		if(s.contains("/section/"))
		SectionPage=root[i].@'href';
	}
}	
log.info SectionUri;
log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="956dd041-9984-45af-b9a9-1b69a141894a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetSectionPage" id="dfeeb9b5-40ba-41c8-9c62-f8642a75a6db"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="78d9e201-1600-4347-80c8-17a56b8f548d" name="GetSectionPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/pages</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="88940ba3-02b9-4b19-ad9d-320df3d346d9" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParsingVDFModel" id="9378b501-856e-4396-aac9-e4fd7c0760cc"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetSectionPage#Response}');
def xml = new XmlParser().parseText(response);
def Story_Content_URI;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp;
		it.@'rel'=="related" &amp;&amp;
		it.'vdf:payload'.@'model'.toString().contains("story")
		) Story_Content_URI = it.@'href'};


context.testCase.testSteps["GetAContentStory"].setPropertyValue("EndPoint",Story_Content_URI);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetSectionURIForContent" id="92d41be5-30ef-400d-a92b-c30cb3d25e1f"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
/*
def section_entris = xml.'entry';
if(section_entris.size())
{
	section_uri = section_entris[0].'id'[0].value()[0] + "/content-items";
	context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",section_uri);
}
*/
xml.breadthFirst().
each {
		if(it.name().toString().contains("id") &amp;&amp; 
		it.value()[0].contains("/section/") &amp;&amp; 
		!it.value()[0].contains("subsection"))
		section_uri = it.value()[0]};

if(section_uri!=null)
{
	section_uri+="/content-items";
	context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",section_uri);
}</script></con:config></con:testStep><con:testStep type="httprequest" name="GetAContentStory" id="0e32430b-cedf-4381-b6c8-91fb607e8ab9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="05ec5e0d-5c2f-4229-9fd6-cf5ecebdc80e" name="GetAContentStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/131</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="ada3fc63-94e3-4a6d-8152-fce220baf769" name="TestRetriveStory"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Story_Model" id="f1a59bed-bdef-4f31-a6fd-ca7fe11b1181"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetAContentStory#Response}');
def xml = new XmlParser().parseText(response);

def model = xml.'content'.'vdf:payload'[0].@'model';
//log.info model;
def request = context.expand('${CreateContent#Request}');

def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{it.@'model'=model}

log.info xml.'content'[0];

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(story_xml);
def newXml = stringWriter.toString();
//newXml.replace("&lt;entry","asdas");
log.info newXml

context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);

</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="e5a042f7-e375-430a-9822-bf95eae672cf"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/3/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>
          This is a test story title
        </vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>
              This is test sample story body!
            </p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="0a36a6e3-eebd-4423-bea4-e2cbdff293ce" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetContentURI" id="0fdf2103-409b-455d-b1a7-c040b254243e"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
def contentID = context.utility.GetContentID(httpResponseHeader);
def content_uri = context.utility.GetContentUri(httpResponseHeader);
def ID=contentID+10;
def newURI = content_uri.toString().replace(contentID.toString(),ID+"");
//log.info content_uri;
context.testCase.testSteps["GETContent"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["UpdateContent"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["GETUpdatedContent"].setPropertyValue("EndPoint",content_uri);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GETContent" id="2cb5c8f8-dbeb-4fa7-a7fe-ffe4a54fb1df"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="091d5de7-11b7-488c-b435-d776f09c5f74" name="GETContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/965</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8f420f5d-7e38-4312-b6b2-d1830d444065" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SaveResponse" id="e3d65310-2cc2-4688-a3d2-5b79d5f1f252"><con:settings/><con:config><script>def response = context.expand( '${GETContent#Response}' )

response = response.replaceAll("This is test sample story body!","Update:This is test sample story body!")
response = response.replaceAll("This is a test story title","Update:This is a test story title")
context.testCase.testSteps["UpdateContent"].setPropertyValue("Request",response)</script></con:config></con:testStep><con:testStep type="groovy" name="SetETagValue" id="6a8e9250-6f2a-4dfa-8ab8-7e1d2b0f07a8"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["GETContent"].testRequest.response.responseHeaders
suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def headers = context.utility.ETAG_At_Header(httpResponseHeader);
context.testCase.testSteps["UpdateContent"].testRequest.setRequestHeaders(headers)

//log.info "ETag Value: "+ETag[0]
</script></con:config></con:testStep><con:testStep type="httprequest" name="UpdateContent" id="9c6666df-a236-49c6-b3fc-793b312d5403"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="acf6aabc-a091-4bbe-a288-0a2c6c80d5e8" name="UpdateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;f5c67dc8&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/965</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-epsilon:8080/webservice/escenic/content/965</id>\r
   <link rel="self" href="http://qa-epsilon:8080/webservice/escenic/content/965" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-epsilon:8080/webservice/escenic/content/965" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-epsilon:8080/webservice/escenic/lock/article/965/f5c67dc8" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>965</dcterms:identifier>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" title="qa">\r
      <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-epsilon:8080/webservice/escenic/section/3" title="Config" type="application/atom+xml; type=entry"/>\r
      <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-epsilon:8080/webservice/escenic/section/3" title="Config" type="application/atom+xml; type=entry"/>\r
   </metadata:publication>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-epsilon:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-epsilon:8080/webservice/escenic/content/965/log/" type="application/atom+xml; type=entry" title="History"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-epsilon:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-epsilon:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://epsilon.qa.local/config/article965.ece" type="application/xhtml+xml" title="cXense Analytics"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-epsilon:8080/webservice-extensions/note/note.html?url=http://qa-epsilon:8080/note-webservice/escenic/content/965/notes" type="application/xhtml+xml" title="Notes"/>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/story" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="title">\r
            <vdf:value>Update:This is a test story title</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="subtitle"/>\r
         <vdf:field name="leadtext"/>\r
         <vdf:field name="body">\r
            <vdf:value>\r
               <div xmlns="http://www.w3.org/1999/xhtml">\r
                  <p>Update:This is test sample story body!</p>\r
               </div>\r
            </vdf:value>\r
         </vdf:field>\r
         <vdf:field name="byline"/>\r
         <vdf:field name="creditLine"/>\r
         <vdf:field name="overline"/>\r
         <vdf:field name="datelineTag"/>\r
         <vdf:field name="shirttail"/>\r
         <vdf:field name="quote"/>\r
         <vdf:field name="storyKeywords"/>\r
         <vdf:field name="originatingURL"/>\r
         <vdf:field name="priority"/>\r
         <vdf:field name="indexable"/>\r
         <vdf:field name="followlinks"/>\r
         <vdf:field name="copyright"/>\r
         <vdf:field name="owner"/>\r
         <vdf:field name="source"/>\r
         <vdf:field name="layoutVariant"/>\r
         <vdf:field name="customConfig"/>\r
         <vdf:field name="com.escenic.tags">\r
            <vdf:list/>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <title type="text">Update:This is a test story title</title>\r
   <summary type="text"/>\r
   <link href="http://epsilon.qa.local/config/article965.ece" rel="alternate"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>\r
   <app:edited>2017-08-17T09:10:34.000Z</app:edited>\r
   <dcterms:created>2017-08-17T09:10:34.000Z</dcterms:created>\r
   <metadata:reference source="ece-auto-gen" sourceid="365b2be0-43a1-4ad1-ac9f-59be7738b055"/>\r
   <author>\r
      <name>qa Administrator</name>\r
      <uri>http://qa-epsilon:8080/webservice/escenic/person/1</uri>\r
   </author>\r
   <metadata:creator>\r
      <name>qa Administrator</name>\r
   </metadata:creator>\r
   <metadata:last-edited-by>\r
      <name>qa Administrator</name>\r
   </metadata:last-edited-by>\r
   <app:control xmlns:vaext="http://www.vizrt.com/atom-ext">\r
      <app:draft>yes</app:draft>\r
      <vaext:state name="draft" href="http://qa-epsilon:8080/webservice/escenic/content/state/draft/editor"/>\r
   </app:control>\r
   <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-epsilon:8080/webservice/escenic/section/3" title="Config" type="application/atom+xml; type=entry"/>\r
   <link rel="usage" href="http://qa-epsilon:8080/webservice/usage/article/965" type="text/uri-list" title="Incoming Links"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/content/965/preview" rel="http://www.vizrt.com/types/relation/preview"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/content/965/log" rel="http://www.vizrt.com/types/relation/log"/>\r
   <link href="http://qa-epsilon:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>\r
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="869c7096-554c-41d5-8fa1-fe39482d4fc4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="204")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GETUpdatedContent" id="81a520fe-6f4a-4f43-bd06-c9fcd6d0742e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="091d5de7-11b7-488c-b435-d776f09c5f74" name="GETUpdatedContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/965</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8f420f5d-7e38-4312-b6b2-d1830d444065" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def etag = httpResponseHeaders["ETag"][0];
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

def httpResponseHeaders2 = context.testCase.testSteps["GETContent"].testRequest.response.responseHeaders
def etag2 = httpResponseHeaders2["ETag"][0];

int isETagEqual(etag,etag2)
{
	a=etag2.toString();
	b=etag.toString();
	if(a.size()!=b.size())
	return 0;
	for(int i=0;i&lt;a.size();i++)
	{
		if(a[i]!=b[i])
		{
			return 0;
		}
	}
	return 1;
}

res = isETagEqual(etag,etag2);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","ETags Differ.Previous ETag="+etag+" , Updated ETag="+etag2);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Etags are same.Previous ETag"+etag+" , Updated ETag="+etag2);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="cf3c42fd-cbed-4c44-b633-f2fde11b21cc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LockContent_backup" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="46a1a480-98b3-439d-b15d-0b533748da6b"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String homeUrl = xml.'homeUrl_for_Eng_6';
String rootUrl = xml.'rootUrl_for_Eng_6';
String user = xml.'user';
String password = xml.'password';
String url = server+rootUrl;//homeUrl;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetPublication"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetPublication" id="ee68e935-fe11-462a-9dce-119b407a54d9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="f39e9731-819f-4060-815a-8ba5af999e05" name="GetPublication" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="40930089-7fdb-41a5-a56d-d860aa6ffc6e" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="a6d9250e-af1f-4597-9fd3-a2089fb152dc"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetPublication#Response}');
def xml = new XmlParser().parseText(response);

def root = xml.'link';
String SectionUri,SectionPage;
for(int i=0;i&lt;root.size();i++)
{
	if(root[i].@'rel'=="down")
	{
		SectionUri = root[i].@'href';
	}
	if(root[i].@'rel'=='http://www.vizrt.com/types/relation/pages')
	{
		s=root[i].@'href';
		if(s.contains("/section/"))
		SectionPage=root[i].@'href';
	}
}	
log.info SectionUri;
log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="c12b35a6-ffa9-441b-ac59-9922b0ff0690"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetSectionPage" id="fdd30e94-d97c-4e1a-9beb-bd8c0fef180f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="78d9e201-1600-4347-80c8-17a56b8f548d" name="GetSectionPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/pages</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="88940ba3-02b9-4b19-ad9d-320df3d346d9" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParsingVDFModel" id="684faf9c-ece9-4bfc-a8c2-3bde2125fc09"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetSectionPage#Response}');
def xml = new XmlParser().parseText(response);
def Story_Content_URI;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp;
		it.@'rel'=="related" &amp;&amp;
		it.'vdf:payload'.@'model'.toString().contains("story")
		) Story_Content_URI = it.@'href'};


context.testCase.testSteps["GetAContentStory"].setPropertyValue("EndPoint",Story_Content_URI);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetSectionURIForContent" id="5c56c11e-18c5-4345-9f58-ada1439fcb2a"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);

def section_entris = xml.'entry';
if(section_entris.size())
{
	section_uri = section_entris[0].'id'[0].value()[0] + "/content-items";
	context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",section_uri);
}

xml.breadthFirst().
each {
		if(it.name().toString().contains("id") &amp;&amp; 
		it.value()[0].contains("/section/") &amp;&amp; 
		!it.value()[0].contains("subsection"))
		section_uri = it.value()[0]};

if(section_uri!=null)
{
	section_uri+="/content-items";
	context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",section_uri);
}</script></con:config></con:testStep><con:testStep type="httprequest" name="GetAContentStory" id="4c25871f-c727-49de-abab-0f8c4a3d25a6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="05ec5e0d-5c2f-4229-9fd6-cf5ecebdc80e" name="GetAContentStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/131</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="ada3fc63-94e3-4a6d-8152-fce220baf769" name="TestRetriveStory"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Story_Model" id="7387e176-b455-416a-8f91-706dcaf67a16"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetAContentStory#Response}');
def xml = new XmlParser().parseText(response);

def model = xml.'content'.'vdf:payload'[0].@'model';
//log.info model;
def request = context.expand('${CreateContent#Request}');

def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{it.@'model'=model}

log.info xml.'content'[0];

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(story_xml);
def newXml = stringWriter.toString();
//newXml.replace("&lt;entry","asdas");
log.info newXml

context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);

</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="60ca8db6-fb5b-4cd7-bb9a-acb6cc2dd2ff"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/3/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>
          This is a test story title
        </vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>
              This is test sample story body!
            </p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="0a36a6e3-eebd-4423-bea4-e2cbdff293ce" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetContentURI" id="4214a7ac-5742-4e59-b968-09252795f867"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
def contentID = context.utility.GetContentID(httpResponseHeader);
def content_uri = context.utility.GetContentUri(httpResponseHeader);
def ID=contentID+10;
def newURI = content_uri.toString().replace(contentID.toString(),ID+"");

context.testCase.testSteps["GETContent"].setPropertyValue("EndPoint",content_uri);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GETContent" id="e396b005-c8cd-493e-bf36-7e12aa5dd30f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="091d5de7-11b7-488c-b435-d776f09c5f74" name="GETContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/974</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8f420f5d-7e38-4312-b6b2-d1830d444065" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetLockUrl" id="2e7b6e5d-7ea0-4155-a57d-8bcde1ff3ce5"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GETContent#Response}');
def xml = new XmlParser().parseText(response);
def lock_uri;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; 
		it.@'rel'=="http://www.vizrt.com/types/relation/lock")
		lock_uri = it.@'href'};
//log.info 	lock_uri;
context.testCase.testSteps["PostLock"].setPropertyValue("EndPoint",lock_uri);
context.testCase.testSteps["PostLockAgain"].setPropertyValue("EndPoint",lock_uri);
/*
def model = xml.'content'.'vdf:payload'[0].@'model';
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{it.@'model'=model}
log.info xml.'content'[0];
def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(story_xml);
def newXml = stringWriter.toString();
log.info newXml
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);
*/</script></con:config></con:testStep><con:testStep type="httprequest" name="PostLock" id="38fe8ccd-7899-427d-b4ac-54fff4987b7a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="c7e7f36f-f30c-4cbf-b110-7ba2fa86325c" name="PostLock" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/lock/article/974/e5e03675</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
  <summary type="text">Lock created by: qa_admin from WS</summary>
  <metadata:fragment>TITLE</metadata:fragment>
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="7b94c778-523a-4a6b-8636-fa7e7266f655" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetPrivateLock" id="4f898bf7-f468-4aa2-95a8-754193aa5c50"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["PostLock"].testRequest.response.responseHeaders;
private_lock_uri = httpResponseHeader["Location"][0];
context.testCase.testSteps["ReleaseLock"].setPropertyValue("EndPoint",private_lock_uri);
context.testCase.testSteps["ReleaseLockAgain"].setPropertyValue("EndPoint",private_lock_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="PostLockAgain" id="2ab85159-7681-4cd2-9240-0a8a5fa68a9e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="19516491-ddfa-4754-9785-7fa6f9738978" name="PostLockAgain" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/lock/article/974/e5e03675</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
  <summary type="text">Lock created by: qa_admin from WS</summary>
  <metadata:fragment>TITLE</metadata:fragment>
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="33568690-e7f3-46a9-b41b-e4de622ecb3c" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","409");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="409")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="ReleaseLock" id="98ea4588-efe7-4888-9a1b-cdfa39423c2b"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="a15fe2e2-1d6a-4178-a112-995245e6a1ec" name="ReleaseLock" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/lock/article/974/private/7pt</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3f376c82-0e81-4ac7-8c68-58bb8642c136" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="ReleaseLockAgain" id="85937524-4b71-4a45-b8de-3a3c16fdeab8"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="fe47b014-534c-478e-9301-0314b89b0e06" name="ReleaseLockAgain" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/lock/article/974/private/7pt</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="56589372-0784-4dff-b94d-c4a2150567a8" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a0a18632-935c-4c57-bd5b-9ba338e838d4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ContentCreateAndRetrive" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="5a4ecfba-af20-45f5-912d-ab2ea15c77f3"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");

String server = xml.'host';
//server = System.getenv("HOST_NAME");
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;
log.info System.getenv("HOST_NAME");


def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="c881142b-ea97-4331-bce0-795f2960d5d8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDescriptionURI" id="3102f8af-e8cb-469a-8cab-20c3a2ff5098"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="8cd3e8fe-deb9-465e-824c-e08879fe9e65"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="e16c4c70-62b3-4fc8-9018-2eea90a5e03a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/content-descriptions/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="ba493de4-8b52-4e8b-bf0a-a50bcf91451a"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="7f4e70d2-8d88-457c-b536-a0726014c248"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetContentURI" id="daad24ed-958d-4d29-97f0-3ed853767a67"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def content_uri;
if(httpResponseHeader!=null)
{
	content_uri = httpResponseHeader["Location"][0];
}
context.testCase.testSteps["RetriveContentStory"].setPropertyValue("EndPoint",content_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveContentStory" id="6467655f-678b-4274-b969-9ee232658e00"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d8c94b2b-5a5d-41b7-84a8-107a1f48915e" name="RetriveContentStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2507</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9ab91d36-bae0-45c8-a912-e7983cd3653c" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="25cbc08c-5d9a-4063-9c11-4a1f1656e3c4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ContentUpdateDelete" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="552fb45e-3893-43b5-9a50-8d03b9b19f69"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="63a37af2-119e-43a0-aca9-1fe306f846f4"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDescriptionURI" id="ec1237f8-a03c-45ac-abf9-27d94445909d"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetSectionURIForContent" id="c24b3381-08ed-4265-8ccb-01e822c00257"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="3d75ef4b-ff2c-44cd-beb8-cb58940b921d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/content-descriptions/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="342da2da-beaf-4963-9f55-18e3c5182447"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="f2051c6c-8478-490d-952a-f5302d93c15b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="0a36a6e3-eebd-4423-bea4-e2cbdff293ce" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetContentURI" id="d582d389-d105-45b9-86d6-0e8429be6909"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
def contentID = context.utility.GetContentID(httpResponseHeader);
def content_uri = context.utility.GetContentUri(httpResponseHeader);
def ID=contentID+10;
def newURI = content_uri.toString().replace(contentID.toString(),ID+"");
//log.info content_uri;
context.testCase.testSteps["GETContent"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["UpdateContent"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["UpdateContentAgainWithoutModify"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["DeleteContent"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["DeleteNonExistingContent"].setPropertyValue("EndPoint",newURI);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GETContent" id="85e282fe-d8f0-4e8b-af1a-4afcf4b450e0"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="091d5de7-11b7-488c-b435-d776f09c5f74" name="GETContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2508</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8f420f5d-7e38-4312-b6b2-d1830d444065" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SaveResponse" id="34d0b6e3-b2c6-4e6e-91df-6c4eaf8ee345"><con:settings/><con:config><script>def response = context.expand( '${GETContent#Response}' )

response = response.replaceAll("This is test sample story body!","Update:This is test sample story body!")
response = response.replaceAll("This is a test story title","Update:This is a test story title")
context.testCase.testSteps["UpdateContent"].setPropertyValue("Request",response)
context.testCase.testSteps["UpdateContentAgainWithoutModify"].setPropertyValue("Request",response)</script></con:config></con:testStep><con:testStep type="groovy" name="SetETagValue" id="ccbb7f6c-06ed-424a-a155-1533edf85b15"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["GETContent"].testRequest.response.responseHeaders
suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def headers = context.utility.ETAG_At_Header(httpResponseHeader);
context.testCase.testSteps["UpdateContent"].testRequest.setRequestHeaders(headers)
context.testCase.testSteps["UpdateContentAgainWithoutModify"].testRequest.setRequestHeaders(headers)
//log.info "ETag Value: "+ETag[0]
</script></con:config></con:testStep><con:testStep type="httprequest" name="UpdateContent" id="addae044-82e9-46f7-bff2-ec6edc73948c"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="acf6aabc-a091-4bbe-a288-0a2c6c80d5e8" name="UpdateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;6ea33775&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2508</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-belinda:8080/webservice/escenic/content/2508</id>\r
   <link rel="self" href="http://qa-belinda:8080/webservice/escenic/content/2508" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-belinda:8080/webservice/escenic/content/2508" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-belinda:8080/webservice/escenic/lock/article/2508/6ea33775" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>2508</dcterms:identifier>\r
   <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-belinda:8080/webservice/escenic/publication/qa/" title="qa">\r
      <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
      <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
   </metadata:publication>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-belinda:8080/webservice/escenic/content/2508/log/" type="application/atom+xml; type=entry" title="History"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-belinda:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://belinda.qa.local/incoming/article2508.ece" type="application/xhtml+xml" title="cXense Analytics"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/note/note.html?url=http://qa-belinda:8080/note-webservice/escenic/content/2508/notes" type="application/xhtml+xml" title="Notes"/>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="title">\r
            <vdf:value>Update:This is a test story title</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="subtitle"/>\r
         <vdf:field name="leadtext"/>\r
         <vdf:field name="body">\r
            <vdf:value>\r
               <div xmlns="http://www.w3.org/1999/xhtml">\r
                  <p>Update:This is test sample story body!</p>\r
               </div>\r
            </vdf:value>\r
         </vdf:field>\r
         <vdf:field name="byline"/>\r
         <vdf:field name="creditLine"/>\r
         <vdf:field name="overline"/>\r
         <vdf:field name="datelineTag"/>\r
         <vdf:field name="shirttail"/>\r
         <vdf:field name="quote"/>\r
         <vdf:field name="storyKeywords"/>\r
         <vdf:field name="originatingURL"/>\r
         <vdf:field name="priority"/>\r
         <vdf:field name="indexable"/>\r
         <vdf:field name="followlinks"/>\r
         <vdf:field name="copyright"/>\r
         <vdf:field name="owner"/>\r
         <vdf:field name="source"/>\r
         <vdf:field name="layoutVariant"/>\r
         <vdf:field name="customConfig"/>\r
         <vdf:field name="com.escenic.tags">\r
            <vdf:list/>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <title type="text">Update:This is a test story title</title>\r
   <summary type="text"/>\r
   <link href="http://belinda.qa.local/incoming/article2508.ece" rel="alternate"/>\r
   <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>\r
   <app:edited>2018-02-27T10:51:54.000Z</app:edited>\r
   <dcterms:created>2018-02-27T10:51:53.000Z</dcterms:created>\r
   <metadata:reference source="ece-auto-gen" sourceid="9698c4e8-e343-4060-a936-4195bc1728a2"/>\r
   <author>\r
      <name>qa Administrator</name>\r
      <uri>http://qa-belinda:8080/webservice/escenic/person/1</uri>\r
   </author>\r
   <metadata:creator>\r
      <name>qa Administrator</name>\r
   </metadata:creator>\r
   <metadata:last-edited-by>\r
      <name>qa Administrator</name>\r
   </metadata:last-edited-by>\r
   <app:control xmlns:vaext="http://www.vizrt.com/atom-ext">\r
      <app:draft>yes</app:draft>\r
      <vaext:state name="draft" href="http://qa-belinda:8080/webservice/escenic/content/state/draft/editor"/>\r
   </app:control>\r
   <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
   <link rel="usage" href="http://qa-belinda:8080/webservice/publication/qa/usage/article/2508" type="text/uri-list" title="Incoming Links"/>\r
   <link href="http://qa-belinda:8080/webservice/escenic/content/2508/preview" rel="http://www.vizrt.com/types/relation/preview"/>\r
   <link href="http://qa-belinda:8080/webservice/escenic/content/2508/log" rel="http://www.vizrt.com/types/relation/log"/>\r
   <link href="http://qa-belinda:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>\r
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="869c7096-554c-41d5-8fa1-fe39482d4fc4" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="UpdateContentAgainWithoutModify" id="fb18c3cc-0662-4b67-87fc-4fa57898031d"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="f3d73af5-851e-4326-ae4c-b018b41f95ca" name="UpdateContentAgainWithoutModify" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;6ea33775&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2508</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-belinda:8080/webservice/escenic/content/2508</id>\r
   <link rel="self" href="http://qa-belinda:8080/webservice/escenic/content/2508" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-belinda:8080/webservice/escenic/content/2508" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-belinda:8080/webservice/escenic/lock/article/2508/6ea33775" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>2508</dcterms:identifier>\r
   <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-belinda:8080/webservice/escenic/publication/qa/" title="qa">\r
      <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
      <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
   </metadata:publication>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-belinda:8080/webservice/escenic/content/2508/log/" type="application/atom+xml; type=entry" title="History"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-belinda:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://belinda.qa.local/incoming/article2508.ece" type="application/xhtml+xml" title="cXense Analytics"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/note/note.html?url=http://qa-belinda:8080/note-webservice/escenic/content/2508/notes" type="application/xhtml+xml" title="Notes"/>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="title">\r
            <vdf:value>Update:This is a test story title</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="subtitle"/>\r
         <vdf:field name="leadtext"/>\r
         <vdf:field name="body">\r
            <vdf:value>\r
               <div xmlns="http://www.w3.org/1999/xhtml">\r
                  <p>Update:This is test sample story body!</p>\r
               </div>\r
            </vdf:value>\r
         </vdf:field>\r
         <vdf:field name="byline"/>\r
         <vdf:field name="creditLine"/>\r
         <vdf:field name="overline"/>\r
         <vdf:field name="datelineTag"/>\r
         <vdf:field name="shirttail"/>\r
         <vdf:field name="quote"/>\r
         <vdf:field name="storyKeywords"/>\r
         <vdf:field name="originatingURL"/>\r
         <vdf:field name="priority"/>\r
         <vdf:field name="indexable"/>\r
         <vdf:field name="followlinks"/>\r
         <vdf:field name="copyright"/>\r
         <vdf:field name="owner"/>\r
         <vdf:field name="source"/>\r
         <vdf:field name="layoutVariant"/>\r
         <vdf:field name="customConfig"/>\r
         <vdf:field name="com.escenic.tags">\r
            <vdf:list/>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <title type="text">Update:This is a test story title</title>\r
   <summary type="text"/>\r
   <link href="http://belinda.qa.local/incoming/article2508.ece" rel="alternate"/>\r
   <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>\r
   <app:edited>2018-02-27T10:51:54.000Z</app:edited>\r
   <dcterms:created>2018-02-27T10:51:53.000Z</dcterms:created>\r
   <metadata:reference source="ece-auto-gen" sourceid="9698c4e8-e343-4060-a936-4195bc1728a2"/>\r
   <author>\r
      <name>qa Administrator</name>\r
      <uri>http://qa-belinda:8080/webservice/escenic/person/1</uri>\r
   </author>\r
   <metadata:creator>\r
      <name>qa Administrator</name>\r
   </metadata:creator>\r
   <metadata:last-edited-by>\r
      <name>qa Administrator</name>\r
   </metadata:last-edited-by>\r
   <app:control xmlns:vaext="http://www.vizrt.com/atom-ext">\r
      <app:draft>yes</app:draft>\r
      <vaext:state name="draft" href="http://qa-belinda:8080/webservice/escenic/content/state/draft/editor"/>\r
   </app:control>\r
   <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
   <link rel="usage" href="http://qa-belinda:8080/webservice/publication/qa/usage/article/2508" type="text/uri-list" title="Incoming Links"/>\r
   <link href="http://qa-belinda:8080/webservice/escenic/content/2508/preview" rel="http://www.vizrt.com/types/relation/preview"/>\r
   <link href="http://qa-belinda:8080/webservice/escenic/content/2508/log" rel="http://www.vizrt.com/types/relation/log"/>\r
   <link href="http://qa-belinda:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>\r
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="3b21e1f6-8099-4049-9c33-8a53638ed0c0" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","412");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="412")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteContent" id="69c78f4a-629e-4c24-abdd-49de6f552074"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="310efa9d-9381-45d2-be5f-eb5aecacbc38" name="DeleteContent" postQueryString="false" mediaType="application/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2508</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="2ad197be-4e19-41c6-8f1a-dbe624db55e3" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteNonExistingContent" id="bf13c951-70dd-4b8b-9922-733820be87a8"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="3827b35d-4c3e-4cdf-bf87-7085a1eda37f" name="DeleteNonExistingContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/250810</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4adbafb2-9db9-4265-926b-1850558332be" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d56c9b63-8bdf-4561-a4bb-1b6daae51c7d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ChangingArticleChangeETag" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="f8d347e9-6c76-4edc-99c0-605ef8a32cdf"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="78596d1f-3220-4d50-b31f-30a310744015"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDescriptionURI" id="38745c2e-f259-4f3c-ad5a-3d5151ef4e26"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="2864c424-65de-4843-88e8-fc711bea293d"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="983c3490-e3d6-4429-b65d-5b9f020e8645"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/content-descriptions/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="37da4fbd-920f-4a2a-8ded-1a704db0eb7e"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="fa514586-9a31-4392-89fb-45ec6254c349"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetContentURI" id="54a745ec-fb23-4c4c-9929-140bf15df8a5"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
def contentID = context.utility.GetContentID(httpResponseHeader);
def content_uri = context.utility.GetContentUri(httpResponseHeader);
def ID=contentID+10;
def newURI = content_uri.toString().replace(contentID.toString(),ID+"");
//log.info content_uri;
context.testCase.testSteps["GETContent"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["UpdateContent"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["GETUpdatedContent"].setPropertyValue("EndPoint",content_uri);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GETContent" id="0ee855ae-461b-4770-ba4d-c08f2a039710"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="091d5de7-11b7-488c-b435-d776f09c5f74" name="GETContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2509</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8f420f5d-7e38-4312-b6b2-d1830d444065" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SaveResponse" id="71c2f55b-fa6e-4e5c-86cc-2acad9152e57"><con:settings/><con:config><script>def response = context.expand( '${GETContent#Response}' )

response = response.replaceAll("This is test sample story body!","Update:This is test sample story body!")
response = response.replaceAll("This is a test story title","Update:This is a test story title")
context.testCase.testSteps["UpdateContent"].setPropertyValue("Request",response)</script></con:config></con:testStep><con:testStep type="groovy" name="SetETagValue" id="465939e4-38c3-4e03-8e0c-ef7ff1810db8"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["GETContent"].testRequest.response.responseHeaders
suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def headers = context.utility.ETAG_At_Header(httpResponseHeader);
context.testCase.testSteps["UpdateContent"].testRequest.setRequestHeaders(headers)

//log.info "ETag Value: "+ETag[0]
</script></con:config></con:testStep><con:testStep type="httprequest" name="UpdateContent" id="57da9b71-6940-469c-86a7-8f7d9619ab5c"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="acf6aabc-a091-4bbe-a288-0a2c6c80d5e8" name="UpdateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;b3925d04&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2509</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-belinda:8080/webservice/escenic/content/2509</id>\r
   <link rel="self" href="http://qa-belinda:8080/webservice/escenic/content/2509" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-belinda:8080/webservice/escenic/content/2509" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-belinda:8080/webservice/escenic/lock/article/2509/b3925d04" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>2509</dcterms:identifier>\r
   <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-belinda:8080/webservice/escenic/publication/qa/" title="qa">\r
      <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
      <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
   </metadata:publication>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-belinda:8080/webservice/escenic/content/2509/log/" type="application/atom+xml; type=entry" title="History"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-belinda:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://belinda.qa.local/incoming/article2509.ece" type="application/xhtml+xml" title="cXense Analytics"/>\r
   <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/note/note.html?url=http://qa-belinda:8080/note-webservice/escenic/content/2509/notes" type="application/xhtml+xml" title="Notes"/>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="title">\r
            <vdf:value>Update:This is a test story title</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="subtitle"/>\r
         <vdf:field name="leadtext"/>\r
         <vdf:field name="body">\r
            <vdf:value>\r
               <div xmlns="http://www.w3.org/1999/xhtml">\r
                  <p>Update:This is test sample story body!</p>\r
               </div>\r
            </vdf:value>\r
         </vdf:field>\r
         <vdf:field name="byline"/>\r
         <vdf:field name="creditLine"/>\r
         <vdf:field name="overline"/>\r
         <vdf:field name="datelineTag"/>\r
         <vdf:field name="shirttail"/>\r
         <vdf:field name="quote"/>\r
         <vdf:field name="storyKeywords"/>\r
         <vdf:field name="originatingURL"/>\r
         <vdf:field name="priority"/>\r
         <vdf:field name="indexable"/>\r
         <vdf:field name="followlinks"/>\r
         <vdf:field name="copyright"/>\r
         <vdf:field name="owner"/>\r
         <vdf:field name="source"/>\r
         <vdf:field name="layoutVariant"/>\r
         <vdf:field name="customConfig"/>\r
         <vdf:field name="com.escenic.tags">\r
            <vdf:list/>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <title type="text">Update:This is a test story title</title>\r
   <summary type="text"/>\r
   <link href="http://belinda.qa.local/incoming/article2509.ece" rel="alternate"/>\r
   <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>\r
   <app:edited>2018-02-27T10:52:00.000Z</app:edited>\r
   <dcterms:created>2018-02-27T10:52:00.000Z</dcterms:created>\r
   <metadata:reference source="ece-auto-gen" sourceid="74e9aa87-f28f-4deb-874f-da88ac9625ca"/>\r
   <author>\r
      <name>qa Administrator</name>\r
      <uri>http://qa-belinda:8080/webservice/escenic/person/1</uri>\r
   </author>\r
   <metadata:creator>\r
      <name>qa Administrator</name>\r
   </metadata:creator>\r
   <metadata:last-edited-by>\r
      <name>qa Administrator</name>\r
   </metadata:last-edited-by>\r
   <app:control xmlns:vaext="http://www.vizrt.com/atom-ext">\r
      <app:draft>yes</app:draft>\r
      <vaext:state name="draft" href="http://qa-belinda:8080/webservice/escenic/content/state/draft/editor"/>\r
   </app:control>\r
   <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>\r
   <link rel="usage" href="http://qa-belinda:8080/webservice/publication/qa/usage/article/2509" type="text/uri-list" title="Incoming Links"/>\r
   <link href="http://qa-belinda:8080/webservice/escenic/content/2509/preview" rel="http://www.vizrt.com/types/relation/preview"/>\r
   <link href="http://qa-belinda:8080/webservice/escenic/content/2509/log" rel="http://www.vizrt.com/types/relation/log"/>\r
   <link href="http://qa-belinda:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>\r
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="869c7096-554c-41d5-8fa1-fe39482d4fc4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="204")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GETUpdatedContent" id="a339368a-ea18-40a2-9efe-8da970bd57cb"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="091d5de7-11b7-488c-b435-d776f09c5f74" name="GETUpdatedContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2509</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8f420f5d-7e38-4312-b6b2-d1830d444065" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def etag = httpResponseHeaders["ETag"][0];
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

def httpResponseHeaders2 = context.testCase.testSteps["GETContent"].testRequest.response.responseHeaders
def etag2 = httpResponseHeaders2["ETag"][0];

int isETagEqual(etag,etag2)
{
	a=etag2.toString();
	b=etag.toString();
	if(a.size()!=b.size())
	return 0;
	for(int i=0;i&lt;a.size();i++)
	{
		if(a[i]!=b[i])
		{
			return 0;
		}
	}
	return 1;
}

res = isETagEqual(etag,etag2);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","ETags Differ.Previous ETag="+etag+" , Updated ETag="+etag2);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Etags are same.Previous ETag"+etag+" , Updated ETag="+etag2);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c6bb5b5c-fe33-48d8-8d28-0fe06fee549e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LockContent" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="0d8729b1-c944-4de1-9140-caa42fe6c259"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");

String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="00ed488d-a08f-4a65-804a-363de2fee57e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDescriptionURI" id="533d029d-f3b8-402f-9a13-9663182e166f"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="5ed9823f-d8b4-450f-907e-184b51d88c7f"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="12470d55-53d7-40ba-a791-25d85968a61b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/content-descriptions/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="b126a97f-994c-41d9-a83f-4248a92b97f1"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="9d4127a1-c61c-44c0-93e6-7a2612561b33"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetContentURI" id="d71c8e87-dc86-438e-84c0-2b9fa5707ad3"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
def contentID = context.utility.GetContentID(httpResponseHeader);
def content_uri = context.utility.GetContentUri(httpResponseHeader);
def ID=contentID+10;
def newURI = content_uri.toString().replace(contentID.toString(),ID+"");

context.testCase.testSteps["GETContent"].setPropertyValue("EndPoint",content_uri);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GETContent" id="77022a9b-29f2-4991-80c3-706a42f7b5fd"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="091d5de7-11b7-488c-b435-d776f09c5f74" name="GETContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2510</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8f420f5d-7e38-4312-b6b2-d1830d444065" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetLockUrl" id="412684e1-2776-4c97-bc7d-e5fad2dec115"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GETContent#Response}');
def xml = new XmlParser().parseText(response);
def lock_uri;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; 
		it.@'rel'=="http://www.vizrt.com/types/relation/lock")
		lock_uri = it.@'href'};
//log.info 	lock_uri;
context.testCase.testSteps["PostLock"].setPropertyValue("EndPoint",lock_uri);
context.testCase.testSteps["PostLockAgain"].setPropertyValue("EndPoint",lock_uri);
/*
def model = xml.'content'.'vdf:payload'[0].@'model';
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{it.@'model'=model}
log.info xml.'content'[0];
def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(story_xml);
def newXml = stringWriter.toString();
log.info newXml
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);
*/</script></con:config></con:testStep><con:testStep type="httprequest" name="PostLock" id="878bdb12-2ee3-4bd6-92fd-a042be0a1db2"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="c7e7f36f-f30c-4cbf-b110-7ba2fa86325c" name="PostLock" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/lock/article/2510/c2245684</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
  <summary type="text">Lock created by: qa_admin from WS</summary>
  <metadata:fragment>TITLE</metadata:fragment>
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="7b94c778-523a-4a6b-8636-fa7e7266f655" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetPrivateLock" id="d96d50f9-56fa-4fc8-8ebf-954fed57f98e"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["PostLock"].testRequest.response.responseHeaders;
private_lock_uri = httpResponseHeader["Location"][0];
context.testCase.testSteps["ReleaseLock"].setPropertyValue("EndPoint",private_lock_uri);
context.testCase.testSteps["ReleaseLockAgain"].setPropertyValue("EndPoint",private_lock_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="PostLockAgain" id="17219559-f2aa-4df2-8d4b-df007c4cea80"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="19516491-ddfa-4754-9785-7fa6f9738978" name="PostLockAgain" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/lock/article/2510/c2245684</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
  <summary type="text">Lock created by: qa_admin from WS</summary>
  <metadata:fragment>TITLE</metadata:fragment>
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="33568690-e7f3-46a9-b41b-e4de622ecb3c" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","409");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="409")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="ReleaseLock" id="746a5006-958a-4df4-b517-b16631cd2eba"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="a15fe2e2-1d6a-4178-a112-995245e6a1ec" name="ReleaseLock" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/lock/article/2510/private/e51</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3f376c82-0e81-4ac7-8c68-58bb8642c136" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="ReleaseLockAgain" id="571dc90f-cf02-470e-bd62-e88070c4318f"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="fe47b014-534c-478e-9301-0314b89b0e06" name="ReleaseLockAgain" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/lock/article/2510/private/e51</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="56589372-0784-4dff-b94d-c4a2150567a8" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6b358954-8d66-4358-9489-4de08a8f8a21" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SectionAddToAContent" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="8e0f8416-3670-41df-8e7d-86a7ea1b5bcc"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="fc5279a9-fa7d-4d9b-adc7-4bf06616bb4c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="7dbd78ce-04d8-4f4a-b73a-63603aafe354"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;
]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="eff88002-fe1f-4f2e-85d4-9822eebf7da0"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="5b5c7f91-4a1f-4702-b63c-49ec51441391"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="fe33f129-ecdd-4296-a3d6-49340daa1a78"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="51e3db9c-d4df-4a1e-972f-647b9530a853"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="0150f961-e00a-436a-b083-bb0a470e82e6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/content-descriptions/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="02c8372f-e786-426a-bf16-6780e7cdc6be"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="3078c1b9-8be3-4039-836b-e46b2f46e2d5"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetContentURI" id="7572c258-0a94-4788-b40b-a093729fcf58"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def content_uri;
if(httpResponseHeader!=null)
{
	content_uri = httpResponseHeader["Location"][0];
}
context.testCase.testSteps["RetriveContentStory"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["AddSectionToStory"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["TestSectionsOfStory"].setPropertyValue("EndPoint",content_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveContentStory" id="f57df0e1-7991-4c6b-880e-593bd36fdf7b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d8c94b2b-5a5d-41b7-84a8-107a1f48915e" name="RetriveContentStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2511</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9ab91d36-bae0-45c8-a912-e7983cd3653c" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="AddSection" id="d2ab337c-e038-46e5-a4f7-d77b00f2bcc1"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xmlAdd;
def sectionName= new String[100];
def sectionURI= new String[100];
def toAdd;
def homesection;
int idx=0;
int FOUND=0;
int isDifferent(String a,String b)
{
	if(a.length()!=b.length())
	return 1;
	for(int i=0;i<a.length();i++)
	{
		if(a[i]!=b[i])
		return 1;
	}
	return 0;
}
xml.breadthFirst().
each {
		if(it.name().toString().contains("id") && it.value()[0].contains("/section/") && !it.value()[0].contains("subsection"))
		{
			if(idx<100)
			{
				sectionURI[idx] = it.value()[0];
				idx+=1;
			}
		}
	};
//log.info idx;
idx=0;
xml.breadthFirst().
each {
		if(it.@name == "com.escenic.sectionName")
		{
			if(idx<100)
			{
				sectionName[idx] = it.'vdf:value'[0].value()[0].toString();
				idx+=1;
			}
		}
	};
//log.info idx + " = ";
response = context.expand('${RetriveContentStory#Response}');
xml = new XmlParser().parseText(response);
xml.breadthFirst().each
	{
		if(it.@rel=="http://www.vizrt.com/types/relation/section")
		homesection = it.@title;
	};
	
toAdd = '''
	<link rel="http://www.vizrt.com/types/relation/section" href="" title="" type="application/atom+xml; type=entry"/>
	''';
for(int i=0;i<idx;i++)
{
	FOUND=0;
	xmlAdd = new XmlParser().parseText(toAdd);
	xmlAdd.breadthFirst().each
	{
		if(it.name().toString().contains("link"))
		{
			if(isDifferent(homesection,sectionName[i])==1)
			{
				it.@href=sectionURI[i];
				it.@title=sectionName[i];
				FOUND=1;
			}
		}
	};
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("publication") && it.name().toString().contains("metadata") && FOUND==1)
		it.children().add(xmlAdd);
	};
}



def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace = true;
printer.print(xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["AddSectionToStory"].setPropertyValue("Request",newXml);]]></script></con:config></con:testStep><con:testStep type="httprequest" name="AddSectionToStory" id="2b471d6d-eedd-46df-b1d1-ff44ec2854a1"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="71d5456d-4197-451c-881d-388b69318371" name="AddSectionToStory" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2511</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>http://qa-belinda:8080/webservice/escenic/content/2511</id>
  <link rel="self" href="http://qa-belinda:8080/webservice/escenic/content/2511" type="application/atom+xml; type=entry"/>
  <link rel="edit" href="http://qa-belinda:8080/webservice/escenic/content/2511" type="application/atom+xml; type=entry"/>
  <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-belinda:8080/webservice/escenic/lock/article/2511/15a7612" type="application/atom+xml; type=entry"/>
  <dcterms:identifier xmlns:dcterms="http://purl.org/dc/terms/">2511</dcterms:identifier>
  <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>
  <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://qa-belinda:8080/webservice/escenic/publication/qa/" title="qa">
    <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-belinda:8080/webservice/escenic/section/4" title="News" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-belinda:8080/webservice/escenic/section/5" title="Sports" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-belinda:8080/webservice/escenic/section/6" title="Video" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-belinda:8080/webservice/escenic/section/7" title="About" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-belinda:8080/webservice/escenic/section/8" title="Search" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-belinda:8080/webservice/escenic/section/3" title="Config" type="application/atom+xml; type=entry"/>
  </metadata:publication>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-belinda:8080/webservice/escenic/content/2511/log/" type="application/atom+xml; type=entry" title="History"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-belinda:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://belinda.qa.local/incoming/article2511.ece" type="application/xhtml+xml" title="cXense Analytics"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/note/note.html?url=http://qa-belinda:8080/note-webservice/escenic/content/2511/notes" type="application/xhtml+xml" title="Notes"/>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="subtitle"/>
      <vdf:field name="leadtext"/>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
      <vdf:field name="byline"/>
      <vdf:field name="creditLine"/>
      <vdf:field name="overline"/>
      <vdf:field name="datelineTag"/>
      <vdf:field name="shirttail"/>
      <vdf:field name="quote"/>
      <vdf:field name="storyKeywords"/>
      <vdf:field name="originatingURL"/>
      <vdf:field name="priority"/>
      <vdf:field name="indexable"/>
      <vdf:field name="followlinks"/>
      <vdf:field name="copyright"/>
      <vdf:field name="owner"/>
      <vdf:field name="source"/>
      <vdf:field name="layoutVariant"/>
      <vdf:field name="customConfig"/>
      <vdf:field name="com.escenic.tags">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <title type="text">This is a test story title</title>
  <summary type="text"/>
  <link href="http://belinda.qa.local/incoming/article2511.ece" rel="alternate"/>
  <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>
  <app:edited xmlns:app="http://www.w3.org/2007/app">2018-02-27T10:52:11.000Z</app:edited>
  <dcterms:created xmlns:dcterms="http://purl.org/dc/terms/">2018-02-27T10:52:10.000Z</dcterms:created>
  <metadata:reference xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="82670777-d739-4094-9be9-55b22bc35b18"/>
  <author>
    <name>qa Administrator</name>
    <uri>http://qa-belinda:8080/webservice/escenic/person/1</uri>
  </author>
  <metadata:creator xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:creator>
  <metadata:last-edited-by xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:last-edited-by>
  <app:control xmlns:app="http://www.w3.org/2007/app">
    <app:draft>yes</app:draft>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext" name="draft" href="http://qa-belinda:8080/webservice/escenic/content/state/draft/editor"/>
  </app:control>
  <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  <link rel="usage" href="http://qa-belinda:8080/webservice/publication/qa/usage/article/2511" type="text/uri-list" title="Incoming Links"/>
  <link href="http://qa-belinda:8080/webservice/escenic/content/2511/preview" rel="http://www.vizrt.com/types/relation/preview"/>
  <link href="http://qa-belinda:8080/webservice/escenic/content/2511/log" rel="http://www.vizrt.com/types/relation/log"/>
  <link href="http://qa-belinda:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="b846cc6c-84dc-42a9-98f1-b724060a29ba" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="TestSectionsOfStory" id="3b54f965-3ccd-4779-8fd3-4cea33c13a52"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d8c94b2b-5a5d-41b7-84a8-107a1f48915e" name="TestSectionsOfStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2511</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9ab91d36-bae0-45c8-a912-e7983cd3653c" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
int result;
int isEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
int CountAddedSection(response)
{
	def xml = new XmlParser().parseText(response);
	int c=0;
	xml.breadthFirst().each
	{
		if(it.@rel == "http://www.vizrt.com/types/relation/section")
		c+=1;
	};
	return c;
}
/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def res = context.expand('${TestSectionsOfStory#Response}');
	def req = context.expand('${AddSectionToStory#Request}');
	a = CountAddedSection(res);
	b = CountAddedSection(req);

	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult",a.toString() + " Sections are added.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",a.toString() + " Sections are added.");
	if(a==b)
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",a.toString() + " Sections are added.And "+ b.toString()+" Sections are requested to add.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9f6ad3e8-8d86-42e6-bb40-73b624902669" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetHomeSectionToAContent" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="84d18947-9e3e-4adc-b5fb-4a1ce2ceec2c"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="0243cbf7-c54e-4691-946a-be3a1105e5f1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="e635f9c7-21dd-45aa-a81e-37d564724a0a"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;
]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="4d9777a5-de82-4485-b787-c2e6b96714e9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="4f63ec17-c3bd-40a6-90a0-7d77d8e65818"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="9be63d30-54a3-4edb-a325-d5aeec58be26"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="aa340479-7d31-4d34-a3c9-546b657626f3"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="08098ced-5b78-49b0-8e4b-93a6bb730598"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/content-descriptions/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="ee5d3d65-da3a-473a-bad1-aebbc0a75ce1"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="eca63a9a-e204-4bcf-bbc0-bd4407b89256"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetContentURI" id="6f61ef3d-0cbb-4f3d-b6b9-cf5a9ecfd58c"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def content_uri;
if(httpResponseHeader!=null)
{
	content_uri = httpResponseHeader["Location"][0];
}
context.testCase.testSteps["RetriveContentStory"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["SetHomeSectionToStory"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["TestHomeSection"].setPropertyValue("EndPoint",content_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveContentStory" id="484a33c3-8b18-4b65-a19c-797da4df9ba7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d8c94b2b-5a5d-41b7-84a8-107a1f48915e" name="RetriveContentStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2512</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9ab91d36-bae0-45c8-a912-e7983cd3653c" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetHomeSection" id="1eab3630-99fb-4810-9ebb-3fc071fca99d"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xmlAdd;
def sectionName= new String[100];
def sectionURI= new String[100];
def toAdd;
def homesection;
def newHomeSectionTitle;
def newHomeSectionURI;
int idx=0;
int FOUND=0;
int isDifferent(String a,String b)
{
	if(a.length()!=b.length())
	return 1;
	for(int i=0;i<a.length();i++)
	{
		if(a[i]!=b[i])
		return 1;
	}
	return 0;
}
xml.breadthFirst().
each {
		if(it.name().toString().contains("id") && it.value()[0].contains("/section/") && !it.value()[0].contains("subsection"))
		{
			if(idx<100)
			{
				sectionURI[idx] = it.value()[0];
				idx+=1;
			}
		}
	};
//log.info idx;
idx=0;
xml.breadthFirst().
each {
		if(it.@name == "com.escenic.sectionName")
		{
			if(idx<100)
			{
				sectionName[idx] = it.'vdf:value'[0].value()[0].toString();
				idx+=1;
			}
		}
	};
//log.info idx + " = ";
response = context.expand('${RetriveContentStory#Response}');
xml = new XmlParser().parseText(response);
xml.breadthFirst().each
	{
		if(it.@rel=="http://www.vizrt.com/types/relation/section")
		homesection = it.@title;
	};
	
toAdd = '''
	<link rel="http://www.vizrt.com/types/relation/section" href="" title="" type="application/atom+xml; type=entry"/>
	''';
FOUND=0;

for(int i=0;i<idx;i++)
{
	xmlAdd = new XmlParser().parseText(toAdd);
	xmlAdd.breadthFirst().each
	{
		if(it.name().toString().contains("link"))
		{
			if(isDifferent(homesection,sectionName[i])==1)
			{
				it.@href=sectionURI[i];
				it.@title=sectionName[i];
				newHomeSectionTitle=sectionName[i];
				newHomeSectionURI=sectionURI[i];
				FOUND=1;
				
			}
		}
	};
}

if(idx<2)
{
	newHomeSectionTitle=sectionName[0];
	newHomeSectionURI=sectionURI[0];
}
xml.breadthFirst().each
	{
		if(it.name().toString().contains("publication") && it.name().toString().contains("metadata") && FOUND==1)
		it.children().add(xmlAdd);
	};

xml.breadthFirst().each
	{
		if(it.name().toString().contains("link") && it.@rel=="http://www.vizrt.com/types/relation/home-section")
		{
			it.@href=newHomeSectionURI;
			it.@title=newHomeSectionTitle;
		}
	};
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace = true;
printer.print(xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["SetHomeSectionToStory"].setPropertyValue("Request",newXml);]]></script></con:config></con:testStep><con:testStep type="httprequest" name="SetHomeSectionToStory" id="6ae493b8-d662-424a-b954-fe5ea80afde0"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="71d5456d-4197-451c-881d-388b69318371" name="SetHomeSectionToStory" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2512</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>http://qa-belinda:8080/webservice/escenic/content/2512</id>
  <link rel="self" href="http://qa-belinda:8080/webservice/escenic/content/2512" type="application/atom+xml; type=entry"/>
  <link rel="edit" href="http://qa-belinda:8080/webservice/escenic/content/2512" type="application/atom+xml; type=entry"/>
  <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-belinda:8080/webservice/escenic/lock/article/2512/6a698e63" type="application/atom+xml; type=entry"/>
  <dcterms:identifier xmlns:dcterms="http://purl.org/dc/terms/">2512</dcterms:identifier>
  <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>
  <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://qa-belinda:8080/webservice/escenic/publication/qa/" title="qa">
    <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-belinda:8080/webservice/escenic/section/3" title="Config" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-belinda:8080/webservice/escenic/section/3" title="Config" type="application/atom+xml; type=entry"/>
  </metadata:publication>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-belinda:8080/webservice/escenic/content/2512/log/" type="application/atom+xml; type=entry" title="History"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-belinda:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://belinda.qa.local/incoming/article2512.ece" type="application/xhtml+xml" title="cXense Analytics"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/note/note.html?url=http://qa-belinda:8080/note-webservice/escenic/content/2512/notes" type="application/xhtml+xml" title="Notes"/>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="subtitle"/>
      <vdf:field name="leadtext"/>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
      <vdf:field name="byline"/>
      <vdf:field name="creditLine"/>
      <vdf:field name="overline"/>
      <vdf:field name="datelineTag"/>
      <vdf:field name="shirttail"/>
      <vdf:field name="quote"/>
      <vdf:field name="storyKeywords"/>
      <vdf:field name="originatingURL"/>
      <vdf:field name="priority"/>
      <vdf:field name="indexable"/>
      <vdf:field name="followlinks"/>
      <vdf:field name="copyright"/>
      <vdf:field name="owner"/>
      <vdf:field name="source"/>
      <vdf:field name="layoutVariant"/>
      <vdf:field name="customConfig"/>
      <vdf:field name="com.escenic.tags">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <title type="text">This is a test story title</title>
  <summary type="text"/>
  <link href="http://belinda.qa.local/incoming/article2512.ece" rel="alternate"/>
  <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>
  <app:edited xmlns:app="http://www.w3.org/2007/app">2018-02-27T10:52:14.000Z</app:edited>
  <dcterms:created xmlns:dcterms="http://purl.org/dc/terms/">2018-02-27T10:52:13.000Z</dcterms:created>
  <metadata:reference xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="28f1e070-447e-4c54-a78f-b2130262ddbd"/>
  <author>
    <name>qa Administrator</name>
    <uri>http://qa-belinda:8080/webservice/escenic/person/1</uri>
  </author>
  <metadata:creator xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:creator>
  <metadata:last-edited-by xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:last-edited-by>
  <app:control xmlns:app="http://www.w3.org/2007/app">
    <app:draft>yes</app:draft>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext" name="draft" href="http://qa-belinda:8080/webservice/escenic/content/state/draft/editor"/>
  </app:control>
  <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-belinda:8080/webservice/escenic/section/3" title="Config" type="application/atom+xml; type=entry"/>
  <link rel="usage" href="http://qa-belinda:8080/webservice/publication/qa/usage/article/2512" type="text/uri-list" title="Incoming Links"/>
  <link href="http://qa-belinda:8080/webservice/escenic/content/2512/preview" rel="http://www.vizrt.com/types/relation/preview"/>
  <link href="http://qa-belinda:8080/webservice/escenic/content/2512/log" rel="http://www.vizrt.com/types/relation/log"/>
  <link href="http://qa-belinda:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="b846cc6c-84dc-42a9-98f1-b724060a29ba" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="TestHomeSection" id="3e09b9e2-e8af-4bce-bd59-7c5375377337"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d8c94b2b-5a5d-41b7-84a8-107a1f48915e" name="TestHomeSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2512</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9ab91d36-bae0-45c8-a912-e7983cd3653c" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
int result;
int isEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
String FindHomeSection(response)
{
	def xml = new XmlParser().parseText(response);
	String homesection;
	xml.breadthFirst().each
	{
		if(it.@rel == "http://www.vizrt.com/types/relation/home-section")
		homesection = it.@href;
	};
	return homesection ;
}
/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def res = context.expand('${TestHomeSection#Response}');
	def req = context.expand('${SetHomeSectionToStory#Request}');
	a = FindHomeSection(res);
	b = FindHomeSection(req);
	result = isEqual(a,b);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Home Section is updated properly.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Home Section is updated properly.");
	if(result==1)
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Home Section is not updated properly.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="af48085c-cdcc-47d9-a9eb-66b51813fbf9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestGroupsForContentTypes-VF-6345" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="80675226-621d-40b4-a7c2-eb6f0f624f3f"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="e1623c0f-2446-4533-8f7a-23349a3b12fb"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDescriptionURI" id="45496d99-ef88-4afe-8fcc-2111ef20fd88"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="913dc7fd-3638-4548-a03c-325885ce9be7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="d141d1aa-d83b-4b7c-b458-32610655b5ea"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def project = testRunner.testCase.testSuite.project;
def suiteName = context.testCase.testSuite.name;
def testcaseName = context.testCase.name;
def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');
def content_description_uri,root_section_uri,model,tmp;

def ListModel = new String[200];
int idx = 0;
int index = response.indexOf("http");
response = response.toString().substring(index);
int startIndex,lastIndex;
while(response.size())
{
	startIndex = index;
	lastIndex = response.indexOf('\n');
	if(lastIndex>0 &amp;&amp; startIndex&lt;lastIndex)
	{
		ListModel[idx] = response.substring(startIndex,lastIndex);
		idx+=1;
		response = response.substring(lastIndex+1);
		index = response.indexOf("http");
	}
}

/*
for(int i=0;i&lt;idx;i++)
{
	context.testCase.testSteps["CheckContentType"].setPropertyValue("EndPoint",ListModel[i]);
	testRunner.runTestStep(project.testSuites[suiteName].testCases[testcaseName].testSteps['CheckContentType']);
}
*/

for(int i=0;i&lt;idx;i++)
{
	if(ListModel[i].contains("event"))
	{
		context.testCase.testSteps["CheckContentType"].setPropertyValue("EndPoint",ListModel[i]);
		break;
	}
}
</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckContentType" id="46ccbe89-a344-48e1-882a-a28b1f9c46bf"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="07b598b9-181a-49b5-bb26-657ead1b491a" name="CheckContentType" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/event
</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="cf421b8c-20ed-436a-8c4d-66bd168743f7" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps["CheckContentType"].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


int CheckGroupUI(response)
{
	if(response.contains("ui:group"))
	return 1;
	return 0;
}

String GetContentName(endPoint)
{
	int len = endPoint.toString().length();
	int j;
	for(int i=len-1;i>=0;i--)
	{
		if(i!=len-1 &amp;&amp; endPoint[i]=='/')
		{
			j=i;
			break;
		}
	}
	def name = endPoint.substring(j+1);
	return name;
}
def endPoint = context.expand('${CheckContentType#EndPoint}');
def contentType = GetContentName(endPoint);//endPoint.substring(endPoint.indexOf("content-type")+"content-type/".length());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name","CheckContentType-"+contentType);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);

if(httpStatusCode=="200")
{
	def response = context.expand('${CheckContentType#Response}');
	int res = CheckGroupUI(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","ui:group Found.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","ui:group Found.");
	if(res==1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","ui:group not Found.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="fdbde1de-2c2c-4e5d-8674-84779eeffd1d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="IsSourceIDEditable-VF-2416" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="b71d8c65-4394-41e6-8e09-7233e62f7e9f"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="fa1a217e-a818-4bf9-8eae-faabad2a839a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDescriptionURI" id="0cdc6c34-7fc4-407a-a855-b0e888356df3"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="c632167a-6167-492f-9524-9f8bc983f453"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="0deff7cd-f0bf-4278-9e41-62048e306740"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/content-descriptions/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="f61936ef-7c50-46f0-843c-f31e8ebaf726"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="b113e980-a988-4760-bd8e-8f5e51cb87fa"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetContentURI" id="03159f30-549d-4e30-8f9b-9435173ad44b"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def content_uri;
if(httpResponseHeader!=null)
{
	content_uri = httpResponseHeader["Location"][0];
}
context.testCase.testSteps["RetriveContentStory"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["UpdateSourceID"].setPropertyValue("EndPoint",content_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveContentStory" id="f0b1aef4-e8a6-44da-9b83-5865dc03ad7f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d8c94b2b-5a5d-41b7-84a8-107a1f48915e" name="RetriveContentStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2513</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9ab91d36-bae0-45c8-a912-e7983cd3653c" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="EditSourceID" id="75ed9c27-6b57-4db1-ac1a-5f4a3e497191"><con:settings/><con:config><script>def response = context.expand('${RetriveContentStory#Response}');
def xml = new XmlParser().parseText(response);

xml.breadthFirst().each
{
	if(it.name().toString().contains("metadata") &amp;&amp; it.name().toString().contains("reference"))
	{
		it.@source="edited-source";
		it.@sourceid="xxx-yyy-edited-sourceid";
	}
};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(xml);
String newXml = stringWriter.toString();
context.testCase.testSteps["UpdateSourceID"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="UpdateSourceID" id="de83299e-b72c-404a-987e-820852ca091e"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="b08f0de6-19eb-418a-9295-0838b47dfd5f" name="UpdateSourceID" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2513</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>http://qa-belinda:8080/webservice/escenic/content/2513</id>
  <link rel="self" href="http://qa-belinda:8080/webservice/escenic/content/2513" type="application/atom+xml; type=entry"/>
  <link rel="edit" href="http://qa-belinda:8080/webservice/escenic/content/2513" type="application/atom+xml; type=entry"/>
  <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-belinda:8080/webservice/escenic/lock/article/2513/deb861d2" type="application/atom+xml; type=entry"/>
  <dcterms:identifier xmlns:dcterms="http://purl.org/dc/terms/">2513</dcterms:identifier>
  <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>
  <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://qa-belinda:8080/webservice/escenic/publication/qa/" title="qa">
    <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  </metadata:publication>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-belinda:8080/webservice/escenic/content/2513/log/" type="application/atom+xml; type=entry" title="History"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-belinda:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://belinda.qa.local/incoming/article2513.ece" type="application/xhtml+xml" title="cXense Analytics"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/note/note.html?url=http://qa-belinda:8080/note-webservice/escenic/content/2513/notes" type="application/xhtml+xml" title="Notes"/>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="subtitle"/>
      <vdf:field name="leadtext"/>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
      <vdf:field name="byline"/>
      <vdf:field name="creditLine"/>
      <vdf:field name="overline"/>
      <vdf:field name="datelineTag"/>
      <vdf:field name="shirttail"/>
      <vdf:field name="quote"/>
      <vdf:field name="storyKeywords"/>
      <vdf:field name="originatingURL"/>
      <vdf:field name="priority"/>
      <vdf:field name="indexable"/>
      <vdf:field name="followlinks"/>
      <vdf:field name="copyright"/>
      <vdf:field name="owner"/>
      <vdf:field name="source"/>
      <vdf:field name="layoutVariant"/>
      <vdf:field name="customConfig"/>
      <vdf:field name="com.escenic.tags">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <title type="text">This is a test story title</title>
  <summary type="text"/>
  <link href="http://belinda.qa.local/incoming/article2513.ece" rel="alternate"/>
  <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>
  <app:edited xmlns:app="http://www.w3.org/2007/app">2018-02-27T10:54:00.000Z</app:edited>
  <dcterms:created xmlns:dcterms="http://purl.org/dc/terms/">2018-02-27T10:54:00.000Z</dcterms:created>
  <metadata:reference xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" source="edited-source" sourceid="xxx-yyy-edited-sourceid"/>
  <author>
    <name>qa Administrator</name>
    <uri>http://qa-belinda:8080/webservice/escenic/person/1</uri>
  </author>
  <metadata:creator xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:creator>
  <metadata:last-edited-by xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:last-edited-by>
  <app:control xmlns:app="http://www.w3.org/2007/app">
    <app:draft>yes</app:draft>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext" name="draft" href="http://qa-belinda:8080/webservice/escenic/content/state/draft/editor"/>
  </app:control>
  <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  <link rel="usage" href="http://qa-belinda:8080/webservice/publication/qa/usage/article/2513" type="text/uri-list" title="Incoming Links"/>
  <link href="http://qa-belinda:8080/webservice/escenic/content/2513/preview" rel="http://www.vizrt.com/types/relation/preview"/>
  <link href="http://qa-belinda:8080/webservice/escenic/content/2513/log" rel="http://www.vizrt.com/types/relation/log"/>
  <link href="http://qa-belinda:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="da289cde-53d9-44c4-93c8-2c2fad85d349" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","400 - source and sourceid of article is not editable.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode.toString()+" - source and sourceid of article is not editable.");
if(httpStatusCode=="400")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode.toString()+" - source and sourceid of article is editable.");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ddf46c36-3a80-4a3d-9b6b-3d3e5adb1fb8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestVDFPayLoadInsideAtom-VF-2425" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="d1201432-efec-4e14-bacb-d9723049b5d4"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="ba3ef890-4d88-4b94-9c0c-07295e70a0ce"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDescriptionURI" id="f9ed163f-02c2-4f1f-ac02-69eb0017f499"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="68acf4b9-12a0-4b3f-81ab-589dbb25495a"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="84ff509d-ea89-4cbf-b195-51807476b901"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/content-descriptions/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="0114159c-9769-4e24-b75b-4e4151780fe6"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="fbab0c80-840d-4a41-ad06-c360df7b66f8"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetContentURI" id="7e5ffa89-6339-46a7-a6bf-789b0a5e046d"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def content_uri;
if(httpResponseHeader!=null)
{
	content_uri = httpResponseHeader["Location"][0];
}
context.testCase.testSteps["CheckVDFPayload"].setPropertyValue("EndPoint",content_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckVDFPayload" id="7588bbd1-0d7c-4450-8947-d8350f5186fc"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d8c94b2b-5a5d-41b7-84a8-107a1f48915e" name="CheckVDFPayload" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2514</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9ab91d36-bae0-45c8-a912-e7983cd3653c" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

int checkContentType(response)
{
	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project

	def xml = new XmlParser().parseText(response);
	int res = 0;
	def type;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("content"))
		{
			if(it.@type=="application/vnd.vizrt.payload+xml")
			{
				res = 1;
				type=it.@type;	
			}
		}
		
	};

	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","&lt;content type=\"application/vnd.vizrt.payload+xml\">");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","&lt;content type=\""+type+"\">");
	return res;
}
/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${CheckVDFPayload#Response}');
	int result = checkContentType(response);
	if(result==1)
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	else
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b6d1a7d5-7c51-43bc-9113-39320713a123" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestUIHintInModels-VF-5611" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="192aa2a0-bca1-4584-aac3-b5b0b7d44c39"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="fcbbc16a-9fe2-479a-ab1d-4ad1fa333de3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>false</con:preemptive><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetModelURI" id="1adbd665-a46f-4539-94d7-d911c5b5306f"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}

context.testCase.testSteps["GetModel"].setPropertyValue("Endpoint",content_description_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModel" id="30ab6a9d-3aa8-471f-839c-0d7bc4b2dc68"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="169c2de7-955e-4c6f-ade1-e1335084c24b" name="GetModel" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/content-descriptions/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5653be1f-a84f-4f1d-bc28-cadbaae1b3ac" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseModels" id="30ee9b4a-b6f6-4378-89e6-e7f434a4996c"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

def response = context.expand('${GetModel#Response}');
def models = new String [1000];
int startIndex = response.indexOf("http:");
int lastIndex = response.indexOf("\n");
int idx = 0;
def endPoint;
while(response.size())
{
	if(lastIndex>=0 &amp;&amp; lastIndex>=startIndex)
	{
		models[idx]=response.substring(startIndex,lastIndex);
		//log.info models[idx];
		idx+=1;
	}
	if(lastIndex&lt;response.size())
	{
		response = response.substring(lastIndex+1);
		startIndex = response.indexOf("http:");
		lastIndex = response.indexOf("\n");
	}
}

for(int i=0;i&lt;idx;i++)
{
	context.testCase.testSteps["CheckUIHintsInModels"].setPropertyValue("Endpoint",models[i]);
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CheckUIHintsInModels'])
}</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckUIHintsInModels" id="6b131b5c-dc0e-44ae-a94c-75af36b63793"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e183b791-73bb-4114-a939-dab837ae5e1c" name="CheckUIHintsInModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/publication/qa/model/com.escenic.index-page
</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="ad311bd8-4c52-4fc4-aba4-2c75d478682b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps["CheckUIHintsInModels"].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int CheckUIHints(response)
{
	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","UI hints with \"http://xmlns.escenic.com/2008/interface-hints\" attribute is not found.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","UI hints with \"http://xmlns.escenic.com/2008/interface-hints\" attribute is not found.");
	if(response.contains("xmlns:ui=\"http://xmlns.escenic.com/2008/interface-hints\"")==true)
	return 1;
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","UI hints with \"http://xmlns.escenic.com/2008/interface-hints\" attribute is not found.");
	return 0;
}
/* ****ASSERT STATUS CODE   ******** */
def GetModelName = context.expand('${CheckUIHintsInModels#EndPoint}');
int idx = GetModelName.indexOf("model/")+"model/".length();
GetModelName = GetModelName.substring(idx);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",GetModelName+" - CheckUIHintsInModels");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${CheckUIHintsInModels#Response}');
	int res = CheckUIHints(response);
	if(res==1)
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	else
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9d2ecc72-aab8-44d5-aa85-5a205b5f381d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreatorEntryRemoves-VF-6119" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="3c658497-cce1-4954-8049-b4f854962a68"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="76719005-5783-432c-824e-3280a85a8c35"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDescriptionURI" id="62706021-7cbc-4db8-8176-760429b1ae1e"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="e3e3b358-ab9a-44fb-a78b-940675127c87"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="87bc06a4-d753-4fbe-9a82-b7a5265e163a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/content-descriptions/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="3b2be178-79a4-4f38-bdbb-568bb0f22817"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetPersonModelAndWebservice" id="903be67d-16cf-4bab-9efc-76f0e7408c22"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');
def content_description_uri,root_section_uri,model,tmp;
int Found=0;
def str1;
def str2;
def person_model;
def person_create_webservice;

while(Found==0)
{
	int Index_newLine = response.indexOf("\n");
	str1 = response.substring(0,Index_newLine);
	if(Index_newLine&lt;response.size())
	{
		str2 = response.substring(Index_newLine+1);
	}
	if(str1.contains("person"))
	{
		person_model = str1;
		break;
	}
	response=str2;
}
person_model = person_model.substring(person_model.indexOf("http"));
person_model = person_model.substring(0 , person_model.indexOf("person")+"person".length());

log.info person_model;

def request = context.expand('${CreatePerson#Request}');
def person_xml = new XmlParser().parseText(request);
person_xml.breadthFirst().each
{
	if(it.@model!=null)
	{
		it.@model=person_model;
		log.info it.@model+"edit";
	}
}

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(person_xml);
def newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreatePerson"].setPropertyValue("Request",newXml);

response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("person") &amp;&amp; Found==0)
		{
			person_create_webservice = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!person_create_webservice.contains(host))
{
	int index = person_create_webservice.indexOf("webservice")+"webservice".length();
	person_create_webservice = host + person_create_webservice.substring(index);
}
context.testCase.testSteps["CreatePerson"].setPropertyValue("EndPoint",person_create_webservice);
log.info person_create_webservice;</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="53df47e6-c93e-4689-9986-4c8e669d8e72"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetContentURI" id="0c297407-c395-4363-bbf8-0761e66300f4"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def content_uri;
if(httpResponseHeader!=null)
{
	content_uri = httpResponseHeader["Location"][0];
}
context.testCase.testSteps["RetriveContentStory"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["ChangeByLineAuthor"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["TestIFContentCreatorRemoved"].setPropertyValue("EndPoint",content_uri);</script></con:config></con:testStep><con:testStep type="groovy" name="SetPersonName" id="bf03aca0-8ff5-4830-8659-1de26bb16442"><con:settings/><con:config><script>String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.SECOND)+"-"+calendar.get(Calendar.MILLISECOND);
	return time;
}

String surname = "ByLineAuthor-"+GetTime();
def request = context.expand('${CreatePerson#Request}');
def person_xml = new XmlParser().parseText(request);
person_xml.breadthFirst().each
{
	if(it.@name.toString().contains("surName"))
	it.'vdf:value'[0].value=surname;
}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(person_xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["CreatePerson"].setPropertyValue("Request",newXml);

log.info GetTime();</script></con:config></con:testStep><con:testStep type="httprequest" name="CreatePerson" id="49c4e341-6bbf-42ba-9f57-42fac01820ab"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="b77e8f63-c621-42f3-9602-e3fbc331665a" name="CreatePerson" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/escenic/person</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.person">
      <vdf:field name="com.escenic.username"/>
      <vdf:field name="com.escenic.firstName">
        <vdf:value>personname</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.surName">
        <vdf:value>ByLineAuthor-0-590</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.occupation"/>
      <vdf:field name="com.escenic.address"/>
      <vdf:field name="com.escenic.postalcode"/>
      <vdf:field name="com.escenic.city"/>
      <vdf:field name="com.escenic.phonework"/>
      <vdf:field name="com.escenic.phonemobile"/>
      <vdf:field name="com.escenic.phoneprivate"/>
      <vdf:field name="com.escenic.emailaddress"/>
    </vdf:payload>
  </content>
  <title type="text">QA-Admin-Test</title>
  <summary type="text">QA-Admin-Test</summary>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://host-ip-address/webservice/escenic/publication/qa/" title="test"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8fbdecdb-027a-46fb-a215-538958d2d1ef" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveContentStory" id="6502871a-5053-4b46-ba0e-c11d68b49b28"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d8c94b2b-5a5d-41b7-84a8-107a1f48915e" name="RetriveContentStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2515</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9ab91d36-bae0-45c8-a912-e7983cd3653c" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="EditByLineAuthorOfStory" id="327c6cde-9b0e-44a2-aba9-3a942d458896"><con:settings/><con:config><script>def response = context.expand('${RetriveContentStory#Response}');
def xml = new XmlParser().parseText(response);

def PersonResponse = context.testCase.testSteps["CreatePerson"].testRequest.response.responseHeaders;
def PersonUri = PersonResponse["Location"][0];
def PersonReq = context.expand('${CreatePerson#Request}');
def PersonXml = new XmlParser().parseText(PersonReq);
def PersonName;
PersonXml.breadthFirst().each
{
	if(it.@name=="com.escenic.surName")
	{
		PersonName = it.children()[0].value()[0];
	}
};


xml.breadthFirst().each
{
	if(it.name().toString().contains("author"))
	{
		for(s in it.children())
		{
			if(s.name().toString().contains("name"))
			{
				s.value = PersonName;
			}
			if(s.name().toString().contains("uri"))
			{
				s.value = PersonUri;
			}
		}
	}
};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["ChangeByLineAuthor"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="ChangeByLineAuthor" id="aa998abc-d658-41cc-9a42-766bd27eef4a"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="f46ab7d5-ab23-4341-8a14-db9fb543e5dd" name="ChangeByLineAuthor" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2515</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>http://qa-belinda:8080/webservice/escenic/content/2515</id>
  <link rel="self" href="http://qa-belinda:8080/webservice/escenic/content/2515" type="application/atom+xml; type=entry"/>
  <link rel="edit" href="http://qa-belinda:8080/webservice/escenic/content/2515" type="application/atom+xml; type=entry"/>
  <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-belinda:8080/webservice/escenic/lock/article/2515/f18132ed" type="application/atom+xml; type=entry"/>
  <dcterms:identifier xmlns:dcterms="http://purl.org/dc/terms/">2515</dcterms:identifier>
  <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>
  <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://qa-belinda:8080/webservice/escenic/publication/qa/" title="qa">
    <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  </metadata:publication>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-belinda:8080/webservice/escenic/content/2515/log/" type="application/atom+xml; type=entry" title="History"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-belinda:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://belinda.qa.local/incoming/article2515.ece" type="application/xhtml+xml" title="cXense Analytics"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-belinda:8080/webservice-extensions/note/note.html?url=http://qa-belinda:8080/note-webservice/escenic/content/2515/notes" type="application/xhtml+xml" title="Notes"/>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="subtitle"/>
      <vdf:field name="leadtext"/>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
      <vdf:field name="byline"/>
      <vdf:field name="creditLine"/>
      <vdf:field name="overline"/>
      <vdf:field name="datelineTag"/>
      <vdf:field name="shirttail"/>
      <vdf:field name="quote"/>
      <vdf:field name="storyKeywords"/>
      <vdf:field name="originatingURL"/>
      <vdf:field name="priority"/>
      <vdf:field name="indexable"/>
      <vdf:field name="followlinks"/>
      <vdf:field name="copyright"/>
      <vdf:field name="owner"/>
      <vdf:field name="source"/>
      <vdf:field name="layoutVariant"/>
      <vdf:field name="customConfig"/>
      <vdf:field name="com.escenic.tags">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <title type="text">This is a test story title</title>
  <summary type="text"/>
  <link href="http://belinda.qa.local/incoming/article2515.ece" rel="alternate"/>
  <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>
  <app:edited xmlns:app="http://www.w3.org/2007/app">2018-02-27T10:54:56.000Z</app:edited>
  <dcterms:created xmlns:dcterms="http://purl.org/dc/terms/">2018-02-27T10:54:56.000Z</dcterms:created>
  <metadata:reference xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="62fe2cc8-5f31-49bf-88d7-cf2a134fe144"/>
  <author>
    <name>ByLineAuthor-0-590</name>
    <uri>http://qa-belinda:8080/webservice/escenic/person/220</uri>
  </author>
  <metadata:creator xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:creator>
  <metadata:last-edited-by xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:last-edited-by>
  <app:control xmlns:app="http://www.w3.org/2007/app">
    <app:draft>yes</app:draft>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext" name="draft" href="http://qa-belinda:8080/webservice/escenic/content/state/draft/editor"/>
  </app:control>
  <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-belinda:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  <link rel="usage" href="http://qa-belinda:8080/webservice/publication/qa/usage/article/2515" type="text/uri-list" title="Incoming Links"/>
  <link href="http://qa-belinda:8080/webservice/escenic/content/2515/preview" rel="http://www.vizrt.com/types/relation/preview"/>
  <link href="http://qa-belinda:8080/webservice/escenic/content/2515/log" rel="http://www.vizrt.com/types/relation/log"/>
  <link href="http://qa-belinda:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="19c6a2e2-e73f-4ad1-81e5-5531ea73ee46" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="204")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="TestIFContentCreatorRemoved" id="a74044b8-e055-4962-a181-5f6f81a8d952"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d8c94b2b-5a5d-41b7-84a8-107a1f48915e" name="TestIFContentCreatorRemoved" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/content/2515</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9ab91d36-bae0-45c8-a912-e7983cd3653c" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);


int IsContentCreatorFound(response)
{
	def xml = new XmlParser().parseText(response);
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("creator") &amp;&amp; it.name().toString().contains("metadata"))
		{
			for(s in it.children())
			{
				if(s.name().toString().contains("name"))
				{
					if(s.value())
					{
						FOUND=1;
						log.info s.value()[0];
					}
				}
			}
		}
	};
	return FOUND;
}


def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${TestIFContentCreatorRemoved#Response}');
	int result = IsContentCreatorFound(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Creator not removed after editing byline author.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Creator not removed after editing byline author.");
	if(result)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Creator removed after editing byline author.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="751c48f9-f762-4490-9d8e-2d509fbcb0e5" name="ListTest"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="6d5a0399-af92-4df8-8bc0-4b616bbb7b0b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ListCreateGetDeleteTest_backup" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="40097be0-f241-452b-845c-1e7a5d070cce"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String homeUrl = xml.'homeUrl_for_Eng_6';
String rootUrl = xml.'rootUrl_for_Eng_6';
String user = xml.'user';
String password = xml.'password';
String url = server+rootUrl;//homeUrl;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetPublication"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetPublication" id="d77df7a1-ef10-4ab4-9d78-6e02c2a6fffb"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="f39e9731-819f-4060-815a-8ba5af999e05" name="GetPublication" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/1</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="40930089-7fdb-41a5-a56d-d860aa6ffc6e" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="83c336b1-296c-43c0-99ad-740ec9c051b4"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetPublication#Response}');
def xml = new XmlParser().parseText(response);

def root = xml.'link';
String SectionUri,SectionPage;
for(int i=0;i&lt;root.size();i++)
{
	if(root[i].@'rel'=="down")
	{
		SectionUri = root[i].@'href';
	}
	if(root[i].@'rel'=='http://www.vizrt.com/types/relation/pages')
	{
		s=root[i].@'href';
		if(s.contains("/section/"))
		SectionPage=root[i].@'href';
	}
}	
log.info SectionUri;
log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="0369bb43-8f6e-40b1-aec9-a588e508ace1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetListURI" id="266c4da5-0bca-4c79-bc76-de12d9d01a7a"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def List_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
		it.@'rel'=="http://www.vizrt.com/types/relation/lists" &&
		it.@'href'.toString().contains("lists")
		&& FOUND==0
		) {FOUND=1;List_URI = it.@'href';}};

context.testCase.testSteps["CreateList"].setPropertyValue("EndPoint",List_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetListName" id="cef14b35-3e45-4363-951e-24012e64079b"><con:settings/><con:config><script>String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

String listname = "ListTest"+GetTime();
def request = context.expand('${CreateList#Request}');
def list_xml = new XmlParser().parseText(request);
list_xml.'title'.each{it.value=listname.toString()};

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(list_xml);
def newXml = stringWriter.toString();
//newXml.replace("&lt;entry","asdas");
log.info newXml

context.testCase.testSteps["CreateList"].setPropertyValue("Request",newXml);

log.info GetTime();</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateList" id="43b48692-28ec-4ba8-8054-2c48c8712d77"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateList" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/53/lists</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <title type="text">
    ListTest9:25:38:966
  </title>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types">
      <vdf:field name="com.escenic.name">
        <vdf:value>
          testlist
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedListURI" id="48261297-78bc-4ce4-b622-3c05f4575307"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateList"].testRequest.response.responseHeaders;
list_uri = httpResponseHeader["Location"][0];
context.testCase.testSteps["GetList"].setPropertyValue("EndPoint",list_uri);
context.testCase.testSteps["DeleteList"].setPropertyValue("EndPoint",list_uri);
context.testCase.testSteps["DeleteListAgain"].setPropertyValue("EndPoint",list_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetList" id="aa5c3a0e-9721-4519-8cf2-15a63a6aa18d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="29e5663e-0db2-4c34-b42e-cd2c4d306551" name="GetList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list/258</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="215cfc06-5076-4947-a0ab-3fa766120aa7" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteList" id="637aafe1-feb4-4403-afaf-c8ae99900c9f"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="881aed3e-68d3-48bd-90b9-f0d4f6fd5c9c" name="DeleteList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list/258</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="c123d022-65de-4cd3-8e9e-066b1c2da9e6" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteListAgain" id="c9184ff1-e563-4dc4-b404-ba9fe1cefdee"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="4bfa0d7a-0f6a-4cc6-ac09-e2e73b3783ca" name="DeleteListAgain" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list/258</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e761efbf-1492-43b5-846f-012c17aab68f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="307afb50-180e-4bb6-a894-9b1a06dd0ad7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ListRename_backup" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="4dc2f844-af0c-45e6-ae95-058214db82cf"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String homeUrl = xml.'homeUrl_for_Eng_6';
String rootUrl = xml.'rootUrl_for_Eng_6';
String user = xml.'user';
String password = xml.'password';
String url = server+rootUrl;//homeUrl;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetPublication"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetPublication" id="b8fd6291-f5ae-4e41-98ec-95cab9cfea53"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="f39e9731-819f-4060-815a-8ba5af999e05" name="GetPublication" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="40930089-7fdb-41a5-a56d-d860aa6ffc6e" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="3b558a0c-55f9-4b13-99d8-60d31e4e8b8a"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetPublication#Response}');
def xml = new XmlParser().parseText(response);

def root = xml.'link';
String SectionUri,SectionPage;
for(int i=0;i&lt;root.size();i++)
{
	if(root[i].@'rel'=="down")
	{
		SectionUri = root[i].@'href';
	}
	if(root[i].@'rel'=='http://www.vizrt.com/types/relation/pages')
	{
		s=root[i].@'href';
		if(s.contains("/section/"))
		SectionPage=root[i].@'href';
	}
}	
log.info SectionUri;
log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="e2355636-bf1e-4e5d-bae8-9ffab5a4910e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetListURI" id="fb37395e-82cf-4125-b3b0-408474e759cf"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def List_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
		it.@'rel'=="http://www.vizrt.com/types/relation/lists" &&
		it.@'href'.toString().contains("lists")
		&& FOUND==0
		) {FOUND=1;List_URI = it.@'href';}};

context.testCase.testSteps["CreateList"].setPropertyValue("EndPoint",List_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetListName" id="35e7d20d-85f2-4a6c-9c23-7ab94f9caabf"><con:settings/><con:config><script>String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

String listname = "ListTest"+GetTime();
def request = context.expand('${CreateList#Request}');
def list_xml = new XmlParser().parseText(request);
list_xml.'title'.each{it.value=listname.toString()};
list_xml.'content'.'vdf:payload'.'vdf:field'.'vdf:value'.each{
		it.value=listname.toString();
	};

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(list_xml);
def newXml = stringWriter.toString();
//newXml.replace("&lt;entry","asdas");
log.info newXml

context.testCase.testSteps["CreateList"].setPropertyValue("Request",newXml);

log.info GetTime();</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateList" id="9377fa94-0e71-4f06-a886-f4106e308e1b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateList" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/217/lists</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <title type="text">
    ListTest13:20:45:96
  </title>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types">
      <vdf:field name="com.escenic.name">
        <vdf:value>
          ListTest13:20:45:96
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedListURI" id="fd45e0ea-a1d9-42be-b6ed-0998af86f294"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateList"].testRequest.response.responseHeaders;
list_uri = httpResponseHeader["Location"][0];
context.testCase.testSteps["GetList"].setPropertyValue("EndPoint",list_uri);
context.testCase.testSteps["CheckListNameUpdate"].setPropertyValue("EndPoint",list_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetList" id="0e301d82-1171-4c13-ba4e-e5598787e2f0"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="29e5663e-0db2-4c34-b42e-cd2c4d306551" name="GetList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/list/688</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="215cfc06-5076-4947-a0ab-3fa766120aa7" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetEditURL_Header" id="8e5af49b-6495-4358-a0bd-00dd65a503dc"><con:settings/><con:config><script><![CDATA[def httpResponseHeader = context.testCase.testSteps["GetList"].testRequest.response.responseHeaders;

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def headers = context.utility.ETAG_At_Header(httpResponseHeader);
context.testCase.testSteps["RenameList"].testRequest.setRequestHeaders(headers);
context.testCase.testSteps["RenameList_WithSameHeader"].testRequest.setRequestHeaders(headers);

def response = context.expand('${GetList#Response}');
def xml = new XmlParser().parseText(response);
def Edit_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
		it.@'rel'=="edit" &&
		it.@'href'.toString().contains("list")
		&& FOUND==0
		) {FOUND=1;Edit_URI = it.@'href';}};

context.testCase.testSteps["RenameList"].setPropertyValue("EndPoint",Edit_URI);
context.testCase.testSteps["RenameList_WithSameHeader"].setPropertyValue("EndPoint",Edit_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="EditListName" id="d1177b43-7cc4-41cf-981b-b51dec87d0c3"><con:settings/><con:config><script>def response = context.expand('${GetList#Response}');

response = response.replaceAll("ListTest","EDIT:ListTest");
context.testCase.testSteps["RenameList"].setPropertyValue("Request",response);
context.testCase.testSteps["RenameList_WithSameHeader"].setPropertyValue("Request",response);</script></con:config></con:testStep><con:testStep type="httprequest" name="RenameList" id="22a39bc9-1d02-4648-ada7-8dd72104f9b5"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="58f72af5-bda3-4315-a60d-151ca2b50c13" name="RenameList" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;a9433cc2-5bd3-4570-8577-7ed6284532f9&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/list/688</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-epsilon:8080/webservice/escenic/list/688</id>\r
   <link rel="self" href="http://qa-epsilon:8080/webservice/escenic/list/688" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-epsilon:8080/webservice/escenic/list/688" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-epsilon:8080/webservice/escenic/lock/pool/688/a9433cc2-5bd3-4570-8577-7ed6284532f9" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>688</dcterms:identifier>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" title="qa"/>\r
   <title type="text">EDIT:ListTest13:20:45:96</title>\r
   <link rel="edit-media" href="http://qa-epsilon:8080/webservice/escenic/list/688" type="application/vnd.escenic.content+xml; type=com.escenic.list" title="EDIT:ListTest13:20:45:96"/>\r
   <link rel="http://www.vizrt.com/types/relation/parent" href="http://qa-epsilon:8080/webservice/escenic/section/217" type="application/atom+xml; type=entry" title="AAA"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/section-page/688/preview" rel="http://www.vizrt.com/types/relation/preview"/>\r
   <dcterms:created>2017-08-29T07:20:45.000Z</dcterms:created>\r
   <app:edited>2017-08-29T07:20:45.000Z</app:edited>\r
   <app:control xmlns:vaext="http://www.vizrt.com/atom-ext">\r
      <vaext:state name="draft" href="http://qa-epsilon:8080/webservice/escenic/pool/state/draft"/>\r
      <app:draft>yes</app:draft>\r
   </app:control>\r
   <link rel="http://www.vizrt.com/types/relation/list-pool" href="http://qa-epsilon:8080/webservice/escenic/list-pool/688" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/changelog" href="http://qa-epsilon:8080/webservice/escenic/changelog/list/688" type="application/atom+xml"/>\r
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="de566e45-0406-43a9-bbf8-c70bc5eb13ef" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RenameList_WithSameHeader" id="894f6611-9184-4d8e-9fc2-895bf672177a"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="7a7745dc-f486-42ce-8446-344f237d143b" name="RenameList_WithSameHeader" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;a9433cc2-5bd3-4570-8577-7ed6284532f9&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/list/688</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-epsilon:8080/webservice/escenic/list/688</id>\r
   <link rel="self" href="http://qa-epsilon:8080/webservice/escenic/list/688" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-epsilon:8080/webservice/escenic/list/688" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-epsilon:8080/webservice/escenic/lock/pool/688/a9433cc2-5bd3-4570-8577-7ed6284532f9" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>688</dcterms:identifier>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" title="qa"/>\r
   <title type="text">EDIT:ListTest13:20:45:96</title>\r
   <link rel="edit-media" href="http://qa-epsilon:8080/webservice/escenic/list/688" type="application/vnd.escenic.content+xml; type=com.escenic.list" title="EDIT:ListTest13:20:45:96"/>\r
   <link rel="http://www.vizrt.com/types/relation/parent" href="http://qa-epsilon:8080/webservice/escenic/section/217" type="application/atom+xml; type=entry" title="AAA"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/section-page/688/preview" rel="http://www.vizrt.com/types/relation/preview"/>\r
   <dcterms:created>2017-08-29T07:20:45.000Z</dcterms:created>\r
   <app:edited>2017-08-29T07:20:45.000Z</app:edited>\r
   <app:control xmlns:vaext="http://www.vizrt.com/atom-ext">\r
      <vaext:state name="draft" href="http://qa-epsilon:8080/webservice/escenic/pool/state/draft"/>\r
      <app:draft>yes</app:draft>\r
   </app:control>\r
   <link rel="http://www.vizrt.com/types/relation/list-pool" href="http://qa-epsilon:8080/webservice/escenic/list-pool/688" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/changelog" href="http://qa-epsilon:8080/webservice/escenic/changelog/list/688" type="application/atom+xml"/>\r
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="d374f5f1-4972-4aab-8235-52cc527bd896" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","412");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="412")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckListNameUpdate" id="60031945-0179-4d96-b859-271ec0858cf1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a06b00d2-f0f5-43ec-b49c-a88259c67912" name="CheckListNameUpdate" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/list/688</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc3e77c8-2389-46b4-85c6-0f43c339bd30" name="Script Assertion"><con:configuration><scriptText><![CDATA[def Title;
def title_value;
def title;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);


int isEqualString(String a,String b)
{
	if(a.size()!=b.size())
	return 0;
	for(int i=0;i<a.size();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}

int CheckListNameUpdate()
{
	def request = context.expand('${RenameList#Request}');
	def xml = new XmlParser().parseText(request);
	
	def response = context.expand('${CheckListNameUpdate#Response}');
	def xml2 = new XmlParser().parseText(response);
	
	
	int FOUND=0;
	
	xml.breadthFirst().
	each {
			if(it.name().toString().contains("title")&& FOUND==0)
			{FOUND=1;Title = it.value()[0].toString();}};
	
	xml2.breadthFirst().
	each {
			if(it.name().toString().contains("title"))
			title=it.value()[0].toString();
			if(it.name().toString().contains("link") && it.@'rel'=="edit-media")
			title_value=it.@'title';
		};
	if(isEqualString(Title,title) && isEqualString(Title,title_value))
	{
		return 1;
	}
	return 0;
}



def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

if(httpStatusCode=="200")
{
	int UpdateResult=CheckListNameUpdate();
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
	
	if(UpdateResult==1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Listname Updated");
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Listname not Updated.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
]]></scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8c4e1029-3ad3-4871-bfc9-b3976098fae0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="EditListItems_backup" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="8640434a-676d-4cf2-9feb-ef54faca2238"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String homeUrl = xml.'homeUrl_for_Eng_6';
String rootUrl = xml.'rootUrl_for_Eng_6';
String user = xml.'user';
String password = xml.'password';
String url = server+rootUrl;//homeUrl;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetPublication"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetPublication" id="d4c267db-22ae-4b4d-af76-570e2de80116"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="f39e9731-819f-4060-815a-8ba5af999e05" name="GetPublication" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/section/1</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="40930089-7fdb-41a5-a56d-d860aa6ffc6e" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="4be38f61-27db-447d-acf7-6013ba235685"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetPublication#Response}');
def xml = new XmlParser().parseText(response);

def root = xml.'link';
String SectionUri,SectionPage;
for(int i=0;i&lt;root.size();i++)
{
	if(root[i].@'rel'=="down")
	{
		SectionUri = root[i].@'href';
	}
	if(root[i].@'rel'=='http://www.vizrt.com/types/relation/pages')
	{
		s=root[i].@'href';
		if(s.contains("/section/"))
		SectionPage=root[i].@'href';
	}
}	
log.info SectionUri;
log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="7da5f299-1fe9-4428-af4f-9a9e476ccfce"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetSectionPage" id="92c27d78-9e12-4003-aae0-77ff5615a2bb"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="78d9e201-1600-4347-80c8-17a56b8f548d" name="GetSectionPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/pages</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="88940ba3-02b9-4b19-ad9d-320df3d346d9" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParsingVDFModel" id="f11c567d-20ef-4976-a8b2-aaa13a066c21"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetSectionPage#Response}');
def xml = new XmlParser().parseText(response);
def Story_Content_URI;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp;
		it.@'rel'=="related" &amp;&amp;
		it.'vdf:payload'.@'model'.toString().contains("story")
		) Story_Content_URI = it.@'href'};


context.testCase.testSteps["GetAContentStory"].setPropertyValue("EndPoint",Story_Content_URI);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetSectionURIForContent" id="ef69078d-4539-4049-b6f6-603d1612e6da"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
/*
def section_entris = xml.'entry';
if(section_entris.size())
{
	section_uri = section_entris[0].'id'[0].value()[0] + "/content-items";
	context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",section_uri);
}
*/
xml.breadthFirst().
each {
		if(it.name().toString().contains("id") &amp;&amp; 
		it.value()[0].contains("/section/") &amp;&amp; 
		!it.value()[0].contains("subsection"))
		section_uri = it.value()[0]};

if(section_uri!=null)
{
	section_uri+="/content-items";
	context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",section_uri);
	context.testCase.testSteps["CreateContentAgain"].setPropertyValue("EndPoint",section_uri);
}</script></con:config></con:testStep><con:testStep type="httprequest" name="GetAContentStory" id="9bdfa008-3eaf-4a81-a3eb-89648b566eae"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="05ec5e0d-5c2f-4229-9fd6-cf5ecebdc80e" name="GetAContentStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/131</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="ada3fc63-94e3-4a6d-8152-fce220baf769" name="TestRetriveStory"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Story_Model" id="888360b7-0f01-4aed-bd86-66f495489919"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetAContentStory#Response}');
def xml = new XmlParser().parseText(response);

def model = xml.'content'.'vdf:payload'[0].@'model';
//log.info model;
def request = context.expand('${CreateContent#Request}');

def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{it.@'model'=model}

log.info xml.'content'[0];

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(story_xml);
def newXml = stringWriter.toString();
//newXml.replace("&lt;entry","asdas");
log.info newXml

context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);
context.testCase.testSteps["CreateContentAgain"].setPropertyValue("Request",newXml);

</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="4d7fd6f5-5c99-4570-8f58-8d338be035ac"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/section/3/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>
          This is a test story title
        </vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>
              This is test sample story body!
            </p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateContentAgain" id="44ec0d95-5002-42a8-a3bc-6c438da0273f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContentAgain" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/section/3/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>
          This is a test story title
        </vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>
              This is test sample story body!
            </p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="CreateMultipleListItems" id="b5bfc5a2-2db2-426b-992a-34c0e3266e95"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def content=new String[3];
/*for(int i=0;i&lt;2;i++)
{
	testRunner.runTestStep(project.testSuites[suitename].testCases[casename].testSteps['CreateContent'])
	def httpResponseHeaders = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
	def location = httpResponseHeaders["Location"][0];
	content[i]=location;
}*/

def httpResponseHeaders = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def httpResponseHeaders2 = context.testCase.testSteps["CreateContentAgain"].testRequest.response.responseHeaders
def location = httpResponseHeaders["Location"][0];
content[0]=location;
location = httpResponseHeaders2["Location"][0];
content[1]=location;
context.testCase.testSteps["AddListItems"].setPropertyValue("Request",content[0]+"\n"+content[1]);
</script></con:config></con:testStep><con:testStep type="groovy" name="GetListURI" id="4a305e2d-8b30-4167-9020-b422b22bb1d5"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def List_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
		it.@'rel'=="http://www.vizrt.com/types/relation/lists" &&
		it.@'href'.toString().contains("lists")
		&& FOUND==0
		) {FOUND=1;List_URI = it.@'href';}};

context.testCase.testSteps["CreateList"].setPropertyValue("EndPoint",List_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetListName" id="e06406f3-dc3b-4e4a-93d7-f425d09cf1de"><con:settings/><con:config><script>String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

String listname = "ListTest"+GetTime();
def request = context.expand('${CreateList#Request}');
def list_xml = new XmlParser().parseText(request);
list_xml.'title'.each{it.value=listname.toString()};

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(list_xml);
def newXml = stringWriter.toString();
//newXml.replace("&lt;entry","asdas");
log.info newXml

context.testCase.testSteps["CreateList"].setPropertyValue("Request",newXml);

log.info GetTime();</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateList" id="19bb8b55-d2be-4600-be25-7647a39af092"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateList" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/section/108/lists</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <title type="text">
    ListTest14:15:25:227
  </title>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types">
      <vdf:field name="com.escenic.name">
        <vdf:value>
          testlist
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedListURI" id="065c8498-f1b7-4513-b5bf-0f7abd05c282"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateList"].testRequest.response.responseHeaders;
list_uri = httpResponseHeader["Location"][0];
context.testCase.testSteps["GetList"].setPropertyValue("EndPoint",list_uri);
//context.testCase.testSteps["DeleteList"].setPropertyValue("EndPoint",list_uri);
//context.testCase.testSteps["DeleteListAgain"].setPropertyValue("EndPoint",list_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetList" id="84d630e0-5355-4813-bef5-f73160383965"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="29e5663e-0db2-4c34-b42e-cd2c4d306551" name="GetList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/list/286</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="215cfc06-5076-4947-a0ab-3fa766120aa7" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetListPoolID" id="2a785758-7280-419e-a9c6-890aba0e6551"><con:settings/><con:config><script>def response = context.expand('${GetList#Response}');
def xml = new XmlParser().parseText(response);
def List_POOL_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp;
		it.@'rel'=="http://www.vizrt.com/types/relation/list-pool"
		&amp;&amp; FOUND==0
		)
		{
			FOUND=1;
			List_POOL_URI = it.@'href';
		}};

context.testCase.testSteps["AddListItems"].setPropertyValue("EndPoint",List_POOL_URI);
context.testCase.testSteps["GetListPool"].setPropertyValue("EndPoint",List_POOL_URI);
context.testCase.testSteps["Check_Is_ItemDeleted"].setPropertyValue("EndPoint",List_POOL_URI);</script></con:config></con:testStep><con:testStep type="httprequest" name="AddListItems" id="0b81ac5a-4864-43dd-a5ab-3329bff7cdb5"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="652d7343-9ad1-49b2-9ad6-c2d25a1a81a6" name="AddListItems" postQueryString="false" mediaType="text/uri-list" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/list-pool/286</con:endpoint><con:request>http://qa-beta:8080/webservice/escenic/content/7319
http://qa-beta:8080/webservice/escenic/content/7320</con:request><con:assertion type="GroovyScriptAssertion" id="017a780f-aae4-40eb-9ed0-06572469d638" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetListPool" id="c815d082-3bf7-4372-8176-ee35be20b1d2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b4786fd0-3cc7-41dd-a6f2-d83df35abe06" name="GetListPool" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/list-pool/286</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="d7e2f638-bd24-47d4-97d9-94a6542f15b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="DeleteAListItem" id="1bfea898-3f00-4341-8c1a-7dc4d7d61ddf"><con:settings/><con:config><script>def response = context.expand('${GetListPool#Response}');
def xml = new XmlParser().parseText(response);
def HANDLE_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("id") &amp;&amp;
		it.value()[0].toString().contains("handle")
		&amp;&amp; FOUND==0
		)
		{
			FOUND=1;
			HANDLE_URI = it.value()[0];
		}};

context.testCase.testSteps["DeleteListItem"].setPropertyValue("EndPoint",HANDLE_URI);</script></con:config></con:testStep><con:testStep type="httprequest" name="DeleteListItem" id="38b0f2bb-b130-412d-b9b9-4c5fb5bd969f"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="ced63df5-e0e2-424a-a02c-ea09d30f8a60" name="DeleteListItem" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/list-pool/handle/1757</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="57ca9a38-d99d-467b-a979-e8c009c5c796" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Check_Is_ItemDeleted" id="67034032-8ae5-4667-a6fa-84488e2741b6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b4786fd0-3cc7-41dd-a6f2-d83df35abe06" name="Check_Is_ItemDeleted" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/list-pool/286</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="00680336-27dc-4cd1-ab5d-cf071c849abd" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);



int CheckListItemDeleted()
{
	def response = context.expand('${Check_Is_ItemDeleted#Response}');
	def xml = new XmlParser().parseText(response);
	def HANDLE_URI=context.expand('${DeleteListItem#EndPoint}');
	xml.breadthFirst().
	each {
			if(	it.name().toString().contains("id") &amp;&amp;
				it.value()[0].toString().contains(HANDLE_URI.toString())
			  )
			{
				return 0;
			}
		};
	return 1;
}



def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

if(httpStatusCode=="200")
{
	int UpdateResult=CheckListItemDeleted();
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
	
	if(UpdateResult==1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","ListItem deleted");
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","ListItem not deleted.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b3bd6f7a-d2dc-43be-bb07-e7f3dd99435c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ListCreateGetDeleteTest" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="9e21e03e-c3fc-4238-b87c-553e56c8aba5"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="b88012b0-fcb5-4248-a134-092c7ba7f7c1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="316b26c4-f6a5-4426-a0f8-e046651641da" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3dedee16-6060-463d-8622-13bc47d12a26" name="Script Assertion"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetRootSectionURI" id="88a80e6f-b7d9-4757-8890-c4f109d85a93"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

//context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;
]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="2cd93ef8-fbc7-4ef8-8160-c36e3024618b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="eccea409-651f-4885-84b0-9b98e9fb26c5" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f186009e-820c-46ad-b5e2-3750e7791387" name="Script Assertion"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetSectionURI" id="f5bc9cdb-9d93-47c8-8aac-3a213b5cfc04"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="bc86fb51-92cd-4134-ae06-ef10eef8670e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d7c9f20e-66e6-47ae-b5e7-06f6b22d9e6a" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e0d1f504-e5ef-484c-b1e2-f65e8d57fc7a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetListURI" id="3b9c08d7-a69d-4630-b778-0b941ed59904"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def List_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
		it.@'rel'=="http://www.vizrt.com/types/relation/lists" &&
		it.@'href'.toString().contains("lists")
		&& FOUND==0
		) {FOUND=1;List_URI = it.@'href';}};

context.testCase.testSteps["CreateList"].setPropertyValue("EndPoint",List_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetListName" id="c480538d-55de-4312-bbd5-449d0cc5ec85"><con:settings/><con:config><script>String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

String listname = "ListTest"+GetTime();
def request = context.expand('${CreateList#Request}');
def list_xml = new XmlParser().parseText(request);
list_xml.'title'.each{it.value=listname.toString()};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(list_xml);
def newXml = stringWriter.toString();
//newXml.replace("&lt;entry","asdas");
log.info newXml

context.testCase.testSteps["CreateList"].setPropertyValue("Request",newXml);

log.info GetTime();</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateList" id="58b64f64-2dd3-406b-b717-7e7bbf5c7837"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateList" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/lists</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <title type="text">ListTest16:54:3:354</title>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types">
      <vdf:field name="com.escenic.name">
        <vdf:value>testlist</vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedListURI" id="834551ce-122b-4684-84db-cf4f2da376de"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateList"].testRequest.response.responseHeaders;
list_uri = httpResponseHeader["Location"][0];
context.testCase.testSteps["GetList"].setPropertyValue("EndPoint",list_uri);
context.testCase.testSteps["DeleteList"].setPropertyValue("EndPoint",list_uri);
context.testCase.testSteps["DeleteListAgain"].setPropertyValue("EndPoint",list_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetList" id="3bf3c740-c9d6-4572-b18c-6a31d10eea08"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="29e5663e-0db2-4c34-b42e-cd2c4d306551" name="GetList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list/689</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="215cfc06-5076-4947-a0ab-3fa766120aa7" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteList" id="ca241b43-8c56-4879-ba03-acbd53a82a76"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="881aed3e-68d3-48bd-90b9-f0d4f6fd5c9c" name="DeleteList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list/689</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="c123d022-65de-4cd3-8e9e-066b1c2da9e6" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteListAgain" id="a18bf873-e9d4-4758-b94d-0d7709788d60"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="4bfa0d7a-0f6a-4cc6-ac09-e2e73b3783ca" name="DeleteListAgain" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list/689</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e761efbf-1492-43b5-846f-012c17aab68f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7a822ba8-8fba-47d8-a234-5d6d8ffb092e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ListRename" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="585ea1e0-5766-45a8-a59c-2ece7329e551"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="4732b489-6e44-4f13-a461-d866c9b23580"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="316b26c4-f6a5-4426-a0f8-e046651641da" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3dedee16-6060-463d-8622-13bc47d12a26" name="Script Assertion"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetRootSectionURI" id="e6a474d4-f91e-4d2d-a476-61e7baed50e6"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

//context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;
]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="4f9b540b-714f-4595-87ef-bfd166580912"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="eccea409-651f-4885-84b0-9b98e9fb26c5" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f186009e-820c-46ad-b5e2-3750e7791387" name="Script Assertion"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetSectionURI" id="2950f7fe-dd66-4865-a855-b4528f0e7bef"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="873b5e5d-4368-4fe0-96e2-641b5b0032ed"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d7c9f20e-66e6-47ae-b5e7-06f6b22d9e6a" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e0d1f504-e5ef-484c-b1e2-f65e8d57fc7a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetListURI" id="3760db3d-e81b-4c5e-8076-4be514a56801"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def List_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
		it.@'rel'=="http://www.vizrt.com/types/relation/lists" &&
		it.@'href'.toString().contains("lists")
		&& FOUND==0
		) {FOUND=1;List_URI = it.@'href';}};

context.testCase.testSteps["CreateList"].setPropertyValue("EndPoint",List_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetListName" id="eee64f40-250a-4ad5-ae62-63ac8188e2db"><con:settings/><con:config><script>String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

String listname = "ListTest"+GetTime();
def request = context.expand('${CreateList#Request}');
def list_xml = new XmlParser().parseText(request);
list_xml.'title'.each{it.value=listname.toString()};

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(list_xml);
def newXml = stringWriter.toString();
//newXml.replace("&lt;entry","asdas");
log.info newXml

context.testCase.testSteps["CreateList"].setPropertyValue("Request",newXml);

log.info GetTime();</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateList" id="9044b9f2-2c2f-4329-b23f-387984b87e7b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateList" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/lists</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <title type="text">
    ListTest16:48:56:485
  </title>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types">
      <vdf:field name="com.escenic.name">
        <vdf:value>
          testlist
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedListURI" id="e2ca9eb4-e356-401f-82f2-858c4fa14a7e"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateList"].testRequest.response.responseHeaders;
list_uri = httpResponseHeader["Location"][0];
context.testCase.testSteps["GetList"].setPropertyValue("EndPoint",list_uri);
context.testCase.testSteps["CheckListNameUpdate"].setPropertyValue("EndPoint",list_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetList" id="8288c206-f1dc-4ffb-8d28-b94f667d7d79"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="29e5663e-0db2-4c34-b42e-cd2c4d306551" name="GetList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list/684</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="215cfc06-5076-4947-a0ab-3fa766120aa7" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetEditURL_Header" id="1a5ebe74-c873-4c32-a900-d8fe1439340b"><con:settings/><con:config><script><![CDATA[def httpResponseHeader = context.testCase.testSteps["GetList"].testRequest.response.responseHeaders;

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def headers = context.utility.ETAG_At_Header(httpResponseHeader);
context.testCase.testSteps["RenameList"].testRequest.setRequestHeaders(headers);
context.testCase.testSteps["RenameList_WithSameHeader"].testRequest.setRequestHeaders(headers);

def response = context.expand('${GetList#Response}');
def xml = new XmlParser().parseText(response);
def Edit_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
		it.@'rel'=="edit" &&
		it.@'href'.toString().contains("list")
		&& FOUND==0
		) {FOUND=1;Edit_URI = it.@'href';}};

context.testCase.testSteps["RenameList"].setPropertyValue("EndPoint",Edit_URI);
context.testCase.testSteps["RenameList_WithSameHeader"].setPropertyValue("EndPoint",Edit_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="EditListName" id="06cb5dd1-9335-4a9e-b55e-4a05b20af54a"><con:settings/><con:config><script>def response = context.expand('${GetList#Response}');

response = response.replaceAll("ListTest","EDIT:ListTest");
context.testCase.testSteps["RenameList"].setPropertyValue("Request",response);
context.testCase.testSteps["RenameList_WithSameHeader"].setPropertyValue("Request",response);</script></con:config></con:testStep><con:testStep type="httprequest" name="RenameList" id="b102686a-f764-49a6-918c-0c36e979d37e"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="58f72af5-bda3-4315-a60d-151ca2b50c13" name="RenameList" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;a64f66f0-9beb-4ca2-b3e4-0561f55ba1af&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list/684</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-belinda:8080/webservice/escenic/list/684</id>\r
   <link rel="self" href="http://qa-belinda:8080/webservice/escenic/list/684" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-belinda:8080/webservice/escenic/list/684" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-belinda:8080/webservice/escenic/lock/pool/684/a64f66f0-9beb-4ca2-b3e4-0561f55ba1af" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>684</dcterms:identifier>\r
   <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-belinda:8080/webservice/escenic/publication/qa/" title="qa"/>\r
   <title type="text">EDIT:ListTest16:48:56:485</title>\r
   <link rel="edit-media" href="http://qa-belinda:8080/webservice/escenic/list/684" type="application/vnd.escenic.content+xml; type=com.escenic.list" title="EDIT:ListTest16:48:56:485"/>\r
   <link rel="http://www.vizrt.com/types/relation/parent" href="http://qa-belinda:8080/webservice/escenic/section/2" type="application/atom+xml; type=entry" title="New Articles"/>\r
   <link href="http://qa-belinda:8080/webservice/escenic/section-page/684/preview" rel="http://www.vizrt.com/types/relation/preview"/>\r
   <dcterms:created>2018-02-27T10:49:52.000Z</dcterms:created>\r
   <app:edited>2018-02-27T10:49:52.000Z</app:edited>\r
   <app:control xmlns:vaext="http://www.vizrt.com/atom-ext">\r
      <vaext:state name="draft" href="http://qa-belinda:8080/webservice/escenic/pool/state/draft"/>\r
      <app:draft>yes</app:draft>\r
   </app:control>\r
   <link rel="http://www.vizrt.com/types/relation/list-pool" href="http://qa-belinda:8080/webservice/escenic/list-pool/684" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/changelog" href="http://qa-belinda:8080/webservice/escenic/changelog/list/684" type="application/atom+xml"/>\r
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="de566e45-0406-43a9-bbf8-c70bc5eb13ef" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RenameList_WithSameHeader" id="8f426fd8-4cf6-40bb-89e9-d0ca640341f5"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="7a7745dc-f486-42ce-8446-344f237d143b" name="RenameList_WithSameHeader" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;a64f66f0-9beb-4ca2-b3e4-0561f55ba1af&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list/684</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-belinda:8080/webservice/escenic/list/684</id>\r
   <link rel="self" href="http://qa-belinda:8080/webservice/escenic/list/684" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-belinda:8080/webservice/escenic/list/684" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-belinda:8080/webservice/escenic/lock/pool/684/a64f66f0-9beb-4ca2-b3e4-0561f55ba1af" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>684</dcterms:identifier>\r
   <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-belinda:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-belinda:8080/webservice/escenic/publication/qa/" title="qa"/>\r
   <title type="text">EDIT:ListTest16:48:56:485</title>\r
   <link rel="edit-media" href="http://qa-belinda:8080/webservice/escenic/list/684" type="application/vnd.escenic.content+xml; type=com.escenic.list" title="EDIT:ListTest16:48:56:485"/>\r
   <link rel="http://www.vizrt.com/types/relation/parent" href="http://qa-belinda:8080/webservice/escenic/section/2" type="application/atom+xml; type=entry" title="New Articles"/>\r
   <link href="http://qa-belinda:8080/webservice/escenic/section-page/684/preview" rel="http://www.vizrt.com/types/relation/preview"/>\r
   <dcterms:created>2018-02-27T10:49:52.000Z</dcterms:created>\r
   <app:edited>2018-02-27T10:49:52.000Z</app:edited>\r
   <app:control xmlns:vaext="http://www.vizrt.com/atom-ext">\r
      <vaext:state name="draft" href="http://qa-belinda:8080/webservice/escenic/pool/state/draft"/>\r
      <app:draft>yes</app:draft>\r
   </app:control>\r
   <link rel="http://www.vizrt.com/types/relation/list-pool" href="http://qa-belinda:8080/webservice/escenic/list-pool/684" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/changelog" href="http://qa-belinda:8080/webservice/escenic/changelog/list/684" type="application/atom+xml"/>\r
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="d374f5f1-4972-4aab-8235-52cc527bd896" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","412");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="412")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckListNameUpdate" id="b50bc801-1eb8-4ecf-a263-7d6528d3efd2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a06b00d2-f0f5-43ec-b49c-a88259c67912" name="CheckListNameUpdate" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list/684</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc3e77c8-2389-46b4-85c6-0f43c339bd30" name="Script Assertion"><con:configuration><scriptText><![CDATA[def Title;
def title_value;
def title;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);


int isEqualString(String a,String b)
{
	if(a.size()!=b.size())
	return 0;
	for(int i=0;i<a.size();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}

int CheckListNameUpdate()
{
	def request = context.expand('${RenameList#Request}');
	def xml = new XmlParser().parseText(request);
	
	def response = context.expand('${CheckListNameUpdate#Response}');
	def xml2 = new XmlParser().parseText(response);
	
	
	int FOUND=0;
	
	xml.breadthFirst().
	each {
			if(it.name().toString().contains("title")&& FOUND==0)
			{FOUND=1;Title = it.value()[0].toString();}};
	
	xml2.breadthFirst().
	each {
			if(it.name().toString().contains("title"))
			title=it.value()[0].toString();
			if(it.name().toString().contains("link") && it.@'rel'=="edit-media")
			title_value=it.@'title';
		};
		log.info "title       = "+title;
		log.info "title_value = "+title_value;
		log.info "Title       = "+Title;
	if(isEqualString(Title,title) && isEqualString(Title,title_value))
	{
		return 1;
	}
	return 0;
}



def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

if(httpStatusCode=="200")
{
	int UpdateResult=CheckListNameUpdate();
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
	
	if(UpdateResult==1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Listname Updated");
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Listname Updated.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
		
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Listname Updated");
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Listname not Updated.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
		log.info "here";
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
]]></scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0f63b9ba-2f57-48d5-a121-bc461fd254a8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="EditListItems" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="a7a5de07-06a9-4165-ac5c-ba25f9c9ff1d"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="2f161e14-ce59-49a5-bb2a-10e3ab8ad228"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="c027315d-23c2-4232-ba1c-7d1993e15390"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;
]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="98742db3-faa0-4707-8190-7c9c70eec604"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="28f0671a-3fb2-4db0-bcf4-1b987caa6a3d"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="b5fd1bda-c44e-4720-bc0c-640eec3e1a96"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="be7673f1-b813-43d1-8d8e-656445519660"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
context.testCase.testSteps["CreateContentAgain"].setPropertyValue("EndPoint",content_create_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="57e0fd3e-4d72-4799-999e-1dca53fa7af4"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/content-descriptions/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="5087c7d9-86b7-4edf-b1bd-8cf26c4cc452"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);
context.testCase.testSteps["CreateContentAgain"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="bd6db41f-2041-47dc-aab0-811fd39ea963"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateContentAgain" id="ee22efd1-b8b6-4b7a-97fe-46bff85d378a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContentAgain" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="CreateMultipleListItems" id="5ed52122-b2e2-4365-a9f0-ce6df4eef691"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def content=new String[3];
/*for(int i=0;i&lt;2;i++)
{
	testRunner.runTestStep(project.testSuites[suitename].testCases[casename].testSteps['CreateContent'])
	def httpResponseHeaders = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
	def location = httpResponseHeaders["Location"][0];
	content[i]=location;
}*/

def httpResponseHeaders = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def httpResponseHeaders2 = context.testCase.testSteps["CreateContentAgain"].testRequest.response.responseHeaders
def location = httpResponseHeaders["Location"][0];
content[0]=location;
location = httpResponseHeaders2["Location"][0];
content[1]=location;
context.testCase.testSteps["AddListItems"].setPropertyValue("Request",content[0]+"\n"+content[1]);
</script></con:config></con:testStep><con:testStep type="groovy" name="GetListURI" id="0b7e0811-e870-4f6d-b626-689295ded8c0"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def List_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
		it.@'rel'=="http://www.vizrt.com/types/relation/lists" &&
		it.@'href'.toString().contains("lists")
		&& FOUND==0
		) {FOUND=1;List_URI = it.@'href';}};

context.testCase.testSteps["CreateList"].setPropertyValue("EndPoint",List_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetListName" id="9c976e5c-6249-4067-b8d6-20fbf5fd5025"><con:settings/><con:config><script>String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

String listname = "ListTest"+GetTime();
def request = context.expand('${CreateList#Request}');
def list_xml = new XmlParser().parseText(request);
list_xml.'title'.each{it.value=listname.toString()};

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(list_xml);
def newXml = stringWriter.toString();
//newXml.replace("&lt;entry","asdas");
log.info newXml

context.testCase.testSteps["CreateList"].setPropertyValue("Request",newXml);

log.info GetTime();</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateList" id="7a950e1a-5db1-4848-bec8-43c7a8450502"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateList" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/lists</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <title type="text">
    ListTest16:49:7:599
  </title>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types">
      <vdf:field name="com.escenic.name">
        <vdf:value>
          testlist
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedListURI" id="f03b2791-3e51-4fbb-8e2d-2c66125b75fb"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateList"].testRequest.response.responseHeaders;
list_uri = httpResponseHeader["Location"][0];
context.testCase.testSteps["GetList"].setPropertyValue("EndPoint",list_uri);
//context.testCase.testSteps["DeleteList"].setPropertyValue("EndPoint",list_uri);
//context.testCase.testSteps["DeleteListAgain"].setPropertyValue("EndPoint",list_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetList" id="078105f2-c259-4d1d-b9cc-fe4efae3c404"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="29e5663e-0db2-4c34-b42e-cd2c4d306551" name="GetList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list/685</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="215cfc06-5076-4947-a0ab-3fa766120aa7" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetListPoolID" id="5619356b-4ce2-40fb-b6c2-f58ccc3adc89"><con:settings/><con:config><script>def response = context.expand('${GetList#Response}');
def xml = new XmlParser().parseText(response);
def List_POOL_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp;
		it.@'rel'=="http://www.vizrt.com/types/relation/list-pool"
		&amp;&amp; FOUND==0
		)
		{
			FOUND=1;
			List_POOL_URI = it.@'href';
		}};

context.testCase.testSteps["AddListItems"].setPropertyValue("EndPoint",List_POOL_URI);
context.testCase.testSteps["GetListPool"].setPropertyValue("EndPoint",List_POOL_URI);
context.testCase.testSteps["Check_Is_ItemDeleted"].setPropertyValue("EndPoint",List_POOL_URI);</script></con:config></con:testStep><con:testStep type="httprequest" name="AddListItems" id="d50564f7-8373-4f7f-b4f7-c69c8c271af3"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="652d7343-9ad1-49b2-9ad6-c2d25a1a81a6" name="AddListItems" postQueryString="false" mediaType="text/uri-list" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/685</con:endpoint><con:request>http://qa-belinda:8080/webservice/escenic/content/2443
http://qa-belinda:8080/webservice/escenic/content/2444</con:request><con:assertion type="GroovyScriptAssertion" id="017a780f-aae4-40eb-9ed0-06572469d638" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetListPool" id="9306ce13-2764-43e4-a560-92fa0cd54d15"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b4786fd0-3cc7-41dd-a6f2-d83df35abe06" name="GetListPool" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/685</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="d7e2f638-bd24-47d4-97d9-94a6542f15b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="DeleteAListItem" id="e03b01d8-c72b-45cb-b037-1d1139ccf5ba"><con:settings/><con:config><script>def response = context.expand('${GetListPool#Response}');
def xml = new XmlParser().parseText(response);
def HANDLE_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("id") &amp;&amp;
		it.value()[0].toString().contains("handle")
		&amp;&amp; FOUND==0
		)
		{
			FOUND=1;
			HANDLE_URI = it.value()[0];
		}};

context.testCase.testSteps["DeleteListItem"].setPropertyValue("EndPoint",HANDLE_URI);</script></con:config></con:testStep><con:testStep type="httprequest" name="DeleteListItem" id="48603b38-b063-4e06-81db-a923e62cfb6c"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="ced63df5-e0e2-424a-a02c-ea09d30f8a60" name="DeleteListItem" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/handle/2449</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="57ca9a38-d99d-467b-a979-e8c009c5c796" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Check_Is_ItemDeleted" id="51d7a156-2227-4acd-89c4-44d7cdb9c6ad"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b4786fd0-3cc7-41dd-a6f2-d83df35abe06" name="Check_Is_ItemDeleted" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/685</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="00680336-27dc-4cd1-ab5d-cf071c849abd" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);



int CheckListItemDeleted()
{
	def response = context.expand('${Check_Is_ItemDeleted#Response}');
	def xml = new XmlParser().parseText(response);
	def HANDLE_URI=context.expand('${DeleteListItem#EndPoint}');
	xml.breadthFirst().
	each {
			if(	it.name().toString().contains("id") &amp;&amp;
				it.value()[0].toString().contains(HANDLE_URI.toString())
			  )
			{
				return 0;
			}
		};
	return 1;
}



def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

if(httpStatusCode=="200")
{
	int UpdateResult=CheckListItemDeleted();
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
	
	if(UpdateResult==1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","ListItem deleted");
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","ListItem not deleted.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6dbea06c-fea3-4749-8cc2-4aaa8a8c2ff4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestPrioritiesOfListItems" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="6cef7ec0-ee14-4f5b-b08c-645cdcc72de4"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="6f37daee-04ed-4776-b2ee-5f184e8623ba"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="dfa7cfa5-7547-4fd5-8855-011152262cc5"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;
]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="3b9bc258-fbe0-41a8-8325-abbf5b19a494"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="8a0748be-d2cf-403f-a6be-a0f056fe083c"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="39776552-cb98-49e1-983c-8acc9ffe06d0"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="40aff954-ed03-46ed-bb8d-363b5f525f1f"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
context.testCase.testSteps["CreateContentAgain"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="e2fb8c24-87f5-45ec-9ea9-0196d358f5d6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/content-descriptions/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="65679ad6-b92d-47f9-a1ea-e318555a0035"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);
context.testCase.testSteps["CreateContentAgain"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="f0ab06d1-03e1-4e1b-b69b-b30e01a7c575"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateContentAgain" id="6a0b4af7-de8c-47ad-a6a9-61fa19770f3e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContentAgain" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="CreateMultipleListItems" id="21bea7e4-1d9a-4151-b92e-ea1be1d5f15d"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def content=new String[3];
/*for(int i=0;i&lt;2;i++)
{
	testRunner.runTestStep(project.testSuites[suitename].testCases[casename].testSteps['CreateContent'])
	def httpResponseHeaders = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
	def location = httpResponseHeaders["Location"][0];
	content[i]=location;
}*/

def httpResponseHeaders = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def httpResponseHeaders2 = context.testCase.testSteps["CreateContentAgain"].testRequest.response.responseHeaders
def location = httpResponseHeaders["Location"][0];
content[0]=location;
location = httpResponseHeaders2["Location"][0];
content[1]=location;
context.testCase.testSteps["AddListItems"].setPropertyValue("Request",content[0]+"\n"+content[1]);
</script></con:config></con:testStep><con:testStep type="groovy" name="GetListURI" id="4c7d05e9-761b-4e0a-bfd2-b5ed3f5bb22d"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def List_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
		it.@'rel'=="http://www.vizrt.com/types/relation/lists" &&
		it.@'href'.toString().contains("lists")
		&& FOUND==0
		) {FOUND=1;List_URI = it.@'href';}};

context.testCase.testSteps["CreateList"].setPropertyValue("EndPoint",List_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetListName" id="1b9c51fe-75c9-471a-ba59-dbf6ece2f982"><con:settings/><con:config><script>String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

String listname = "ListTest"+GetTime();
def request = context.expand('${CreateList#Request}');
def list_xml = new XmlParser().parseText(request);
list_xml.'title'.each{it.value=listname.toString()};

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(list_xml);
def newXml = stringWriter.toString();
//newXml.replace("&lt;entry","asdas");
log.info newXml

context.testCase.testSteps["CreateList"].setPropertyValue("Request",newXml);

log.info GetTime();</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateList" id="34d501c3-3627-4ef4-9f0e-1a40c38fa120"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateList" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/lists</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <title type="text">
    ListTest16:49:16:33
  </title>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types">
      <vdf:field name="com.escenic.name">
        <vdf:value>
          testlist
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedListURI" id="ae1469ae-e372-4a0f-95bb-9e9b257db053"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateList"].testRequest.response.responseHeaders;
list_uri = httpResponseHeader["Location"][0];
context.testCase.testSteps["GetList"].setPropertyValue("EndPoint",list_uri);
//context.testCase.testSteps["DeleteList"].setPropertyValue("EndPoint",list_uri);
//context.testCase.testSteps["DeleteListAgain"].setPropertyValue("EndPoint",list_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetList" id="652724cd-ca22-4f2e-8da4-6daef35a6e37"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="29e5663e-0db2-4c34-b42e-cd2c4d306551" name="GetList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list/686</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="215cfc06-5076-4947-a0ab-3fa766120aa7" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetListPoolID" id="1bc1e29c-2811-4023-bd71-49881601280e"><con:settings/><con:config><script>def response = context.expand('${GetList#Response}');
def xml = new XmlParser().parseText(response);
def List_POOL_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp;
		it.@'rel'=="http://www.vizrt.com/types/relation/list-pool"
		&amp;&amp; FOUND==0
		)
		{
			FOUND=1;
			List_POOL_URI = it.@'href';
		}};

context.testCase.testSteps["AddListItems"].setPropertyValue("EndPoint",List_POOL_URI);
context.testCase.testSteps["GetListPool"].setPropertyValue("EndPoint",List_POOL_URI);
//context.testCase.testSteps["Check_Is_ItemDeleted"].setPropertyValue("EndPoint",List_POOL_URI);</script></con:config></con:testStep><con:testStep type="httprequest" name="AddListItems" id="902320b4-34c3-47f9-a41f-56ed8a44667b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="652d7343-9ad1-49b2-9ad6-c2d25a1a81a6" name="AddListItems" postQueryString="false" mediaType="text/uri-list" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/686</con:endpoint><con:request>http://qa-belinda:8080/webservice/escenic/content/2445
http://qa-belinda:8080/webservice/escenic/content/2446</con:request><con:assertion type="GroovyScriptAssertion" id="017a780f-aae4-40eb-9ed0-06572469d638" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetListPool" id="f5a56fe0-5e12-48ec-a013-71d54786887b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b4786fd0-3cc7-41dd-a6f2-d83df35abe06" name="GetListPool" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/686</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="d7e2f638-bd24-47d4-97d9-94a6542f15b4" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
int DefaultPriorityValue;

def CheckDefaultPriorityValue()
{
	def response = context.expand('${GetListPool#Response}');
	def Xml = new XmlParser().parseText(response);
	def value;
	int ret_val=-1;
	int TESTPASS=1;
	Xml.breadthFirst().each
	{
		if(it.@name=="com.escenic.priority")
		{
			value = it.children()[0].value()[0];
			if(value.toInteger()!=-1)
			{
				TESTPASS=0;
				ret_val = value.toInteger();
			}
		}
	};
	
	return ret_val;
}


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	log.info DefaultPriorityValue = CheckDefaultPriorityValue();
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Default Priority Value for each listItem is -1.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Default Priority Value for each listItem is "+DefaultPriorityValue.toString());
	if(DefaultPriorityValue==-1)
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	else
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="61680134-5e55-47ff-afe4-ad47824752b3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestPinningListItems" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="c8cea5b5-11be-4ef1-b137-ae63d3e462c0"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="4c7039d1-389c-440b-ac7c-450b37e86ebd"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="6001ee49-0f4b-43ed-843d-27ba944d35cf"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;
]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="68ea8b70-fdbf-40c7-b7ac-c0b5b29a88ee"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="b9ed2ccd-ae88-4839-9633-10d2939cba88"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="89bfbb58-3755-4c74-8055-53d918a00456"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="69ed0794-894f-4651-8539-8f78ffbc66ce"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="1d2eb106-6b8f-4f5c-ad55-ddc91e76fdb8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/content-descriptions/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="d069d4ff-9d82-4651-ba0d-16e7bd8e57b5"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="0098a5f3-a982-41c0-9d30-dc785255387b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>Test story for Unpinned List - 1</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="CreateMultipleContents" id="b351d6aa-b249-4991-b5bc-3a0cdefa9d83"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;
String content="";
for(int i=0;i&lt;5;i++)
{
	def request = context.expand('${CreateContent#Request}');
	def xml = new XmlParser().parseText(request);
	xml.breadthFirst().each
	{
		if(it.@name!=null)
			if(it.@name=="title")
				it.'vdf:value'[0].value()[0]="This is a test story title - "+i;
		//it.value = "This is a test story title - "+i;
	};

	def stringwriter = new StringWriter();
	new XmlNodePrinter(new PrintWriter(stringwriter)).print(xml);
	def newXml = stringwriter.toString();
	context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);
	
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CreateContent'])
	def httpResponseHeaders = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
	def location = httpResponseHeaders["Location"][0];
	content = content+location+"\n";
}
context.testCase.testSteps["AddListItems"].setPropertyValue("Request",content);
</script></con:config></con:testStep><con:testStep type="groovy" name="GetListURI" id="e2e6b166-d52c-4058-ae50-42f47832edf8"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def List_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
		it.@'rel'=="http://www.vizrt.com/types/relation/lists" &&
		it.@'href'.toString().contains("lists")
		&& FOUND==0
		) {FOUND=1;List_URI = it.@'href';}};

context.testCase.testSteps["CreateList"].setPropertyValue("EndPoint",List_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetListName" id="b68cec2b-2398-4157-946c-0991785a5f02"><con:settings/><con:config><script>String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

String listname = "ListTest"+GetTime();
def request = context.expand('${CreateList#Request}');
def list_xml = new XmlParser().parseText(request);
list_xml.'title'.each{it.value=listname.toString()};

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(list_xml);
def newXml = stringWriter.toString();
//newXml.replace("&lt;entry","asdas");
log.info newXml

context.testCase.testSteps["CreateList"].setPropertyValue("Request",newXml);

log.info GetTime();</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateList" id="13c9bb42-fd1a-4899-9c1d-24863c7e5352"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateList" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/lists</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <title type="text">
    ListTest16:49:22:862
  </title>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types">
      <vdf:field name="com.escenic.name">
        <vdf:value>
          testlist
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedListURI" id="0c8dc50d-d26b-4c57-a2fc-5803214459a1"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateList"].testRequest.response.responseHeaders;
list_uri = httpResponseHeader["Location"][0];
context.testCase.testSteps["GetList"].setPropertyValue("EndPoint",list_uri);
//context.testCase.testSteps["DeleteList"].setPropertyValue("EndPoint",list_uri);
//context.testCase.testSteps["DeleteListAgain"].setPropertyValue("EndPoint",list_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetList" id="45ed4036-7978-4b5d-88c0-b9dd633b2c0e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="29e5663e-0db2-4c34-b42e-cd2c4d306551" name="GetList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list/687</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="215cfc06-5076-4947-a0ab-3fa766120aa7" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetListPoolID" id="78362050-7059-4632-9c7e-14e76ac84698"><con:settings/><con:config><script>def response = context.expand('${GetList#Response}');
def xml = new XmlParser().parseText(response);
def List_POOL_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp;
		it.@'rel'=="http://www.vizrt.com/types/relation/list-pool"
		&amp;&amp; FOUND==0
		)
		{
			FOUND=1;
			List_POOL_URI = it.@'href';
		}};

context.testCase.testSteps["AddListItems"].setPropertyValue("EndPoint",List_POOL_URI);
context.testCase.testSteps["GetListPool"].setPropertyValue("EndPoint",List_POOL_URI);
context.testCase.testSteps["GetListPoolAgain"].setPropertyValue("EndPoint",List_POOL_URI);
context.testCase.testSteps["GetListPoolAgain2"].setPropertyValue("EndPoint",List_POOL_URI);
context.testCase.testSteps["GetListPool_UnPinnedList"].setPropertyValue("EndPoint",List_POOL_URI);</script></con:config></con:testStep><con:testStep type="httprequest" name="AddListItems" id="8a5c145c-7e36-4f20-bad4-4c693d2a9ae6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="652d7343-9ad1-49b2-9ad6-c2d25a1a81a6" name="AddListItems" postQueryString="false" mediaType="text/uri-list" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/687</con:endpoint><con:request>http://qa-belinda:8080/webservice/escenic/content/2448
http://qa-belinda:8080/webservice/escenic/content/2449
http://qa-belinda:8080/webservice/escenic/content/2450
http://qa-belinda:8080/webservice/escenic/content/2451
http://qa-belinda:8080/webservice/escenic/content/2452
</con:request><con:assertion type="GroovyScriptAssertion" id="017a780f-aae4-40eb-9ed0-06572469d638" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetListPool" id="d2312d27-2753-4481-9c6a-e288bbe6395d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b4786fd0-3cc7-41dd-a6f2-d83df35abe06" name="GetListPool" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/687</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="d7e2f638-bd24-47d4-97d9-94a6542f15b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetHandleID" id="f524521f-d10c-4021-8bb6-df0fd93fcdd2"><con:settings/><con:config><script>//def project = testRunner.testCase.testSuite.project
//String suitename = context.testCase.testSuite.name;
//String testcase = context.testCase.name;
response = context.expand('${GetListPool#Response}');
def xml = new XmlParser().parseText(response);
int FOUND=0;
def entry;
def topentry;
xml.breadthFirst().each
{
	if(it.name().toString().contains("entry"))
	{
		if(FOUND==0)
		topentry=it;
		if(FOUND==2)
		entry=it;
		FOUND+=1;
	}
};

def handleURI = entry.'id'[0].value()[0];
def tophandleURI = topentry.'id'[0].value()[0];
context.testCase.testSteps["GetHandle"].setPropertyValue("EndPoint",handleURI);
context.testCase.testSteps["SetPin"].setPropertyValue("EndPoint",handleURI);
//context.testCase.testSteps["InsertItems"].setPropertyValue("EndPoint",handleURI);
context.testCase.testSteps["InsertItems"].setPropertyValue("EndPoint",tophandleURI);

context.testCase.testSteps["SetUnPin"].setPropertyValue("EndPoint",handleURI);
context.testCase.testSteps["InsertUnpinnedList"].setPropertyValue("EndPoint",handleURI);
log.info handleURI;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetHandle" id="f39ec9a2-a76f-4011-8734-f7b8b6d5bc00"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="ef05d017-4c4d-4256-869d-95f39fa7b77d" name="GetHandle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/handle/2455</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7838063b-522c-4f1a-8423-b15d4493bea8" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="PinAListItem" id="9d81d803-91dc-418c-b545-426ab1f9451a"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetHandle#Response}');
response = response.replaceAll("<vdf:value>false</vdf:value>","<vdf:value>true</vdf:value>");
response = response.replaceAll("<vdf:value>-1</vdf:value>","<vdf:value>3</vdf:value>");
context.testCase.testSteps["SetPin"].setPropertyValue("Request",response);]]></script></con:config></con:testStep><con:testStep type="httprequest" name="SetPin" id="84efa0a5-5fa9-4b28-8ce8-da2990d444e3"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="42555b2f-ecaf-4ae6-a89f-ebcbc4664a2b" name="SetPin" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/handle/2455</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">\r
   <id>http://qa-belinda:8080/webservice/escenic/list-pool/handle/2455</id>\r
   <updated>2018-02-27T10:50:21.484Z</updated>\r
   <title type="text">(type=1 ,id=2450 ,pubId=-1)</title>\r
   <link rel="edit" href="http://qa-belinda:8080/webservice/escenic/list-pool/handle/2455" type="application/atom+xml"/>\r
   <link rel="self" href="http://qa-belinda:8080/webservice/escenic/list-pool/handle/2455" type="application/atom+xml"/>\r
   <link rel="about" href="http://qa-belinda:8080/webservice/escenic/content/2450" type="application/atom+xml"/>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.poolentry" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="com.escenic.priority">\r
            <vdf:value>3</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.pinned">\r
            <vdf:value>true</vdf:value>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <link rel="collection" href="http://qa-belinda:8080/webservice/escenic/list-pool/687" type="text/uri-list" title="ListTest16:49:22:862"/>\r
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="0a91a264-09e4-47b8-b5cc-d92d8f171a68" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="CreateSomeMoreContents" id="dcc67dfb-1df6-45d0-94cf-2135f090fedd"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;
String content="";
for(int i=0;i&lt;2;i++)
{
	def request = context.expand('${CreateContent#Request}');
	def xml = new XmlParser().parseText(request);
	xml.breadthFirst().each
	{
		if(it.@name!=null)
			if(it.@name=="title")
				it.'vdf:value'[0].value()[0]="Another test story Inserted - "+i;
	};

	def stringwriter = new StringWriter();
	new XmlNodePrinter(new PrintWriter(stringwriter)).print(xml);
	def newXml = stringwriter.toString();
	context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);
	
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CreateContent'])
	def httpResponseHeaders = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
	def location = httpResponseHeaders["Location"][0];
	content = content+location+"\n";
}
context.testCase.testSteps["InsertItems"].setPropertyValue("Request",content);
</script></con:config></con:testStep><con:testStep type="httprequest" name="InsertItems" id="0cecea28-bcc1-466a-ba5c-ba255facbcc9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="733a9d75-624b-42ac-8a5c-6802891cc24b" name="InsertItems" postQueryString="false" mediaType="text/uri-list" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/handle/2453</con:endpoint><con:request>http://qa-belinda:8080/webservice/escenic/content/2453
http://qa-belinda:8080/webservice/escenic/content/2454
</con:request><con:assertion type="GroovyScriptAssertion" id="2e694602-6e9a-4ccd-8c0b-41bc77ba3114" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200 - New Items Inserted");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode+"No items are inserted");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetListPoolAgain" id="55f5f6a9-f42b-4056-83b9-3b8f2a44527c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b4786fd0-3cc7-41dd-a6f2-d83df35abe06" name="GetListPoolAgain" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/687</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="d7e2f638-bd24-47d4-97d9-94a6542f15b4" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int StringCompare(String ID_1,String ID_2)
{
	if(ID_1.length()!=ID_2.length())
	return 0;
	for(int i=0;i&lt;ID_1.length();i++)
	{
		if(ID_1[i]!=ID_2[i])
		return 0;
	}
	return 1;
}

int IsPinnedItemFixed(response,response2)
{
	def xml = new XmlParser().parseText(response);
	def xml2 = new XmlParser().parseText(response2);
	int FOUND=0;
	def ID_1;
	def ID_2;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
		{
			if(FOUND==2)
			ID_1  = it.'id'[0].value()[0];
			FOUND+=1;
		}
	};
	FOUND=0;
	xml2.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
		{
			if(FOUND==2)
			ID_2 =  it.'id'[0].value()[0];
			FOUND+=1;
		}
	};
	
	return StringCompare(ID_1.toString(),ID_2.toString());
}


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def list_response = context.expand('${GetListPool#Response}');
	def list_response_2 = context.expand('${GetListPoolAgain#Response}');
	int res = IsPinnedItemFixed(list_response,list_response_2);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Pinned Items should be unmoved");
	if(res==1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Pinned third Item is at its pinned position");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Pinned third Item is not at its pinned position");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="UnPinTheListItem" id="50a798c6-8e95-4833-8d01-e03627352d1a"><con:settings/><con:config><script><![CDATA[def response = context.expand('${SetPin#Request}');
response = response.replaceAll("<vdf:value>true</vdf:value>","<vdf:value>false</vdf:value>");
response = response.replaceAll("<vdf:value>3</vdf:value>","<vdf:value>-1</vdf:value>");
context.testCase.testSteps["SetUnPin"].setPropertyValue("Request",response);]]></script></con:config></con:testStep><con:testStep type="httprequest" name="SetUnPin" id="348f0321-c931-4623-ae91-1e4406d33fbd"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="42555b2f-ecaf-4ae6-a89f-ebcbc4664a2b" name="SetUnPin" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/handle/2455</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">\r
   <id>http://qa-belinda:8080/webservice/escenic/list-pool/handle/2455</id>\r
   <updated>2018-02-27T10:50:21.484Z</updated>\r
   <title type="text">(type=1 ,id=2450 ,pubId=-1)</title>\r
   <link rel="edit" href="http://qa-belinda:8080/webservice/escenic/list-pool/handle/2455" type="application/atom+xml"/>\r
   <link rel="self" href="http://qa-belinda:8080/webservice/escenic/list-pool/handle/2455" type="application/atom+xml"/>\r
   <link rel="about" href="http://qa-belinda:8080/webservice/escenic/content/2450" type="application/atom+xml"/>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.poolentry" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="com.escenic.priority">\r
            <vdf:value>-1</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.pinned">\r
            <vdf:value>false</vdf:value>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <link rel="collection" href="http://qa-belinda:8080/webservice/escenic/list-pool/687" type="text/uri-list" title="ListTest16:49:22:862"/>\r
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="0a91a264-09e4-47b8-b5cc-d92d8f171a68" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetListPool_UnPinnedList" id="50b7a82c-9159-4479-bc60-daa0436bf6f8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b4786fd0-3cc7-41dd-a6f2-d83df35abe06" name="GetListPool_UnPinnedList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/687</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetHandleID_Again" id="705dc0ce-edba-4879-b901-339b4ab59ead"><con:settings/><con:config><script>//def project = testRunner.testCase.testSuite.project
//String suitename = context.testCase.testSuite.name;
//String testcase = context.testCase.name;
response = context.expand('${GetListPool_UnPinnedList#Response}');
def xml = new XmlParser().parseText(response);
int FOUND=0;
def entry;
xml.breadthFirst().each
{
	if(it.name().toString().contains("entry"))
	{
		if(FOUND==0)
		entry=it;
		FOUND+=1;
	}
};

def handleURI = entry.'id'[0].value()[0];

//context.testCase.testSteps["SetUnPin"].setPropertyValue("EndPoint",handleURI);
context.testCase.testSteps["InsertUnpinnedList"].setPropertyValue("EndPoint",handleURI);
log.info handleURI;</script></con:config></con:testStep><con:testStep type="groovy" name="CreateContentsToInsert" id="73481666-c6be-49b2-8c58-9baedc57613a"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;
String content="";
for(int i=0;i&lt;2;i++)
{
	def request = context.expand('${CreateContent#Request}');
	def xml = new XmlParser().parseText(request);
	xml.breadthFirst().each
	{
		if(it.@name!=null)
			if(it.@name=="title")
				it.'vdf:value'[0].value()[0]="Test story for Unpinned List - "+i;
	};

	def stringwriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringwriter));
	printer.preserveWhitespace=true;
	printer.print(xml);
	def newXml = stringwriter.toString();
	context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);
	
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CreateContent'])
	def httpResponseHeaders = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
	def location = httpResponseHeaders["Location"][0];
	content = content+location+"\n";
}
context.testCase.testSteps["InsertUnpinnedList"].setPropertyValue("Request",content);
</script></con:config></con:testStep><con:testStep type="httprequest" name="InsertUnpinnedList" id="f9f6ddd4-d793-44f5-9e39-2844c63cea7b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="733a9d75-624b-42ac-8a5c-6802891cc24b" name="InsertUnpinnedList" postQueryString="false" mediaType="text/uri-list" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/handle/2453</con:endpoint><con:request>http://qa-belinda:8080/webservice/escenic/content/2455
http://qa-belinda:8080/webservice/escenic/content/2456
</con:request><con:assertion type="GroovyScriptAssertion" id="2e694602-6e9a-4ccd-8c0b-41bc77ba3114" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200 - New Items Inserted");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode+"No items are inserted");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetListPoolAgain2" id="1e7e7617-64a1-4e26-ace2-b5ae75042c1f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b4786fd0-3cc7-41dd-a6f2-d83df35abe06" name="GetListPoolAgain2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/687</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="d7e2f638-bd24-47d4-97d9-94a6542f15b4" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int StringCompare(String ID_1,String ID_2)
{
	if(ID_1.length()!=ID_2.length())
	return 0;
	for(int i=0;i&lt;ID_1.length();i++)
	{
		if(ID_1[i]!=ID_2[i])
		return 0;
	}
	return 1;
}

int IsPinnedItemFixed(response,response2)
{
	def xml = new XmlParser().parseText(response);
	def xml2 = new XmlParser().parseText(response2);
	int FOUND=0;
	def ID_1;
	def ID_2;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
		{
			if(FOUND==2)
			ID_1  = it.'id'[0].value()[0];
			FOUND+=1;
		}
	};
	FOUND=0;
	xml2.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
		{
			if(FOUND==2)
			ID_2 =  it.'id'[0].value()[0];
			FOUND+=1;
		}
	};
	
	return StringCompare(ID_1.toString(),ID_2.toString());
}


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def list_response = context.expand('${GetListPoolAgain#Response}');
	def list_response_2 = context.expand('${GetListPoolAgain2#Response}');
	int res = IsPinnedItemFixed(list_response,list_response_2);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","UnPinned third item is replaced by new item.");
	if(res!=1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","UnPinned third item is replaced by new item.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","UnPinned third item is not replaced by new item.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f38f7275-9137-4d32-add1-e5d42f1d4d64" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RemoveListItem" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="361d0dd5-7db3-4fa3-b33f-3bd5b07564e2"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="db1c3dad-bb7f-420d-9435-11a1267043a5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="c9e7aa4b-f807-4cbf-a4ce-ba86de09acd7"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;
]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="0e755d27-6810-44e8-96c5-7cc47dc24f99"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="344cffa0-8e30-4679-a67d-4f5321b8fbcb"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="8f596255-35df-4f3f-b0da-06e84a9bc2ab"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="c4bb3042-b3fd-4f96-af64-d51bbae8f50c"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="466321c8-83cc-4d09-8c72-8c61d3f38b77"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/content-descriptions/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="03f59ad6-2545-495f-b335-617b0f403955"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="3b91b444-ebc8-4913-9411-b12db440ed4e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title - 4</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="CreateMultipleContents" id="316654b2-85fa-4c10-8b34-fb48957745ec"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;
String content="";
for(int i=0;i&lt;5;i++)
{
	def request = context.expand('${CreateContent#Request}');
	def xml = new XmlParser().parseText(request);
	xml.breadthFirst().each
	{
		if(it.@name!=null)
			if(it.@name=="title")
				it.'vdf:value'[0].value()[0]="This is a test story title - "+i;
		//it.value = "This is a test story title - "+i;
	};

	def stringwriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringwriter));
	printer.preserveWhitespace=true;
	printer.print(xml);
	def newXml = stringwriter.toString();
	context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);
	
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CreateContent'])
	def httpResponseHeaders = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
	def location = httpResponseHeaders["Location"][0];
	content = content+location+"\n";
}
context.testCase.testSteps["AddListItems"].setPropertyValue("Request",content);
</script></con:config></con:testStep><con:testStep type="groovy" name="GetListURI" id="0f6b0b13-d4fb-40f3-92f5-7db6d813fad0"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def List_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
		it.@'rel'=="http://www.vizrt.com/types/relation/lists" &&
		it.@'href'.toString().contains("lists")
		&& FOUND==0
		) {FOUND=1;List_URI = it.@'href';}};

context.testCase.testSteps["CreateList"].setPropertyValue("EndPoint",List_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetListName" id="ea436654-c087-4db4-afad-15674352151c"><con:settings/><con:config><script>String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

String listname = "ListTest"+GetTime();
def request = context.expand('${CreateList#Request}');
def list_xml = new XmlParser().parseText(request);
list_xml.'title'.each{it.value=listname.toString()};

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(list_xml);
def newXml = stringWriter.toString();
//newXml.replace("&lt;entry","asdas");
log.info newXml

context.testCase.testSteps["CreateList"].setPropertyValue("Request",newXml);

log.info GetTime();</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateList" id="23b560f4-6010-4fcf-9041-21805ba7499e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateList" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/lists</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <title type="text">
    ListTest16:49:41:780
  </title>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types">
      <vdf:field name="com.escenic.name">
        <vdf:value>
          testlist
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedListURI" id="22e57d45-a65b-4031-8eca-d3775f370260"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateList"].testRequest.response.responseHeaders;
list_uri = httpResponseHeader["Location"][0];
context.testCase.testSteps["GetList"].setPropertyValue("EndPoint",list_uri);
//context.testCase.testSteps["DeleteList"].setPropertyValue("EndPoint",list_uri);
//context.testCase.testSteps["DeleteListAgain"].setPropertyValue("EndPoint",list_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetList" id="96a13b75-d5c8-4d3e-be67-bb3b87f7cfd9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="29e5663e-0db2-4c34-b42e-cd2c4d306551" name="GetList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list/688</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="215cfc06-5076-4947-a0ab-3fa766120aa7" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetListPoolID" id="f84c24c0-a19d-4763-826e-6b62d2d541ae"><con:settings/><con:config><script>def response = context.expand('${GetList#Response}');
def xml = new XmlParser().parseText(response);
def List_POOL_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp;
		it.@'rel'=="http://www.vizrt.com/types/relation/list-pool"
		&amp;&amp; FOUND==0
		)
		{
			FOUND=1;
			List_POOL_URI = it.@'href';
		}};

context.testCase.testSteps["AddListItems"].setPropertyValue("EndPoint",List_POOL_URI);
context.testCase.testSteps["RetriveListPool"].setPropertyValue("EndPoint",List_POOL_URI);</script></con:config></con:testStep><con:testStep type="httprequest" name="AddListItems" id="be106532-6e27-4a00-9049-8c5e9b3ebeed"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="652d7343-9ad1-49b2-9ad6-c2d25a1a81a6" name="AddListItems" postQueryString="false" mediaType="text/uri-list" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/688</con:endpoint><con:request>http://qa-belinda:8080/webservice/escenic/content/2458
http://qa-belinda:8080/webservice/escenic/content/2459
http://qa-belinda:8080/webservice/escenic/content/2460
http://qa-belinda:8080/webservice/escenic/content/2461
http://qa-belinda:8080/webservice/escenic/content/2462
</con:request><con:assertion type="GroovyScriptAssertion" id="017a780f-aae4-40eb-9ed0-06572469d638" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetHandleIDTORemove" id="89d97ccf-33b5-4832-8b6c-f7ae74090ad6"><con:settings/><con:config><script>def response = context.expand('${AddListItems#Response}');
def xml = new XmlParser().parseText(response);
def handleuri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			if(FOUND==1)
			{
				for(int i=0;i&lt;it.'link'.size();i++)
				{
					if(it.'link'[i].@rel=="self")
					handleuri = it.'link'[i].@'href';
				}
			}
			FOUND+=1;
		}};

context.testCase.testSteps["RemoveListItem"].setPropertyValue("EndPoint",handleuri);
context.testCase.testSteps["RemoveARemovedListItem"].setPropertyValue("EndPoint",handleuri);</script></con:config></con:testStep><con:testStep type="httprequest" name="RemoveListItem" id="fc691bbf-4507-479f-8ff9-17d4a24f9c0a"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="364cb1d1-540d-4fd5-8329-0b103dd49291" name="RemoveListItem" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/handle/2463</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="c0998fb3-ee2c-4e27-8b5e-bcc72ed09b60" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RemoveARemovedListItem" id="cf2633e8-c150-436f-b44c-7dfbc6d4b315"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="364cb1d1-540d-4fd5-8329-0b103dd49291" name="RemoveARemovedListItem" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/handle/2463</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="c0998fb3-ee2c-4e27-8b5e-bcc72ed09b60" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveListPool" id="20fd27fd-fa65-4503-8db4-93a71e182a49"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="18b9ac69-2576-4a4f-881a-baf9a2a773c8" name="RetriveListPool" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/list-pool/688</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="6b63493e-f989-4f01-8616-eddaa58f8f75" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","One list item should be deleted.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Item is removed");
	def response = context.expand('${RetriveListPool#Response}');
	def removedHandleUri = context.expand('${RemoveListItem#EndPoint}').toString();
	int res = response.toString().indexOf(removedHandleUri);
	if(res==-1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Item is not removed");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3d368daf-5c87-43b4-8806-fba7ad097a4d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AddItemToPinnedList(max size)" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="646f76ff-2e3f-46ae-8008-1aeec5be46d6"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="c69cdfcc-7174-4ad6-9541-6b97a92fec29"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="09bab601-ddb4-4344-b2d7-220043f7d6ca"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;
]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="0dfce5f8-5a7d-4bbc-946d-ab55c77e42f3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="c48bf7a6-f9fa-4e50-aeef-3905f166e9c9"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="6d6d0bbf-5721-4ff3-8144-7632ae11dac2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="3bedb159-f8d6-407e-8392-c1595a541a2e"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="3af97219-cb45-44f7-8690-04d136cfa60c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/content-descriptions/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="f3368d6c-968e-4f9a-ac34-cc2dca35aef7"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="c70a5571-9e89-4dab-bb54-398d0cc340cd"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title - 99</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="CreateMultipleContents" id="93a46044-8df2-44da-a78e-568a194bfd5d"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;
String content="";
for(int i=0;i&lt;100;i++)
{
	def request = context.expand('${CreateContent#Request}');
	def xml = new XmlParser().parseText(request);
	xml.breadthFirst().each
	{
		if(it.@name!=null)
			if(it.@name=="title")
				it.'vdf:value'[0].value()[0]="This is a test story title - "+i;
		//it.value = "This is a test story title - "+i;
	};

	def stringwriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringwriter));
	printer.preserveWhitespace=true;
	printer.print(xml);
	def newXml = stringwriter.toString();
	context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);
	
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CreateContent'])
	def httpResponseHeaders = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
	def location = httpResponseHeaders["Location"][0];
	content = content+location+"\n";
}
context.testCase.testSteps["AddListItems"].setPropertyValue("Request",content);
</script></con:config></con:testStep><con:testStep type="groovy" name="GetListURI" id="c82f26eb-4dae-461a-b26f-135ae29352a7"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def List_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
		it.@'rel'=="http://www.vizrt.com/types/relation/lists" &&
		it.@'href'.toString().contains("lists")
		&& FOUND==0
		) {FOUND=1;List_URI = it.@'href';}};

context.testCase.testSteps["CreateList"].setPropertyValue("EndPoint",List_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetListName" id="91cc6d54-2da2-4d67-85f1-61b42b07553c"><con:settings/><con:config><script>String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

String listname = "ListTest"+GetTime();
def request = context.expand('${CreateList#Request}');
def list_xml = new XmlParser().parseText(request);
list_xml.'title'.each{it.value=listname.toString()};

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(list_xml);
def newXml = stringWriter.toString();
//newXml.replace("&lt;entry","asdas");
log.info newXml

context.testCase.testSteps["CreateList"].setPropertyValue("Request",newXml);

log.info GetTime();</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateList" id="a598f01e-07dc-4077-bb56-f40f8e910d7b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateList" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/2/lists</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <title type="text">
    ListTest13:12:48:228
  </title>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types">
      <vdf:field name="com.escenic.name">
        <vdf:value>
          testlist
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedListURI" id="b2db4a9b-9023-4ee2-8001-c9763d26eb73"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateList"].testRequest.response.responseHeaders;
list_uri = httpResponseHeader["Location"][0];
context.testCase.testSteps["GetList"].setPropertyValue("EndPoint",list_uri);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetList" id="32d2ac55-fc84-4e16-9273-fd0528b90084"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="29e5663e-0db2-4c34-b42e-cd2c4d306551" name="GetList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list/411</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="215cfc06-5076-4947-a0ab-3fa766120aa7" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetListPoolID" id="7a03e0d0-c767-4f49-a68a-6efc9de22531"><con:settings/><con:config><script>def response = context.expand('${GetList#Response}');
def xml = new XmlParser().parseText(response);
def List_POOL_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp;
		it.@'rel'=="http://www.vizrt.com/types/relation/list-pool"
		&amp;&amp; FOUND==0
		)
		{
			FOUND=1;
			List_POOL_URI = it.@'href';
		}};

context.testCase.testSteps["AddListItems"].setPropertyValue("EndPoint",List_POOL_URI);
context.testCase.testSteps["GetListPool"].setPropertyValue("EndPoint",List_POOL_URI);
context.testCase.testSteps["CheckPinnedItemExist"].setPropertyValue("EndPoint",List_POOL_URI);
context.testCase.testSteps["ItemsRemovedFromBottom"].setPropertyValue("EndPoint",List_POOL_URI);</script></con:config></con:testStep><con:testStep type="httprequest" name="AddListItems" id="52ef293a-cd47-49da-aa46-c1396e91b637"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="652d7343-9ad1-49b2-9ad6-c2d25a1a81a6" name="AddListItems" postQueryString="false" mediaType="text/uri-list" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list-pool/411</con:endpoint><con:request>http://qa-belinda:8080/webservice/escenic/content/2464
http://qa-belinda:8080/webservice/escenic/content/2465
http://qa-belinda:8080/webservice/escenic/content/2466
http://qa-belinda:8080/webservice/escenic/content/2467
http://qa-belinda:8080/webservice/escenic/content/2468
http://qa-belinda:8080/webservice/escenic/content/2469
http://qa-belinda:8080/webservice/escenic/content/2470
http://qa-belinda:8080/webservice/escenic/content/2471
http://qa-belinda:8080/webservice/escenic/content/2472
http://qa-belinda:8080/webservice/escenic/content/2473
http://qa-belinda:8080/webservice/escenic/content/2474
http://qa-belinda:8080/webservice/escenic/content/2475
http://qa-belinda:8080/webservice/escenic/content/2476
http://qa-belinda:8080/webservice/escenic/content/2477
http://qa-belinda:8080/webservice/escenic/content/2478
http://qa-belinda:8080/webservice/escenic/content/2479
http://qa-belinda:8080/webservice/escenic/content/2480
http://qa-belinda:8080/webservice/escenic/content/2481
http://qa-belinda:8080/webservice/escenic/content/2482
http://qa-belinda:8080/webservice/escenic/content/2483
http://qa-belinda:8080/webservice/escenic/content/2484
http://qa-belinda:8080/webservice/escenic/content/2485
http://qa-belinda:8080/webservice/escenic/content/2486
http://qa-belinda:8080/webservice/escenic/content/2487
http://qa-belinda:8080/webservice/escenic/content/2488
http://qa-belinda:8080/webservice/escenic/content/2489
http://qa-belinda:8080/webservice/escenic/content/2490
http://qa-belinda:8080/webservice/escenic/content/2491
http://qa-belinda:8080/webservice/escenic/content/2492
http://qa-belinda:8080/webservice/escenic/content/2493
http://qa-belinda:8080/webservice/escenic/content/2494
http://qa-belinda:8080/webservice/escenic/content/2495
http://qa-belinda:8080/webservice/escenic/content/2496
http://qa-belinda:8080/webservice/escenic/content/2497
http://qa-belinda:8080/webservice/escenic/content/2498
http://qa-belinda:8080/webservice/escenic/content/2499
http://qa-belinda:8080/webservice/escenic/content/2500
http://qa-belinda:8080/webservice/escenic/content/2501
http://qa-belinda:8080/webservice/escenic/content/2502
http://qa-belinda:8080/webservice/escenic/content/2503
http://qa-belinda:8080/webservice/escenic/content/2504
http://qa-belinda:8080/webservice/escenic/content/2505
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
http://qa-belinda:8080/webservice/escenic/content/2506
</con:request><con:assertion type="GroovyScriptAssertion" id="017a780f-aae4-40eb-9ed0-06572469d638" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetListPool" id="cf4254f9-7b9f-447c-a85e-86fe35809b91"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b4786fd0-3cc7-41dd-a6f2-d83df35abe06" name="GetListPool" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list-pool/411</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="d7e2f638-bd24-47d4-97d9-94a6542f15b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetHandleID" id="1637a34e-9d86-48e6-974d-616b87c0a3a7"><con:settings/><con:config><script>//def project = testRunner.testCase.testSuite.project
//String suitename = context.testCase.testSuite.name;
//String testcase = context.testCase.name;
response = context.expand('${GetListPool#Response}');
def xml = new XmlParser().parseText(response);
int FOUND=0;
def entry;
def topentry;
xml.breadthFirst().each
{
	if(it.name().toString().contains("entry"))
	{
		if(FOUND==0)
		topentry=it;
		if(FOUND==2)
		entry=it;
		FOUND+=1;
	}
};

def handleURI = entry.'id'[0].value()[0];
def tophandleURI = topentry.'id'[0].value()[0];
context.testCase.testSteps["GetHandle"].setPropertyValue("EndPoint",handleURI);
context.testCase.testSteps["SetPin"].setPropertyValue("EndPoint",handleURI);
//context.testCase.testSteps["InsertItems"].setPropertyValue("EndPoint",handleURI);
context.testCase.testSteps["InsertItems"].setPropertyValue("EndPoint",tophandleURI);
log.info handleURI;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetHandle" id="39e94d46-ac64-41e0-9215-e70a514e1d28"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="ef05d017-4c4d-4256-869d-95f39fa7b77d" name="GetHandle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list-pool/handle/1042</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7838063b-522c-4f1a-8423-b15d4493bea8" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="PinAListItem" id="9b4ad780-2afb-46ee-8146-e32eb37d7307"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetHandle#Response}');
response = response.replaceAll("<vdf:value>false</vdf:value>","<vdf:value>true</vdf:value>");
response = response.replaceAll("<vdf:value>-1</vdf:value>","<vdf:value>3</vdf:value>");
context.testCase.testSteps["SetPin"].setPropertyValue("Request",response);]]></script></con:config></con:testStep><con:testStep type="httprequest" name="SetPin" id="8c4caece-3ade-4969-87be-fda477ebb5b6"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="42555b2f-ecaf-4ae6-a89f-ebcbc4664a2b" name="SetPin" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list-pool/handle/1042</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">\r
   <id>http://qa-bianca:8080/webservice/escenic/list-pool/handle/1042</id>\r
   <updated>2017-10-24T07:12:56.255Z</updated>\r
   <title type="text">(type=1 ,id=1489 ,pubId=-1)</title>\r
   <link rel="edit" href="http://qa-bianca:8080/webservice/escenic/list-pool/handle/1042" type="application/atom+xml"/>\r
   <link rel="self" href="http://qa-bianca:8080/webservice/escenic/list-pool/handle/1042" type="application/atom+xml"/>\r
   <link rel="about" href="http://qa-bianca:8080/webservice/escenic/content/1489" type="application/atom+xml"/>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.poolentry" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="com.escenic.priority">\r
            <vdf:value>3</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.pinned">\r
            <vdf:value>true</vdf:value>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <link rel="collection" href="http://qa-bianca:8080/webservice/escenic/list-pool/411" type="text/uri-list" title="ListTest13:12:48:228"/>\r
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="0a91a264-09e4-47b8-b5cc-d92d8f171a68" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="CreateSomeMoreContents" id="23e31798-3dcd-4f5a-a7ef-9b762327be1d"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;
String content="";
for(int i=0;i&lt;2;i++)
{
	def request = context.expand('${CreateContent#Request}');
	def xml = new XmlParser().parseText(request);
	xml.breadthFirst().each
	{
		if(it.@name!=null)
			if(it.@name=="title")
				it.'vdf:value'[0].value()[0]="Pinned item should not be removed - "+i;
	};

	def stringwriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringwriter));
	printer.preserveWhitespace=true;
	printer.print(xml);
	def newXml = stringwriter.toString();
	context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);
	
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CreateContent'])
	def httpResponseHeaders = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
	def location = httpResponseHeaders["Location"][0];
	content = content+location+"\n";
}
context.testCase.testSteps["InsertItems"].setPropertyValue("Request",content);
</script></con:config></con:testStep><con:testStep type="httprequest" name="InsertItems" id="2e520ac5-a495-4095-bc52-5109215cc627"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="733a9d75-624b-42ac-8a5c-6802891cc24b" name="InsertItems" postQueryString="false" mediaType="text/uri-list" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list-pool/handle/1040</con:endpoint><con:request>http://qa-bianca:8080/webservice/escenic/content/1587
http://qa-bianca:8080/webservice/escenic/content/1588
</con:request><con:assertion type="GroovyScriptAssertion" id="2e694602-6e9a-4ccd-8c0b-41bc77ba3114" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200 - New Items Inserted");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode+"No items are inserted");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckPinnedItemExist" id="0387fc0e-a348-4d3c-ac9f-fa68d1e4e0f9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b4786fd0-3cc7-41dd-a6f2-d83df35abe06" name="CheckPinnedItemExist" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list-pool/411</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="d7e2f638-bd24-47d4-97d9-94a6542f15b4" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int StringCompare(String ID_1,String ID_2)
{
	if(ID_1.length()!=ID_2.length())
	return 0;
	for(int i=0;i&lt;ID_1.length();i++)
	{
		if(ID_1[i]!=ID_2[i])
		return 0;
	}
	return 1;
}

int IsPinnedItemFixed(response,response2)
{
	def xml = new XmlParser().parseText(response);
	def xml2 = new XmlParser().parseText(response2);
	int FOUND=0;
	def ID_1;
	def ID_2;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
		{
			if(FOUND==2)
			{
				for(int i=0;i&lt;it.'link'.size();i++)
				{
					if(it.'link'[i].@'rel'=="about")
					ID_1 = it.'link'[i].@'href';
				}
				//ID_1  = it.'id'[0].value()[0];
			}
			FOUND+=1;
		}
	};
	FOUND=0;
	xml2.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
		{
			if(FOUND==2)
			for(int i=0;i&lt;it.'link'.size();i++)
			{
				if(it.'link'[i].@'rel'=="about")
				ID_2 = it.'link'[i].@'href';
			}
			//ID_2 =  it.'id'[0].value()[0];
			FOUND+=1;
		}
	};
	log.info ID_1;
	log.info ID_2;
	return StringCompare(ID_1.toString(),ID_2.toString());
}


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def list_response = context.expand('${GetListPool#Response}');
	def list_response_2 = context.expand('${CheckPinnedItemExist#Response}');
	int res = IsPinnedItemFixed(list_response,list_response_2);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Pinned Items should exist.");
	if(res==1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Pinned third Item is at its pinned position");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Pinned third Item is removed");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="ItemsRemovedFromBottom" id="e0f6763f-dd62-4bff-a335-d9e92463a870"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b4786fd0-3cc7-41dd-a6f2-d83df35abe06" name="ItemsRemovedFromBottom" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list-pool/411</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="d7e2f638-bd24-47d4-97d9-94a6542f15b4" name="Script Assertion"><con:configuration><scriptText><![CDATA[def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int StringCompare(String ID_1,String ID_2)
{
	if(ID_1.length()!=ID_2.length())
	return 0;
	for(int i=0;i<ID_1.length();i++)
	{
		if(ID_1[i]!=ID_2[i])
		return 0;
	}
	return 1;
}

int IsItemsRemovedFromBottom(response,response2)
{
	def xml = new XmlParser().parseText(response);
	def xml2 = new XmlParser().parseText(response2);
	int FOUND=0;
	def ID_1=new String[2];
	def ID_2=new String[2];
	def LastID=new String[2];
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
		{
			if(FOUND==98)
			{
				for(int i=0;i<it.'link'.size();i++)
				{
					if(it.'link'[i].@'rel'=="about")
					ID_1[0] = it.'link'[i].@'href';
				}
			}
			if(FOUND==99)
			{
				for(int i=0;i<it.'link'.size();i++)
				{
					if(it.'link'[i].@'rel'=="about")
					ID_1[1] = it.'link'[i].@'href';
				}
			}
			if(FOUND==96)
			{
				for(int i=0;i<it.'link'.size();i++)
				{
					if(it.'link'[i].@'rel'=="about")
					LastID[0] = it.'link'[i].@'href';
				}
			}
			if(FOUND==97)
			{
				for(int i=0;i<it.'link'.size();i++)
				{
					if(it.'link'[i].@'rel'=="about")
					LastID[1] = it.'link'[i].@'href';
				}
			}
			FOUND+=1;
		}
	};
	FOUND=0;
	xml2.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
		{
			if(FOUND==98)
			{
				for(int i=0;i<it.'link'.size();i++)
				{
					if(it.'link'[i].@'rel'=="about")
					ID_2[0] = it.'link'[i].@'href';
				}
			}
			if(FOUND==99)
			{
				for(int i=0;i<it.'link'.size();i++)
				{
					if(it.'link'[i].@'rel'=="about")
					ID_2[1] = it.'link'[i].@'href';
				}
			}
			FOUND+=1;
		}
	};
	log.info ID_1[0];
	log.info ID_1[1];
	log.info ID_2[0];
	log.info ID_2[1];
	for(int i=0;i<2;i++)
	{
		if(StringCompare(ID_1[i],ID_2[i])==1)
		return 0;
		if(StringCompare(ID_2[i],LastID[i])!=1)
		return 0;
	}
	return 1;
}


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def list_response = context.expand('${GetListPool#Response}');
	def list_response_2 = context.expand('${ItemsRemovedFromBottom#Response}');
	int res = IsItemsRemovedFromBottom(list_response,list_response_2);
	log.info res+2;
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Items should be removed from bottom");
	if(res==1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Two Items are removed from bottom.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Items did not removed from bottom");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}]]></scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6406e6eb-14cc-4838-9a2e-aea15098eb65" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ListRenamingUpdateETag-VF-7051" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="b7798934-1736-47df-9dc0-378d17d70b14"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="ee7f7677-34c9-4fc7-b1fa-b05086490cf8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="316b26c4-f6a5-4426-a0f8-e046651641da" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3dedee16-6060-463d-8622-13bc47d12a26" name="Script Assertion"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetRootSectionURI" id="e2de56fc-111d-4f6f-b7d7-53e6892730cc"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

//context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;
]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="6e45c4a0-fa9d-43d5-bbcc-0ce5e9fe6ec9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="eccea409-651f-4885-84b0-9b98e9fb26c5" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f186009e-820c-46ad-b5e2-3750e7791387" name="Script Assertion"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetSectionURI" id="d8a2da0c-1114-409b-8561-544f4cb64efc"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="a31699dc-66c9-4e07-bf0d-28f2302a74b5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d7c9f20e-66e6-47ae-b5e7-06f6b22d9e6a" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e0d1f504-e5ef-484c-b1e2-f65e8d57fc7a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetListURI" id="174386bf-9dfa-4a72-b65a-be44c3bebaaf"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def List_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
		it.@'rel'=="http://www.vizrt.com/types/relation/lists" &&
		it.@'href'.toString().contains("lists")
		&& FOUND==0
		) {FOUND=1;List_URI = it.@'href';}};

context.testCase.testSteps["CreateList"].setPropertyValue("EndPoint",List_URI);
context.testCase.testSteps["GetETagOfSectionLists"].setPropertyValue("EndPoint",List_URI);
context.testCase.testSteps["CheckETagOfSectionLists"].setPropertyValue("EndPoint",List_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetListName" id="aa49236e-1331-4e32-88ac-c6c1cd91b733"><con:settings/><con:config><script>String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

String listname = "ListTest"+GetTime();
def request = context.expand('${CreateList#Request}');
def list_xml = new XmlParser().parseText(request);
list_xml.'title'.each{it.value=listname.toString()};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace = true;
printer.print(list_xml);
def newXml = stringWriter.toString();
//newXml.replace("&lt;entry","asdas");
log.info newXml

context.testCase.testSteps["CreateList"].setPropertyValue("Request",newXml);

log.info GetTime();</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateList" id="64001a3a-65e1-43bd-a06f-332efd2ca7db"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateList" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/2/lists</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <title type="text">ListTest13:12:56:980</title>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types">
      <vdf:field name="com.escenic.name">
        <vdf:value>testlist</vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedListURI" id="7c0b2abc-814e-4395-9345-ddc04cda9a34"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateList"].testRequest.response.responseHeaders;
list_uri = httpResponseHeader["Location"][0];
context.testCase.testSteps["GetList"].setPropertyValue("EndPoint",list_uri);
//context.testCase.testSteps["CheckListNameUpdate"].setPropertyValue("EndPoint",list_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetList" id="a87708a6-713a-40a0-80db-f0279bf8ffd7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="29e5663e-0db2-4c34-b42e-cd2c4d306551" name="GetList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list/412</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="215cfc06-5076-4947-a0ab-3fa766120aa7" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetETagOfSectionLists" id="b1320402-e274-4636-8f23-a134ae9f3b1d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="617b654a-4c32-470b-9127-a36c1fb4f4d1" name="GetETagOfSectionLists" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/2/lists</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="2260a522-c45f-4cb5-92b0-06b8f6bc3ae4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetEditURL_Header" id="c8e8d0a2-1e99-46b0-8779-89d40b281c5b"><con:settings/><con:config><script><![CDATA[def httpResponseHeader = context.testCase.testSteps["GetList"].testRequest.response.responseHeaders;

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def headers = context.utility.ETAG_At_Header(httpResponseHeader);
context.testCase.testSteps["RenameList"].testRequest.setRequestHeaders(headers);

def response = context.expand('${GetList#Response}');
def xml = new XmlParser().parseText(response);
def Edit_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
		it.@'rel'=="edit" &&
		it.@'href'.toString().contains("list")
		&& FOUND==0
		) {FOUND=1;Edit_URI = it.@'href';}};

context.testCase.testSteps["RenameList"].setPropertyValue("EndPoint",Edit_URI);
//context.testCase.testSteps["RenameList_WithSameHeader"].setPropertyValue("EndPoint",Edit_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="EditListName" id="2be2fc3e-0349-4aa3-bc5c-3a9d4220199d"><con:settings/><con:config><script>def response = context.expand('${GetList#Response}');
def xml = new XmlParser().parseText(response);
xml.breadthFirst().each
{
	if(it.name().toString().contains("title"))
	it.value =  it.value()[0]+"Edit";
};
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(xml);
def newXml=stringWriter.toString();

context.testCase.testSteps["RenameList"].setPropertyValue("Request",newXml);
//context.testCase.testSteps["RenameList_WithSameHeader"].setPropertyValue("Request",response);</script></con:config></con:testStep><con:testStep type="httprequest" name="RenameList" id="c342dc9c-fca9-4a1d-bd29-fe71b5fb07bd"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="58f72af5-bda3-4315-a60d-151ca2b50c13" name="RenameList" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;9a828ce1-141f-44b2-91ff-4c07fa82cb31&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list/412</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>http://qa-bianca:8080/webservice/escenic/list/412</id>
  <link rel="self" href="http://qa-bianca:8080/webservice/escenic/list/412" type="application/atom+xml; type=entry"/>
  <link rel="edit" href="http://qa-bianca:8080/webservice/escenic/list/412" type="application/atom+xml; type=entry"/>
  <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-bianca:8080/webservice/escenic/lock/pool/412/9a828ce1-141f-44b2-91ff-4c07fa82cb31" type="application/atom+xml; type=entry"/>
  <dcterms:identifier xmlns:dcterms="http://purl.org/dc/terms/">412</dcterms:identifier>
  <link href="http://qa-bianca:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>
  <link href="http://qa-bianca:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://qa-bianca:8080/webservice/escenic/publication/qa/" title="qa"/>
  <title type="text">ListTest13:12:56:980Edit</title>
  <link rel="edit-media" href="http://qa-bianca:8080/webservice/escenic/list/412" type="application/vnd.escenic.content+xml; type=com.escenic.list" title="ListTest13:12:56:980"/>
  <link rel="http://www.vizrt.com/types/relation/parent" href="http://qa-bianca:8080/webservice/escenic/section/2" type="application/atom+xml; type=entry" title="New Articles"/>
  <link href="http://qa-bianca:8080/webservice/escenic/section-page/412/preview" rel="http://www.vizrt.com/types/relation/preview"/>
  <dcterms:created xmlns:dcterms="http://purl.org/dc/terms/">2017-10-24T07:13:02.000Z</dcterms:created>
  <app:edited xmlns:app="http://www.w3.org/2007/app">2017-10-24T07:13:02.000Z</app:edited>
  <app:control xmlns:app="http://www.w3.org/2007/app">
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext" name="draft" href="http://qa-bianca:8080/webservice/escenic/pool/state/draft"/>
    <app:draft>yes</app:draft>
  </app:control>
  <link rel="http://www.vizrt.com/types/relation/list-pool" href="http://qa-bianca:8080/webservice/escenic/list-pool/412" type="application/atom+xml"/>
  <link rel="http://www.vizrt.com/types/relation/changelog" href="http://qa-bianca:8080/webservice/escenic/changelog/list/412" type="application/atom+xml"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="de566e45-0406-43a9-bbf8-c70bc5eb13ef" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckETagOfSectionLists" id="f065f85e-f19e-4d87-82fb-4670cd5b29f6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="617b654a-4c32-470b-9127-a36c1fb4f4d1" name="CheckETagOfSectionLists" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/2/lists</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="284ef27d-f01c-4c75-a2f1-e26167d9e121" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int isDifferent(String a,String b)
{
	if(a.length()!=b.length())
	return 1;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 1;
	}
	return 0;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def old_response = context.testCase.testSteps["GetETagOfSectionLists"].testRequest.response.responseHeaders;
	def new_response = httpResponseHeaders;
	def old_ETag = old_response["ETag"][0];
	def new_ETag = new_response["ETag"][0];
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Prev ETag: "+old_ETag+", New ETag: "+new_ETag+". ETag is updated.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Prev ETag: "+old_ETag+", New ETag: "+new_ETag+". ETag is updated.");
	if(isDifferent(old_ETag.toString(),new_ETag.toString()) == 1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Prev ETag: "+old_ETag+", New ETag: "+new_ETag+". ETag is not updated.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="67902e5b-973f-4667-9d6e-a612cb121cab" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="IsListPoolContainsOldWebserviceLink-VF-2509" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="d78b41a8-eb0d-44b7-be01-16f69315c685"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="df3abd20-7126-4d27-a6be-855803a89726"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="316b26c4-f6a5-4426-a0f8-e046651641da" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3dedee16-6060-463d-8622-13bc47d12a26" name="Script Assertion"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetRootSectionURI" id="75145d7a-259d-445c-9163-986156f3c0df"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

//context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;
]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="4c11311d-8407-4093-a8fa-3b112801094e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="eccea409-651f-4885-84b0-9b98e9fb26c5" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f186009e-820c-46ad-b5e2-3750e7791387" name="Script Assertion"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetSectionURI" id="3d50191f-be6d-48b2-a4f8-22eb150a4cc2"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="f64dfd56-e202-4a62-b5cf-9ed8a86a1485"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d7c9f20e-66e6-47ae-b5e7-06f6b22d9e6a" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e0d1f504-e5ef-484c-b1e2-f65e8d57fc7a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetListURI" id="0913bfcd-b29e-4a1f-9c4c-fd4cb083087d"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def List_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
		it.@'rel'=="http://www.vizrt.com/types/relation/lists" &&
		it.@'href'.toString().contains("lists")
		&& FOUND==0
		) {FOUND=1;List_URI = it.@'href';}};

context.testCase.testSteps["CreateList"].setPropertyValue("EndPoint",List_URI);
context.testCase.testSteps["CheckListPoolRelation"].setPropertyValue("EndPoint",List_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetListName" id="0852316d-ee4c-41be-b52d-2c42e66f2142"><con:settings/><con:config><script>String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

String listname = "ListTest"+GetTime();
def request = context.expand('${CreateList#Request}');
def list_xml = new XmlParser().parseText(request);
list_xml.'title'.each{it.value=listname.toString()};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(list_xml);
def newXml = stringWriter.toString();
//newXml.replace("&lt;entry","asdas");
log.info newXml

context.testCase.testSteps["CreateList"].setPropertyValue("Request",newXml);

log.info GetTime();</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateList" id="a320ffb2-8f2a-4495-8fdb-c9f68ce07a9a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateList" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/2/lists</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <title type="text">ListTest13:13:1:696</title>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types">
      <vdf:field name="com.escenic.name">
        <vdf:value>testlist</vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckListPoolRelation" id="449125eb-b403-49e0-9173-b921dd6fb4fd"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="8cfc6223-ce54-4655-8d82-1c09e9281420" name="CheckListPoolRelation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/2/lists</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="b7de341f-9cb7-4e16-b0e6-7b34a5026c27" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int IsContainOldWebserviceLink(response)
{
	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project;

	def xml = new XmlParser().parseText(response);
	int FOUND = 0;
	int count = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("link") &amp;&amp; it.@rel.toString().contains("list-pool"))
		{
			count+=1;
			if(!it.@rel.toString().contains("www.vizrt.com"))
			FOUND+=1;
		}
	};
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","New webservice link is found at "+count+" list-pool.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Old webservice link is found at "+FOUND+" list-pool.");
	return FOUND;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${CheckListPoolRelation#Response}');
	if(IsContainOldWebserviceLink(response)==0)
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	else
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="03f4afc3-fa7f-4fab-ab9f-dc9699433237" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestUsageLinkStory-VF-6449" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="f4e9490a-bf85-4f4e-9530-94bfb1a976ff"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="1bb52b03-c645-4b6f-af6d-11b1419ac1a3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDescriptionURI" id="5a7cf7fb-ede9-4aff-b18f-6654dc3abe97"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="29a51477-cf9f-460f-b79b-42b6228fb478"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="bd049834-d3d4-4449-8130-d03b5a93167a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="b76f51da-fca3-48fc-b41e-1fd80a74ccf2"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="af797f24-1eec-4dce-bbd8-973b69f71a21"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetContentURI" id="d249fecf-54b8-454c-8479-bd1409224a7f"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def content_uri;
if(httpResponseHeader!=null)
{
	content_uri = httpResponseHeader["Location"][0];
}
context.testCase.testSteps["RetriveContent"].setPropertyValue("EndPoint",content_uri);</script></con:config></con:testStep><con:testStep type="groovy" name="SetAllListLocation" id="e8c20d11-24ee-4993-8377-ad43be61e7c6"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def listsUri;
int FOUND = 0;
xml.breadthFirst().each
{
	if(it.@rel=="lists" &amp;&amp; FOUND==0)
	{
		listsUri = it.@href;
		FOUND = 1;
	}
};

if(listsUri.toString().contains("webservice"))
{
	int index = listsUri.indexOf("webservice")+"webservice".length();
	listsUri = context.expand('${GetWebservices#EndPoint}') + listsUri.substring(index);
}
else
{
	listsUri = context.expand('${GetWebservices#EndPoint}') +"/" +listsUri;
}
context.testCase.testSteps["GetAllLists"].setPropertyValue("Endpoint",listsUri);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetAllLists" id="9727ac35-c6f2-4a73-b4dd-aee890a582ed"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="60edff1a-d0c5-4abc-974b-1ecd22bde13d" name="GetAllLists" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/publication/qa/escenic/lists/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="60c6ddaa-f2f7-4d5d-9309-21aefc1fd684" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SelectAListPool" id="ab057f86-e9a9-4530-a806-bf90a3409441"><con:settings/><con:config><script>def response = context.expand('${GetAllLists#Response}');
def xml = new XmlParser().parseText(response);
def listsUri;
int FOUND = 0;
xml.breadthFirst().each
{
	if(it.@rel=="http://www.vizrt.com/types/relation/list-pool" &amp;&amp; FOUND==0)
	{
		listsUri = it.@href;
		FOUND = 1;
	}
};
context.testCase.testSteps["AddStoryToList"].setPropertyValue("EndPoint",listsUri);

def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def content;
if(httpResponseHeader!=null)
{
	content = httpResponseHeader["Location"][0];
}
context.testCase.testSteps["AddStoryToList"].setPropertyValue("Request",content);</script></con:config></con:testStep><con:testStep type="httprequest" name="AddStoryToList" id="4a2e8b65-b6fe-4362-a887-5f8e73df0dd8"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="5c93c8d7-d1a8-4091-9acd-a98e47b60f82" name="AddStoryToList" postQueryString="false" mediaType="text/uri-list" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list-pool/202</con:endpoint><con:request>http://qa-bianca:8080/webservice/escenic/content/1589</con:request><con:assertion type="GroovyScriptAssertion" id="96a601ae-2bc4-427c-bcb2-1e9b973d1b2f" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveContent" id="ccb833ac-ba1a-448b-86f1-113357f7275a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="290bbc40-c3c8-4f23-b6b0-518d96c687e2" name="RetriveContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/content/1589</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3bc19c07-4ebb-4b30-ae8d-1f7792f8fc7a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetUsageLink" id="14196980-ff59-443d-b489-96e28690ae9a"><con:settings/><con:config><script>def response = context.expand('${RetriveContent#Response}');
def xml = new XmlParser().parseText(response);
def usageLink;
int FOUND = 0;
xml.breadthFirst().each
{
	if(it.@rel=="usage" &amp;&amp; FOUND==0)
	{
		usageLink = it.@href;
		FOUND = 1;
	}
};

context.testCase.testSteps["CheckUsageLink"].setPropertyValue("EndPoint",usageLink);</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckUsageLink" id="c2c8ac02-a2f9-41c1-8f38-a2a5e0fa0955"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="6e711912-0d06-4a50-a15b-56afb6149ff0" name="CheckUsageLink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/usage/article/1589</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="05ae072c-e116-4ed8-9658-e886aca85064" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int checkReturnLink(String str)
{
	if(str.contains("com.escenic.list"))
	return 0;
	if(str.contains("/list/"))
	return 1;
}

int IsContainOldWebserviceLink(response)
{
	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project

	int count=0;
	def listPool = context.expand('${AddStoryToList#Endpoint}');
	def numbers = listPool.findAll(/\d+/)*.toInteger();
	int ListID = numbers[1];
	int result=0;
	String str;
	while(count&lt;2)
	{
		idx = response.indexOf("\n");
		count+=1;
		str = response.substring(0,idx);
		if(str.contains(ListID.toString()))
		{
			result = checkReturnLink(str);
		}
		response=response.substring(idx+1);
	}

	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Content URI returns usage link as "+"http:/HOST/webservice/escenic/list/ID");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Content URI returns usage link as "+str);
	return result;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${CheckUsageLink#Response}');
	if(IsContainOldWebserviceLink(response)==1)
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	else
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="821442dc-51da-4e1b-8bc7-6926b2dd5dff" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestOPTIONReqOnListPool-VF-5640" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="98bd252b-f74a-4b34-a78d-6e13b4860a93"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="49635323-927d-4d0f-b3aa-705cd8cac673"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetAllListLocation" id="38c43702-576d-4165-b51c-c5172b45604e"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def listsUri;
int FOUND = 0;
xml.breadthFirst().each
{
	if(it.@rel=="lists" &amp;&amp; FOUND==0)
	{
		listsUri = it.@href;
		FOUND = 1;
	}
};

if(listsUri.toString().contains("webservice"))
{
	int index = listsUri.indexOf("webservice")+"webservice".length();
	listsUri = context.expand('${GetWebservices#EndPoint}') + listsUri.substring(index);
}
else
{
	listsUri = context.expand('${GetWebservices#EndPoint}') +"/" +listsUri;
}
context.testCase.testSteps["GetAllLists"].setPropertyValue("Endpoint",listsUri);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetAllLists" id="5b88a4d8-91f1-49ea-91ad-aaac42ae0679"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="60edff1a-d0c5-4abc-974b-1ecd22bde13d" name="GetAllLists" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/publication/qa/escenic/lists/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="60c6ddaa-f2f7-4d5d-9309-21aefc1fd684" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SelectAListPool" id="911acb36-d144-4074-9d3c-ba85bab699c5"><con:settings/><con:config><script>def response = context.expand('${GetAllLists#Response}');
def xml = new XmlParser().parseText(response);
def listsUri;
int FOUND = 0;
xml.breadthFirst().each
{
	if(it.@rel=="http://www.vizrt.com/types/relation/list-pool" &amp;&amp; FOUND==0)
	{
		listsUri = it.@href;
		FOUND = 1;
	}
};
context.testCase.testSteps["CheckOptionReq"].setPropertyValue("EndPoint",listsUri);
</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckOptionReq" id="c234c4fa-e026-47c8-a0f4-7bb5903c1961"><con:settings/><con:config method="OPTIONS" xsi:type="con:HttpRequest" id="156188eb-0e42-40dd-af9c-5d0da3ad0f87" name="CheckOptionReq" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list-pool/202</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e7854597-1a54-4d33-a260-8b1a703f8d49" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int checkOptions(options)
{
	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project

	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","OPTIONS request to list-pool URI is Allow: OPTIONS, HEAD, GET, POST");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","OPTIONS request to list-pool URI is Allow: "+options);	
	
	if(!options.contains("OPTIONS"))
	return 0;
	if(!options.contains("HEAD"))
	return 0;
	if(!options.contains("GET"))
	return 0;
	if(!options.contains("POST"))
	return 0;
	int count = 0;
	int idx;
	def ListOptions = new String[4];
	while(options.indexOf(",")>=0)
	{
		idx = options.indexOf(",");
		ListOptions[count]=options.substring(0,idx);
		options=options.substring(idx+1);
		count+=1;
	}
	if(options.length()>0)
	count+=1;
	return count;
}
/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	def options = httpResponseHeaders["Allow"][0];
	int res = checkOptions(options);
	log.info res;
	if(res==4)
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	else
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d1bfb42d-6c30-4332-9c1c-805859b87bc7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestOPTIONReqOnListPoolHandle-VF-5640" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="3ffc9496-6ea8-46e0-8472-f2437a037322"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="c4f10d42-ce8b-4d1c-bcb3-c33c1718d97e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDescriptionURI" id="f8a00d3a-7dc2-4bed-9d17-14cf7e904bf3"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="423f7bee-58d0-4baa-83ed-00e6f91d38fa"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="cdbe8f12-c989-40f3-b8c7-0745729fbfe1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="e0e3fdef-c6a4-45b0-8c07-3b0415c3bb0c"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="57fb0c63-49a4-449e-872b-780657bbb19a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetAllListLocation" id="22c9977e-b13a-4125-ba9d-63d69295d6fd"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def listsUri;
int FOUND = 0;
xml.breadthFirst().each
{
	if(it.@rel=="lists" &amp;&amp; FOUND==0)
	{
		listsUri = it.@href;
		FOUND = 1;
	}
};

if(listsUri.toString().contains("webservice"))
{
	int index = listsUri.indexOf("webservice")+"webservice".length();
	listsUri = context.expand('${GetWebservices#EndPoint}') + listsUri.substring(index);
}
else
{
	listsUri = context.expand('${GetWebservices#EndPoint}') +"/" +listsUri;
}
context.testCase.testSteps["GetAllLists"].setPropertyValue("Endpoint",listsUri);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetAllLists" id="950fe5cf-78ff-47a7-8ee1-3fa8b16135a8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="60edff1a-d0c5-4abc-974b-1ecd22bde13d" name="GetAllLists" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/publication/qa/escenic/lists/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="60c6ddaa-f2f7-4d5d-9309-21aefc1fd684" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SelectAListPool" id="3e4b765b-fa23-4ee2-afe3-bc9d93261475"><con:settings/><con:config><script>def response = context.expand('${GetAllLists#Response}');
def xml = new XmlParser().parseText(response);
def listsUri;
int FOUND = 0;
xml.breadthFirst().each
{
	if(it.@rel=="http://www.vizrt.com/types/relation/list-pool" &amp;&amp; FOUND==0)
	{
		listsUri = it.@href;
		FOUND = 1;
	}
};
context.testCase.testSteps["AddStoryToList"].setPropertyValue("EndPoint",listsUri);
context.testCase.testSteps["GetListPool"].setPropertyValue("EndPoint",listsUri);

def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def content;
if(httpResponseHeader!=null)
{
	content = httpResponseHeader["Location"][0];
}
context.testCase.testSteps["AddStoryToList"].setPropertyValue("Request",content);</script></con:config></con:testStep><con:testStep type="httprequest" name="AddStoryToList" id="59d0f3c5-94ce-45e8-b6e3-6f5b3d8a9228"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="5c93c8d7-d1a8-4091-9acd-a98e47b60f82" name="AddStoryToList" postQueryString="false" mediaType="text/uri-list" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list-pool/202</con:endpoint><con:request>http://qa-bianca:8080/webservice/escenic/content/1590</con:request><con:assertion type="GroovyScriptAssertion" id="96a601ae-2bc4-427c-bcb2-1e9b973d1b2f" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetListPool" id="c7f6f22a-27e9-4796-83a2-b11afc008b4b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="156188eb-0e42-40dd-af9c-5d0da3ad0f87" name="GetListPool" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list-pool/202</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e7854597-1a54-4d33-a260-8b1a703f8d49" name="Script Assertion"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetHandleID" id="cfafb9d1-8544-4a1d-ae1d-a8cb5551cb81"><con:settings/><con:config><script>def response = context.expand('${GetListPool#Response}');
def xml = new XmlParser().parseText(response);
def handleUri;
int FOUND = 0;
xml.depthFirst().each
{
	if(it.name().toString().contains("entry") &amp;&amp; FOUND==0 &amp;&amp; it.'id'!=null)
	{
		handleUri = it.'id'[0].value()[0];
	}
};
context.testCase.testSteps["CheckHandleOptions"].setPropertyValue("EndPoint",handleUri);
//context.testCase.testSteps["GetListPool"].setPropertyValue("EndPoint",listsUri);</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckHandleOptions" id="c9ef9ca1-3bf7-4360-89a9-061940b6fc42"><con:settings/><con:config method="OPTIONS" xsi:type="con:HttpRequest" id="156188eb-0e42-40dd-af9c-5d0da3ad0f87" name="CheckHandleOptions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list-pool/handle/664</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e7854597-1a54-4d33-a260-8b1a703f8d49" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int checkOptions(options)
{
	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","OPTIONS request to list-pool handle URI is Allow: OPTIONS,HEAD,GET,POST,DELETE");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","OPTIONS request to list-pool handle URI is Allow: "+options);

	if(!options.contains("OPTIONS"))
	return 0;
	if(!options.contains("HEAD"))
	return 0;
	if(!options.contains("GET"))
	return 0;
	if(!options.contains("POST"))
	return 0;
	if(!options.contains("PUT"))
	return 0;
	if(!options.contains("DELETE"))
	return 0;
	int count = 0;
	int idx;
	def ListOptions = new String[5];
	while(options.indexOf(",")>=0)
	{
		idx = options.indexOf(",");
		ListOptions[count]=options.substring(0,idx);
		options=options.substring(idx+1);
		count+=1;
	}
	if(options.length()>0)
	count+=1;
	return count;
}
/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	def options = httpResponseHeaders["Allow"][0];
	int res = checkOptions(options);
	log.info options;
	if(res==6)
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	else
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3717b8df-ad69-4f41-985b-2569399db157" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ListPoolWebserviceAddUsefullLinks-VF-6193" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="fa23b51d-1e4d-466d-ba36-9854c6203927"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="96202913-0cbd-4e51-aaa1-9d72f73a2f0a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDescriptionURI" id="2cdce84c-9b57-4289-88e1-8c6bf1bd0cdc"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="1f792edc-660e-4499-92b8-25d0bcef43b5"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="9e1e2953-c081-4cd0-bd2f-29514367a501"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="053e50df-eaa4-4677-be33-b8e603bcd96d"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="9367a657-e0d2-4bd4-bb93-e316cd0cd9d5"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetAllListLocation" id="f08c9670-28e2-440f-a7b4-adcb82d9c3df"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def listsUri;
int FOUND = 0;
xml.breadthFirst().each
{
	if(it.@rel=="lists" &amp;&amp; FOUND==0)
	{
		listsUri = it.@href;
		FOUND = 1;
	}
};

if(listsUri.toString().contains("webservice"))
{
	int index = listsUri.indexOf("webservice")+"webservice".length();
	listsUri = context.expand('${GetWebservices#EndPoint}') + listsUri.substring(index);
}
else
{
	listsUri = context.expand('${GetWebservices#EndPoint}') +"/" +listsUri;
}
context.testCase.testSteps["GetAllLists"].setPropertyValue("Endpoint",listsUri);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetAllLists" id="0b83fdfd-9233-49c7-8eb6-43de23ecd1e3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="60edff1a-d0c5-4abc-974b-1ecd22bde13d" name="GetAllLists" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/publication/qa/escenic/lists/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="60c6ddaa-f2f7-4d5d-9309-21aefc1fd684" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SelectAListPool" id="88c26b8a-0580-4262-b894-7cbec52ca7db"><con:settings/><con:config><script>def response = context.expand('${GetAllLists#Response}');
def xml = new XmlParser().parseText(response);
def listsUri;
int FOUND = 0;
xml.breadthFirst().each
{
	if(it.@rel=="http://www.vizrt.com/types/relation/list-pool" &amp;&amp; FOUND==0)
	{
		listsUri = it.@href;
		FOUND = 1;
	}
};
context.testCase.testSteps["AddStoryToList"].setPropertyValue("EndPoint",listsUri);
context.testCase.testSteps["GetListPool"].setPropertyValue("EndPoint",listsUri);

def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def content;
if(httpResponseHeader!=null)
{
	content = httpResponseHeader["Location"][0];
}
context.testCase.testSteps["AddStoryToList"].setPropertyValue("Request",content);</script></con:config></con:testStep><con:testStep type="httprequest" name="AddStoryToList" id="1042faa8-8ead-40dd-9dd4-2c3cbbc1d733"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="5c93c8d7-d1a8-4091-9acd-a98e47b60f82" name="AddStoryToList" postQueryString="false" mediaType="text/uri-list" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list-pool/202</con:endpoint><con:request>http://qa-bianca:8080/webservice/escenic/content/1591</con:request><con:assertion type="GroovyScriptAssertion" id="96a601ae-2bc4-427c-bcb2-1e9b973d1b2f" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetListPool" id="b5f740b3-cd67-4f0b-8719-a2ced3bdcafc"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="156188eb-0e42-40dd-af9c-5d0da3ad0f87" name="GetListPool" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list-pool/202</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e7854597-1a54-4d33-a260-8b1a703f8d49" name="Script Assertion"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetHandleID" id="301aa571-8819-4715-b42c-4bba14dec133"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetListPool#Response}');
def xml = new XmlParser().parseText(response);
def handleUri;
int FOUND = 0;
xml.depthFirst().each
{
	if(it.name().toString().contains("entry") && FOUND==0 && it.children().size()>0)
	{
		for(s in it.children())
		{
			if(s.name().toString().contains("link") && s.@rel=="self")
			{
				handleUri = s.@href;;
				FOUND=1;
			}
		}
	}
};
context.testCase.testSteps["CheckUsefullLinks"].setPropertyValue("EndPoint",handleUri);]]></script></con:config></con:testStep><con:testStep type="httprequest" name="CheckUsefullLinks" id="f8eac0b0-a7de-4532-be11-379bfcc2b4d8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="156188eb-0e42-40dd-af9c-5d0da3ad0f87" name="CheckUsefullLinks" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list-pool/handle/1144</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e7854597-1a54-4d33-a260-8b1a703f8d49" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int CheckCollectionForTitle(response)
{
	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","The Handle should contain collection and about link.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","The Handle contains collection and about link.");
	def result = "";
	int COLLECTIONFOUND = 0;
	int ABOUTFOUND = 0;
	def xml = new XmlParser().parseText(response);
	xml.breadthFirst().each
	{
		if(it.@rel=="collection" &amp;&amp; it.@href.toString().contains("list-pool"))
		{
			COLLECTIONFOUND=1;
		}
		if(it.@rel=="about" &amp;&amp; it.@href.toString().contains("content"))
		{
			ABOUTFOUND=1;
		}
	};
	if(COLLECTIONFOUND==0)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","The Handle does not contain source List location.");
		result = project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].getPropertyValue("actualresult");
	}
	if(ABOUTFOUND==0)
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",result+" The Handle does not contain about link.");
	return COLLECTIONFOUND+ABOUTFOUND;
}
/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${CheckUsefullLinks#Response}');
	int res = CheckCollectionForTitle(response);
	if(res==2)
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	else
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a8946c12-18c9-4617-b269-c6af09e1eec3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ListPoolWebserviceDeficiences-VF-6495" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="ba04e06f-e05a-4bfd-a2b9-d3d31eefd586"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="632b5070-56ca-4cfc-8e76-1e7e31d3b3b0"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDescriptionURI" id="9517e28f-d86a-4983-b34f-afece811fd63"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="681d0886-3dd9-4224-b56d-d9953eb8cf58"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="35e63277-d07f-434a-a47d-835983756e9d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="203dde33-6083-48ad-828c-73f6488cef02"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="81aa6a5f-4bb8-41ff-8c24-d96a5139bafa"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetAllListLocation" id="717e6783-29b4-48a4-812d-63254cda6ee1"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def listsUri;
int FOUND = 0;
xml.breadthFirst().each
{
	if(it.@rel=="lists" &amp;&amp; FOUND==0)
	{
		listsUri = it.@href;
		FOUND = 1;
	}
};

if(listsUri.toString().contains("webservice"))
{
	int index = listsUri.indexOf("webservice")+"webservice".length();
	listsUri = context.expand('${GetWebservices#EndPoint}') + listsUri.substring(index);
}
else
{
	listsUri = context.expand('${GetWebservices#EndPoint}') +"/" +listsUri;
}
context.testCase.testSteps["GetAllLists"].setPropertyValue("Endpoint",listsUri);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetAllLists" id="77c3d549-2843-408d-8c6f-13c96741159c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="60edff1a-d0c5-4abc-974b-1ecd22bde13d" name="GetAllLists" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/publication/qa/escenic/lists/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="60c6ddaa-f2f7-4d5d-9309-21aefc1fd684" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SelectAListPool" id="62b523f0-3e1a-45e3-af4d-3b42b9148eb8"><con:settings/><con:config><script>def response = context.expand('${GetAllLists#Response}');
def xml = new XmlParser().parseText(response);
def listsUri;
int FOUND = 0;
xml.breadthFirst().each
{
	if(it.@rel=="http://www.vizrt.com/types/relation/list-pool" &amp;&amp; FOUND==0)
	{
		listsUri = it.@href;
		FOUND = 1;
	}
};
context.testCase.testSteps["AddStoryToList"].setPropertyValue("EndPoint",listsUri);
context.testCase.testSteps["GetListPool"].setPropertyValue("EndPoint",listsUri);

def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def content;
if(httpResponseHeader!=null)
{
	content = httpResponseHeader["Location"][0];
}
context.testCase.testSteps["AddStoryToList"].setPropertyValue("Request",content);</script></con:config></con:testStep><con:testStep type="httprequest" name="AddStoryToList" id="1901a18a-59fd-4262-a671-7a70ce45386f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="5c93c8d7-d1a8-4091-9acd-a98e47b60f82" name="AddStoryToList" postQueryString="false" mediaType="text/uri-list" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list-pool/202</con:endpoint><con:request>http://qa-bianca:8080/webservice/escenic/content/1592</con:request><con:assertion type="GroovyScriptAssertion" id="96a601ae-2bc4-427c-bcb2-1e9b973d1b2f" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetListPool" id="0d89318e-7d03-42e3-9abe-901f0b0fb14b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="156188eb-0e42-40dd-af9c-5d0da3ad0f87" name="GetListPool" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list-pool/202</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e7854597-1a54-4d33-a260-8b1a703f8d49" name="Script Assertion"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetHandleID" id="2531e15d-6ebe-4a05-a605-9a9abaeea50c"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetListPool#Response}');
def xml = new XmlParser().parseText(response);
def handleUri;
int FOUND = 0;
xml.depthFirst().each
{
	if(it.name().toString().contains("entry") && FOUND==0 && it.children().size()>0)
	{
		for(s in it.children())
		{
			if(s.name().toString().contains("link") && s.@rel=="self")
			{
				handleUri = s.@href;;
				FOUND=1;
			}
		}
	}
};
context.testCase.testSteps["CheckHandleOfListPool"].setPropertyValue("EndPoint",handleUri);]]></script></con:config></con:testStep><con:testStep type="httprequest" name="CheckHandleOfListPool" id="61489d83-358d-4bed-8def-9a0789ac7f2f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="156188eb-0e42-40dd-af9c-5d0da3ad0f87" name="CheckHandleOfListPool" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/list-pool/handle/1145</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e7854597-1a54-4d33-a260-8b1a703f8d49" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int CheckCollectionForTitle(response)
{
	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","The Handle should contain a title.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","The Handle should contain a title.");

	int FOUND = 0;
	def xml = new XmlParser().parseText(response);
	xml.breadthFirst().each
	{
		if(it.@rel=="collection")
		{
			if(it.@title!=null)
			FOUND=1;
		}
	};
	if(FOUND==0)
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","The Handle does not contain title.");
	return FOUND;
}
/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${CheckHandleOfListPool#Response}');
	int res = CheckCollectionForTitle(response);
	if(res==1)
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	else
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}

</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="66021009-f78b-42ed-adff-73afd6a1d316" name="SectionTest"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="1f14ee07-5da5-4362-9225-618221215a88" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SectionCreateGetDelete_backup" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="3385d0b8-a804-4b00-b574-aa3c2863daea"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String homeUrl = xml.'homeUrl_for_Eng_6';
String rootUrl = xml.'rootUrl_for_Eng_6';
String user = xml.'user';
String password = xml.'password';
String url = server+rootUrl;//homeUrl;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetPublication"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetPublication" id="f14d70c5-e22d-475f-9f47-d8e1fd735731"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="f39e9731-819f-4060-815a-8ba5af999e05" name="GetPublication" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="40930089-7fdb-41a5-a56d-d860aa6ffc6e" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="be06fc30-162a-4bd8-a994-cd89d57b0d38"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetPublication#Response}');
def xml = new XmlParser().parseText(response);

def root = xml.'link';
String SectionUri,SectionPage;
for(int i=0;i&lt;root.size();i++)
{
	if(root[i].@'rel'=="down")
	{
		SectionUri = root[i].@'href';
	}
	if(root[i].@'rel'=='http://www.vizrt.com/types/relation/pages')
	{
		s=root[i].@'href';
		if(s.contains("/section/"))
		SectionPage=root[i].@'href';
	}
}	
log.info SectionUri;
log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="bafcdda8-9df9-4586-88a2-06dad6a686c4"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI" id="597d7053-d750-4b5c-9098-2adc4655f24c"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xml2 = new XmlParser().parseText(response);
def Section_URI;
def SubSection_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
			it.@'rel'=="down" && FOUND==0 &&
			it.@'href'.toString().contains("subsections"))
		{
			SubSection_URI = it.@'href';FOUND=1;
		}
	};

FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry") && FOUND==0)
		{
			Section_URI = it.'id'[0].value()[0].toString();//'link'.@'href'[0];
			FOUND=1;
			log.info "asdf";
		}
	};
log.info Section_URI+" ; "+SubSection_URI;

context.testCase.testSteps["GetASection"].setPropertyValue("EndPoint",Section_URI);
context.testCase.testSteps["CreateSection"].setPropertyValue("EndPoint",SubSection_URI);]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetASection" id="ec738462-4e79-4f98-9bdb-25f2acc3b660"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d80d4e56-6fe5-4773-aba5-f46851a42680" name="GetASection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/217</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="09894697-2077-4422-8f55-52e388ed708f" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetSectionModelPattern" id="b3804ce9-4596-417a-9f92-db280fb689e9"><con:settings/><con:config><script>def response = context.expand('${GetASection#Response}');
def xml = new XmlParser().parseText(response);
def section_model;
int FOUND=0;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

xml.breadthFirst().each{
		if(it.@'type'=="application/vnd.vizrt.payload+xml" &amp;&amp; FOUND==0)
		{
			section_model = it.'vdf:payload'.@'model'[0];
			FOUND=1;
		}
	};


String sectionname = "SectionTest"+GetTime();
def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
def section_xml2 = new XmlParser().parseText(request);
/*section_xml.breadthFirst().each
			{
				if(it.'field'.@'name'[0].toString().contains("com.escenic.sectionName"))
				{
					it.'field'.'value'=sectionname;
					log.info sectionname;
				}
			};
*/
section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
section_xml.breadthFirst().each{
			if(it.'vdf:payload'!=null)
			it.'vdf:payload'.@'model'=section_model;
	};

section_xml.'link'.@'href'= context.testCase.testSteps["GetASection"].getPropertyValue("EndPoint");

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(section_xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);
//log.info section_model;
</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSection" id="da622e60-f0af-4247-aea8-2a165bde4781"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/217/subsections</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>
          SectionTest14:3:57:24
        </value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.hidden"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.inheritAccess"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.virtualSource"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.agreementRequired"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.agreementInfo"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.agreementType"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionLayout"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.articleLayout"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionParameters"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/217" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedSectionURI" id="e0ee79d3-11dd-4a9c-99fe-db0bcb096d46"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
section_uri = httpResponseHeader["Location"][0];
log.info section_uri;
delete_section_uri = section_uri+"/delete";
context.testCase.testSteps["GetCreatedSection"].setPropertyValue("EndPoint",section_uri);
context.testCase.testSteps["GetSection_DeleteModel"].setPropertyValue("EndPoint",delete_section_uri);
context.testCase.testSteps["DeleteSection"].setPropertyValue("EndPoint",delete_section_uri);
context.testCase.testSteps["DeleteSectionAgain"].setPropertyValue("EndPoint",delete_section_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetCreatedSection" id="569c5c40-1d5b-4dcf-bd1c-5dfd954ea0e2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="GetCreatedSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/256</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetSection_DeleteModel" id="8996e94b-e7fb-46b2-97f9-cc100f76a4b1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="df988c60-b16d-41a0-b248-10386690fdd3" name="GetSection_DeleteModel" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/256/delete</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="1d23709e-bf5e-407d-9977-6d87f966bba5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetDeleteURI" id="4167dd23-e5e1-4220-aa46-07b81300d81d"><con:settings/><con:config><script>def response = context.expand('${GetSection_DeleteModel#Response}');
def xml = new XmlParser().parseText(response);
def model;

xml.breadthFirst().each{
		if(it.@'model'!=null)
		{
			model = it.@'model';
		}
	};

def request = context.expand('${DeleteSection#Request}');
def request_xml = new XmlParser().parseText(request);
request_xml.'content'.'vdf:payload'.each{it.@'model'=model};
/*request_xml.'content'.'vdf:payload'.'vdf:field'.each{
	if(it.@'name'.toString().contains("com.escenic.section.delete.confirmation"))
	log.info it.'vdf:value'[0].value="true";
};*/

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(request_xml);
def newXml = stringWriter.toString();

int idx = newXml.indexOf("&lt;vdf:value>")+"&lt;vdf:value>".length();
int idx2 = newXml.indexOf("&lt;/vdf:value>");

def result = newXml.substring(0,idx)+"true"+newXml.substring(idx2);
context.testCase.testSteps["DeleteSection"].setPropertyValue("Request",result);
context.testCase.testSteps["DeleteSectionAgain"].setPropertyValue("Request",result);

//def regx = ~"[\\s]*true";
//newXml.replaceAll(regx,"false");</script></con:config></con:testStep><con:testStep type="httprequest" name="DeleteSection" id="741fecb1-0e6f-475d-b77c-4ac0d665bb2b"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="34b1dd07-e7c7-4a3c-9a0c-eb47c6767e8a" name="DeleteSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;-247897060&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/256/delete</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section.delete.256">
      <vdf:field name="com.escenic.section.delete.title"/>
      <vdf:field name="com.escenic.section.delete.replacement"/>
      <vdf:field name="com.escenic.section.delete.confirmation">
        <vdf:value>true</vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="79407a6a-2be3-4579-b2a8-18c5146ba9da" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteSectionAgain" id="540cb363-2697-4921-8ff7-d979245decce"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="34b1dd07-e7c7-4a3c-9a0c-eb47c6767e8a" name="DeleteSectionAgain" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;-247897060&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/256/delete</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section.delete.256">
      <vdf:field name="com.escenic.section.delete.title"/>
      <vdf:field name="com.escenic.section.delete.replacement"/>
      <vdf:field name="com.escenic.section.delete.confirmation">
        <vdf:value>true</vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="79407a6a-2be3-4579-b2a8-18c5146ba9da" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="93b99726-86a0-4b29-9042-e021cb7fe265" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SectionRename_backup" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="529d90bd-b892-48e3-bdb3-7e80233e9a23"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String homeUrl = xml.'homeUrl_for_Eng_6';
String rootUrl = xml.'rootUrl_for_Eng_6';
String user = xml.'user';
String password = xml.'password';
String url = server+rootUrl;//homeUrl;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetPublication"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetPublication" id="55d1d663-2434-47b9-b24e-d9801c646a6a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="f39e9731-819f-4060-815a-8ba5af999e05" name="GetPublication" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="40930089-7fdb-41a5-a56d-d860aa6ffc6e" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="019929fc-53d0-4ae8-84ba-77afc0dfd772"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetPublication#Response}');
def xml = new XmlParser().parseText(response);

def root = xml.'link';
String SectionUri,SectionPage;
for(int i=0;i&lt;root.size();i++)
{
	if(root[i].@'rel'=="down")
	{
		SectionUri = root[i].@'href';
	}
	if(root[i].@'rel'=='http://www.vizrt.com/types/relation/pages')
	{
		s=root[i].@'href';
		if(s.contains("/section/"))
		SectionPage=root[i].@'href';
	}
}	
log.info SectionUri;
log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="fe2cda67-0f5b-4fe4-9e47-64b1bbd6786c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI" id="69f54223-6b2c-4232-8eda-5bc5d984c74a"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xml2 = new XmlParser().parseText(response);
def Section_URI;
def SubSection_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
			it.@'rel'=="down" && FOUND==0 &&
			it.@'href'.toString().contains("subsections"))
		{
			SubSection_URI = it.@'href';FOUND=1;
		}
	};

FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry") && FOUND==0)
		{
			Section_URI = it.'id'[0].value()[0].toString();//'link'.@'href'[0];
			FOUND=1;
			log.info "asdf";
		}
	};
log.info Section_URI+" ; "+SubSection_URI;

context.testCase.testSteps["GetASection"].setPropertyValue("EndPoint",Section_URI);
context.testCase.testSteps["CreateSection"].setPropertyValue("EndPoint",SubSection_URI);]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetASection" id="4aa9eae7-9a53-466e-905b-0dc877d1d2ec"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d80d4e56-6fe5-4773-aba5-f46851a42680" name="GetASection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/217</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="09894697-2077-4422-8f55-52e388ed708f" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetSectionModelPattern" id="d266818b-3c27-42ad-9bcf-c724beaab9eb"><con:settings/><con:config><script>def response = context.expand('${GetASection#Response}');
def xml = new XmlParser().parseText(response);
def section_model;
int FOUND=0;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

xml.breadthFirst().each{
		if(it.@'type'=="application/vnd.vizrt.payload+xml" &amp;&amp; FOUND==0)
		{
			section_model = it.'vdf:payload'.@'model'[0];
			FOUND=1;
		}
	};


String sectionname = "SectionTest"+GetTime();
def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
def section_xml2 = new XmlParser().parseText(request);
/*section_xml.breadthFirst().each
			{
				if(it.'field'.@'name'[0].toString().contains("com.escenic.sectionName"))
				{
					it.'field'.'value'=sectionname;
					log.info sectionname;
				}
			};
*/
section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
section_xml.breadthFirst().each{
			if(it.'vdf:payload'!=null)
			it.'vdf:payload'.@'model'=section_model;
	};

section_xml.'link'.@'href'= context.testCase.testSteps["GetASection"].getPropertyValue("EndPoint");

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(section_xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);
//log.info section_model;
</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSection" id="73b2e491-bca5-4380-9d29-be2f3dbeed55"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/217/subsections</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>
          SectionTest11:24:27:832
        </value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.hidden"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.inheritAccess"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.virtualSource"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.agreementRequired"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.agreementInfo"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.agreementType"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionLayout"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.articleLayout"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionParameters"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/217" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedSectionURI" id="3af65343-c66d-4d03-9df0-509b8a7901a4"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
section_uri = httpResponseHeader["Location"][0];
log.info section_uri;
delete_section_uri = section_uri+"/delete";
context.testCase.testSteps["GetCreatedSection"].setPropertyValue("EndPoint",section_uri);
//context.testCase.testSteps["GetSection_DeleteModel"].setPropertyValue("EndPoint",delete_section_uri);
//context.testCase.testSteps["DeleteSection"].setPropertyValue("EndPoint",delete_section_uri);
//context.testCase.testSteps["DeleteSectionAgain"].setPropertyValue("EndPoint",delete_section_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetCreatedSection" id="4f808e4b-36bf-453d-bcd9-0214bd94e25e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="GetCreatedSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/254</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetEditURL_Header" id="d774a21d-241d-4519-a02a-274da10ca883"><con:settings/><con:config><script><![CDATA[def httpResponseHeader = context.testCase.testSteps["GetCreatedSection"].testRequest.response.responseHeaders;

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def headers = context.utility.ETAG_At_Header(httpResponseHeader);
context.testCase.testSteps["RenameSection"].testRequest.setRequestHeaders(headers);
context.testCase.testSteps["RenameSection_WithSameHeader"].testRequest.setRequestHeaders(headers);

def response = context.expand('${GetCreatedSection#Response}');
def xml = new XmlParser().parseText(response);
def Edit_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
		it.@'rel'=="edit" &&
		it.@'href'.toString().contains("section")
		&& FOUND==0
		) {FOUND=1;Edit_URI = it.@'href';}};

context.testCase.testSteps["RenameSection"].setPropertyValue("EndPoint",Edit_URI);
context.testCase.testSteps["RenameSection_WithSameHeader"].setPropertyValue("EndPoint",Edit_URI);
context.testCase.testSteps["CheckSectionNameUpdate"].setPropertyValue("EndPoint",Edit_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="EditSectionName" id="f77d8a9e-07f1-45f8-a22e-627d7abba8e7"><con:settings/><con:config><script>def response = context.expand('${GetCreatedSection#Response}');

response = response.replaceAll("SectionTest","EDIT:SectionTest");
context.testCase.testSteps["RenameSection"].setPropertyValue("Request",response);
context.testCase.testSteps["RenameSection_WithSameHeader"].setPropertyValue("Request",response);</script></con:config></con:testStep><con:testStep type="httprequest" name="RenameSection" id="39455d6d-d7fa-4c18-877a-1a8df4255b7d"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4518a878-d78c-4299-bd91-4cd2562a712a" name="RenameSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;96bcabd6&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/254</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-epsilon:8080/webservice/escenic/section/254</id>\r
   <link rel="self" href="http://qa-epsilon:8080/webservice/escenic/section/254" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-epsilon:8080/webservice/escenic/section/254" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-epsilon:8080/webservice/escenic/lock/section/254/96bcabd6" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>254</dcterms:identifier>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" title="qa"/>\r
   <link rel="http://www.vizrt.com/types/relation/operation" href="http://qa-epsilon:8080/webservice/escenic/section/254/content/move/" type="application/atom+xml; type=entry" title="Move Content"/>\r
   <link rel="http://www.vizrt.com/types/relation/operation" href="http://qa-epsilon:8080/webservice/escenic/section/254/move" type="application/atom+xml; type=entry" title="Move"/>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="com.escenic.sectionName">\r
            <vdf:value>EDIT:SectionTest11:24:27:832</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.uniqueName">\r
            <vdf:value>sectiontest11:24:27:832</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.directoryName">\r
            <vdf:value>___________EDIT:SectionTest11_24_27_832_________</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.sectionURI"/>\r
         <vdf:field name="com.escenic.inheritAccess">\r
            <vdf:value>false</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.virtualSource">\r
            <vdf:value>false</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.hidden">\r
            <vdf:value>false</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.agreementRequired">\r
            <vdf:value>false</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.agreementInfo"/>\r
         <vdf:field name="com.escenic.agreementType"/>\r
         <vdf:field name="com.escenic.sectionLayout">\r
            <vdf:value>defaultsection</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.articleLayout">\r
            <vdf:value>defaultarticle</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.sectionParameters">\r
            <vdf:value/>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <title type="text">EDIT:SectionTest11:24:27:832</title>\r
   <summary type="text">Template Set / AAA / 
          EDIT:SectionTest11:24:27:832</summary>\r
   <app:edited>2017-08-22T05:24:28.177Z</app:edited>\r
   <link href="http://epsilon.qa.local/AAA/___________EDIT:SectionTest11_24_27_832_________/" rel="alternate"/>\r
   <updated>2017-08-22T05:24:28.177Z</updated>\r
   <dcterms:created>2017-08-22T05:24:28.177Z</dcterms:created>\r
   <category term="directory" scheme="http://www.vizrt.com/types"/>\r
   <app:control xmlns:vaext="http://www.vizrt.com/atom-ext">\r
      <app:draft>yes</app:draft>\r
      <vaext:state name="draft" href="http://qa-epsilon:8080/webservice/escenic/section/state/draft/sectionadmin"/>\r
   </app:control>\r
   <metadata:reference source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>\r
   <link rel="down" href="http://qa-epsilon:8080/webservice/escenic/section/254/subsections" type="application/atom+xml" thr:count="0" xmlns:thr="http://purl.org/syndication/thread/1.0"/>\r
   <link rel="http://www.vizrt.com/types/relation/inboxes" href="http://qa-epsilon:8080/webservice/escenic/section/254/inboxes" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/lists" href="http://qa-epsilon:8080/webservice/escenic/section/254/lists" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/pages" href="http://qa-epsilon:8080/webservice/escenic/section/254/pages" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/content-items" href="http://qa-epsilon:8080/webservice/escenic/section/254/content-items" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/changelog" href="http://qa-epsilon:8080/webservice/escenic/changelog/section/254" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/inboxes" href="http://qa-epsilon:8080/webservice/escenic/inbox/625" type="application/atom+xml; type=entry" title=""/>\r
   <link rel="http://www.vizrt.com/types/relation/pages" href="http://qa-epsilon:8080/webservice/escenic/section-page/624" type="application/atom+xml; type=entry" title="           EDIT:SectionTest11:24:27:832         "/>\r
   <link rel="http://www.vizrt.com/types/relation/active-page" href="http://qa-epsilon:8080/webservice/escenic/section-page/624" type="application/atom+xml; type=entry" title="           EDIT:SectionTest11:24:27:832         "/>\r
   <link rel="http://www.vizrt.com/types/relation/parent" href="http://qa-epsilon:8080/webservice/escenic/section/217" type="application/atom+xml; type=entry" title="AAA"/>\r
   <metadata:home-section>true</metadata:home-section>\r
   <metadata:draft-page>false</metadata:draft-page>\r
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="9642e9b9-7a61-4c75-9512-38a723d989c1" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RenameSection_WithSameHeader" id="13e3fb31-7614-4581-9d23-6f33c469473d"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4518a878-d78c-4299-bd91-4cd2562a712a" name="RenameSection_WithSameHeader" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;96bcabd6&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/254</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-epsilon:8080/webservice/escenic/section/254</id>\r
   <link rel="self" href="http://qa-epsilon:8080/webservice/escenic/section/254" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-epsilon:8080/webservice/escenic/section/254" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-epsilon:8080/webservice/escenic/lock/section/254/96bcabd6" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>254</dcterms:identifier>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" title="qa"/>\r
   <link rel="http://www.vizrt.com/types/relation/operation" href="http://qa-epsilon:8080/webservice/escenic/section/254/content/move/" type="application/atom+xml; type=entry" title="Move Content"/>\r
   <link rel="http://www.vizrt.com/types/relation/operation" href="http://qa-epsilon:8080/webservice/escenic/section/254/move" type="application/atom+xml; type=entry" title="Move"/>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="com.escenic.sectionName">\r
            <vdf:value>EDIT:SectionTest11:24:27:832</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.uniqueName">\r
            <vdf:value>sectiontest11:24:27:832</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.directoryName">\r
            <vdf:value>___________EDIT:SectionTest11_24_27_832_________</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.sectionURI"/>\r
         <vdf:field name="com.escenic.inheritAccess">\r
            <vdf:value>false</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.virtualSource">\r
            <vdf:value>false</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.hidden">\r
            <vdf:value>false</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.agreementRequired">\r
            <vdf:value>false</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.agreementInfo"/>\r
         <vdf:field name="com.escenic.agreementType"/>\r
         <vdf:field name="com.escenic.sectionLayout">\r
            <vdf:value>defaultsection</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.articleLayout">\r
            <vdf:value>defaultarticle</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.sectionParameters">\r
            <vdf:value/>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <title type="text">EDIT:SectionTest11:24:27:832</title>\r
   <summary type="text">Template Set / AAA / 
          EDIT:SectionTest11:24:27:832</summary>\r
   <app:edited>2017-08-22T05:24:28.177Z</app:edited>\r
   <link href="http://epsilon.qa.local/AAA/___________EDIT:SectionTest11_24_27_832_________/" rel="alternate"/>\r
   <updated>2017-08-22T05:24:28.177Z</updated>\r
   <dcterms:created>2017-08-22T05:24:28.177Z</dcterms:created>\r
   <category term="directory" scheme="http://www.vizrt.com/types"/>\r
   <app:control xmlns:vaext="http://www.vizrt.com/atom-ext">\r
      <app:draft>yes</app:draft>\r
      <vaext:state name="draft" href="http://qa-epsilon:8080/webservice/escenic/section/state/draft/sectionadmin"/>\r
   </app:control>\r
   <metadata:reference source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>\r
   <link rel="down" href="http://qa-epsilon:8080/webservice/escenic/section/254/subsections" type="application/atom+xml" thr:count="0" xmlns:thr="http://purl.org/syndication/thread/1.0"/>\r
   <link rel="http://www.vizrt.com/types/relation/inboxes" href="http://qa-epsilon:8080/webservice/escenic/section/254/inboxes" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/lists" href="http://qa-epsilon:8080/webservice/escenic/section/254/lists" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/pages" href="http://qa-epsilon:8080/webservice/escenic/section/254/pages" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/content-items" href="http://qa-epsilon:8080/webservice/escenic/section/254/content-items" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/changelog" href="http://qa-epsilon:8080/webservice/escenic/changelog/section/254" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/inboxes" href="http://qa-epsilon:8080/webservice/escenic/inbox/625" type="application/atom+xml; type=entry" title=""/>\r
   <link rel="http://www.vizrt.com/types/relation/pages" href="http://qa-epsilon:8080/webservice/escenic/section-page/624" type="application/atom+xml; type=entry" title="           EDIT:SectionTest11:24:27:832         "/>\r
   <link rel="http://www.vizrt.com/types/relation/active-page" href="http://qa-epsilon:8080/webservice/escenic/section-page/624" type="application/atom+xml; type=entry" title="           EDIT:SectionTest11:24:27:832         "/>\r
   <link rel="http://www.vizrt.com/types/relation/parent" href="http://qa-epsilon:8080/webservice/escenic/section/217" type="application/atom+xml; type=entry" title="AAA"/>\r
   <metadata:home-section>true</metadata:home-section>\r
   <metadata:draft-page>false</metadata:draft-page>\r
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="9642e9b9-7a61-4c75-9512-38a723d989c1" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","412");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="412")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckSectionNameUpdate" id="1bb48ddd-1959-4567-bfee-2676804fd8ab"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a06b00d2-f0f5-43ec-b49c-a88259c67912" name="CheckSectionNameUpdate" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/254</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc3e77c8-2389-46b4-85c6-0f43c339bd30" name="Script Assertion"><con:configuration><scriptText>def Title;
def title_value;
def title;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);


int isEqualString(String a,String b)
{
	if(a.size()!=b.size())
	return 0;
	for(int i=0;i&lt;a.size();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}

int CheckListNameUpdate()
{
	def request = context.expand('${RenameSection#Request}');
	def xml = new XmlParser().parseText(request);
	
	def response = context.expand('${CheckSectionNameUpdate#Response}');
	def xml2 = new XmlParser().parseText(response);
	
	
	int FOUND=0;
	
	xml.breadthFirst().
	each {
			if(it.@'name'.toString().contains("com.escenic.sectionName")&amp;&amp; FOUND==0)
			{
				FOUND=1;Title = it.'vdf:value'[0].value()[0];//value()[0].toString();
			}};
	
	xml2.breadthFirst().
	each {
			if(it.@'name'.toString().contains("com.escenic.sectionName"))
			title=it.'vdf:value'[0].value()[0];//value()[0].toString();
		};
	if(isEqualString(Title,title))
	{
		return 1;
	}
	return 0;
}



def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

if(httpStatusCode=="200")
{
	int UpdateResult=CheckListNameUpdate();
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
	
	if(UpdateResult==1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Sectionname Updated");
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Sectionname not Updated.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="994e56e3-1765-4cf2-9b61-901dd55140b2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SectionCreateGetDelete" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="4ce02992-7625-4417-bcac-b97545149fcc"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="bdfb6ffc-061e-41c3-93c3-575f659b6021"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="5a37d5d8-4fa5-45ed-8b85-31bb5514885f"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="48854cd7-7032-404d-8dc4-39909a16994b"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String section_create_uri;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'content-descriptor'.toString().contains("com.escenic.section"))
		{
			section_create_uri = it.@'href';
		}
	};

if(section_create_uri.contains("webservice"))
{
	int index = section_create_uri.indexOf("webservice/")+"webservice/".length();
	String tmp = section_create_uri.substring(index);
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+tmp;
}
else
{
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+"/"+section_create_uri;
}

log.info section_create_uri;
context.testCase.testSteps["CreateSection"].setPropertyValue("EndPoint",section_create_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="f480d002-a062-4a96-a91e-4bab7b76837d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="7df56f38-0f0e-4c08-96f3-500fc84d7ead"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="5be34637-305f-488e-a318-b732fa56e7df"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="128e6231-bef2-42cc-881f-2d8791c2c1ea"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSection" id="9b174ab1-26df-49cb-8784-5764224735f3"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI" id="f5d0c307-b833-4623-a0b3-19f917e3f791"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xml2 = new XmlParser().parseText(response);
def ParentSection_URI;
def SubSection_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
			it.@'rel'=="down" && FOUND==0 &&
			it.@'href'.toString().contains("subsections"))
		{
			SubSection_URI = it.@'href';FOUND=1;
		}
	};

FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry") && FOUND==0)
		{
			ParentSection_URI = it.'id'[0].value()[0].toString();
			FOUND=1;
		}
	};
log.info ParentSection_URI+" ; "+SubSection_URI;

def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);

]]></script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSection" id="a173f9f0-49e7-46e4-aee1-00afc14fea61"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SectionTest12:35:1:811</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/222" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedSectionURI" id="d85fa420-11cd-41b7-8638-9c8d769de73a"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
section_uri = httpResponseHeader["Location"][0];
log.info section_uri;
delete_section_uri = section_uri+"/delete";
context.testCase.testSteps["GetCreatedSection"].setPropertyValue("EndPoint",section_uri);
context.testCase.testSteps["GetSection_DeleteModel"].setPropertyValue("EndPoint",delete_section_uri);
context.testCase.testSteps["DeleteSection"].setPropertyValue("EndPoint",delete_section_uri);
context.testCase.testSteps["DeleteSectionAgain"].setPropertyValue("EndPoint",delete_section_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetCreatedSection" id="e8e9bd06-891d-42b6-9500-d952368c5e0b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="GetCreatedSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/456</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetSection_DeleteModel" id="bfa92683-de57-45c2-aea0-69668c144673"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="df988c60-b16d-41a0-b248-10386690fdd3" name="GetSection_DeleteModel" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/456/delete</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="1d23709e-bf5e-407d-9977-6d87f966bba5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetDeleteURI" id="fd3c36cf-4ec8-4c6a-81e4-c36d8a0f6eb6"><con:settings/><con:config><script>def response = context.expand('${GetSection_DeleteModel#Response}');
def xml = new XmlParser().parseText(response);
def model;

xml.breadthFirst().each{
		if(it.@'model'!=null)
		{
			model = it.@'model';
		}
	};

def request = context.expand('${DeleteSection#Request}');
def request_xml = new XmlParser().parseText(request);
request_xml.'content'.'vdf:payload'.each
{
	it.@'model'=model;
};

request_xml.breadthFirst().each
{
	if(it.@name=="com.escenic.section.delete.confirmation")
	it.'vdf:value'[0].value="true";
};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(request_xml);
def newXml = stringWriter.toString();

/*int idx = newXml.indexOf("&lt;vdf:value>")+"&lt;vdf:value>".length();
int idx2 = newXml.indexOf("&lt;/vdf:value>");

def result = newXml.substring(0,idx)+"true"+newXml.substring(idx2);*/

context.testCase.testSteps["DeleteSection"].setPropertyValue("Request",newXml);
context.testCase.testSteps["DeleteSectionAgain"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="DeleteSection" id="2b79396e-926c-4fa8-a53f-38d81409ffce"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="34b1dd07-e7c7-4a3c-9a0c-eb47c6767e8a" name="DeleteSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;-247897060&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/456/delete</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section.delete.456">
      <vdf:field name="com.escenic.section.delete.title"/>
      <vdf:field name="com.escenic.section.delete.replacement"/>
      <vdf:field name="com.escenic.section.delete.confirmation">
        <vdf:value>true</vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="79407a6a-2be3-4579-b2a8-18c5146ba9da" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteSectionAgain" id="bfadbebe-334d-4649-92cb-ee4f6184613d"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="34b1dd07-e7c7-4a3c-9a0c-eb47c6767e8a" name="DeleteSectionAgain" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;-247897060&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/456/delete</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section.delete.456">
      <vdf:field name="com.escenic.section.delete.title"/>
      <vdf:field name="com.escenic.section.delete.replacement"/>
      <vdf:field name="com.escenic.section.delete.confirmation">
        <vdf:value>true</vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="79407a6a-2be3-4579-b2a8-18c5146ba9da" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b19e35dc-d81a-408d-b673-dcfafe5cc98e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SectionRename" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="44058dea-8868-416e-837b-4dca214ee3c4"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="60eeb465-6f32-4244-9738-9d725836800f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="4e07a3da-09aa-4ba4-aa13-1aca6a91c6f4"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="groovy" name="SettSectionCreateURI" id="4e982734-6ae8-48d2-8310-4e56eee11b36"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String section_create_uri;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'content-descriptor'.toString().contains("com.escenic.section"))
		{
			section_create_uri = it.@'href';
		}
	};

if(section_create_uri.contains("webservice"))
{
	int index = section_create_uri.indexOf("webservice/")+"webservice/".length();
	String tmp = section_create_uri.substring(index);
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+tmp;
}
else
{
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+"/"+section_create_uri;
}

log.info section_create_uri;
context.testCase.testSteps["CreateSection"].setPropertyValue("EndPoint",section_create_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="5b700976-848f-44c5-82cf-4e95f5d023e8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="ccd7d503-b6e1-445c-9452-2b911c2da7b0"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="8c477122-7ae9-48df-8594-615f24aac01b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="f420eb21-adcf-4f5b-97d5-5efbe3bbb285"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSection" id="291444c7-cf3c-49cc-9918-d9a0154d4af4"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI" id="3cd3e6e9-fd70-4157-95de-201fbe4d5183"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xml2 = new XmlParser().parseText(response);
def ParentSection_URI;
def SubSection_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
			it.@'rel'=="down" && FOUND==0 &&
			it.@'href'.toString().contains("subsections"))
		{
			SubSection_URI = it.@'href';FOUND=1;
		}
	};

FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry") && FOUND==0)
		{
			ParentSection_URI = it.'id'[0].value()[0].toString();
			FOUND=1;
		}
	};
log.info ParentSection_URI+" ; "+SubSection_URI;

def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);

]]></script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSection" id="409dceff-2944-41f8-b526-7b5542a18b8d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SectionTest12:35:11:844</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/222" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedSectionURI" id="5f992977-88c6-41a5-8d3e-9f2b3017767d"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
section_uri = httpResponseHeader["Location"][0];
log.info section_uri;
delete_section_uri = section_uri+"/delete";
context.testCase.testSteps["GetCreatedSection"].setPropertyValue("EndPoint",section_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetCreatedSection" id="c98c2afa-cc92-43e0-aa25-d7a6b23a9352"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="GetCreatedSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/457</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetEditURL_Header" id="33e427ea-3e55-44ca-b3df-ee7760c17bd1"><con:settings/><con:config><script><![CDATA[def httpResponseHeader = context.testCase.testSteps["GetCreatedSection"].testRequest.response.responseHeaders;

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def headers = context.utility.ETAG_At_Header(httpResponseHeader);
context.testCase.testSteps["RenameSection"].testRequest.setRequestHeaders(headers);
context.testCase.testSteps["RenameSection_WithSameHeader"].testRequest.setRequestHeaders(headers);

def response = context.expand('${GetCreatedSection#Response}');
def xml = new XmlParser().parseText(response);
def Edit_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
		it.@'rel'=="edit" &&
		it.@'href'.toString().contains("section")
		&& FOUND==0
		) {FOUND=1;Edit_URI = it.@'href';}};

context.testCase.testSteps["RenameSection"].setPropertyValue("EndPoint",Edit_URI);
context.testCase.testSteps["RenameSection_WithSameHeader"].setPropertyValue("EndPoint",Edit_URI);
context.testCase.testSteps["CheckSectionNameUpdate"].setPropertyValue("EndPoint",Edit_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="EditSectionName" id="0362b139-a08f-4298-bea5-bfc170d7a6a2"><con:settings/><con:config><script>def response = context.expand('${GetCreatedSection#Response}');

response = response.replaceAll("SectionTest","EDIT:SectionTest");
context.testCase.testSteps["RenameSection"].setPropertyValue("Request",response);
context.testCase.testSteps["RenameSection_WithSameHeader"].setPropertyValue("Request",response);</script></con:config></con:testStep><con:testStep type="httprequest" name="RenameSection" id="77044d4e-790a-4279-bb0e-faf5ef00fa27"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4518a878-d78c-4299-bd91-4cd2562a712a" name="RenameSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;6aca118c&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/457</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-epsilon:8080/webservice/escenic/section/457</id>\r
   <link rel="self" href="http://qa-epsilon:8080/webservice/escenic/section/457" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-epsilon:8080/webservice/escenic/section/457" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-epsilon:8080/webservice/escenic/lock/section/457/6aca118c" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>457</dcterms:identifier>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" title="qa"/>\r
   <link rel="http://www.vizrt.com/types/relation/operation" href="http://qa-epsilon:8080/webservice/escenic/section/457/content/move/" type="application/atom+xml; type=entry" title="Move Content"/>\r
   <link rel="http://www.vizrt.com/types/relation/operation" href="http://qa-epsilon:8080/webservice/escenic/section/457/move" type="application/atom+xml; type=entry" title="Move"/>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="com.escenic.sectionName">\r
            <vdf:value>EDIT:SectionTest12:35:11:844</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.uniqueName">\r
            <vdf:value>sectiontest12:35:11:844</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.directoryName">\r
            <vdf:value>EDIT:SectionTest12_35_11_844</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.sectionURI"/>\r
         <vdf:field name="com.escenic.inheritAccess">\r
            <vdf:value>false</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.virtualSource">\r
            <vdf:value>false</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.hidden">\r
            <vdf:value>false</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.agreementRequired">\r
            <vdf:value>false</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.agreementInfo"/>\r
         <vdf:field name="com.escenic.agreementType"/>\r
         <vdf:field name="com.escenic.sectionLayout">\r
            <vdf:value>defaultsection</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.articleLayout">\r
            <vdf:value>defaultarticle</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.sectionParameters">\r
            <vdf:value/>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <title type="text">EDIT:SectionTest12:35:11:844</title>\r
   <summary type="text">Template Set / AAAA / EDIT:SectionTest12:35:11:844</summary>\r
   <app:edited>2018-02-27T06:36:07.649Z</app:edited>\r
   <link href="http://epsilon.qa.local/AAAA/EDIT:SectionTest12_35_11_844/" rel="alternate"/>\r
   <updated>2018-02-27T06:36:07.649Z</updated>\r
   <dcterms:created>2018-02-27T06:36:07.649Z</dcterms:created>\r
   <category term="directory" scheme="http://www.vizrt.com/types"/>\r
   <app:control xmlns:vaext="http://www.vizrt.com/atom-ext">\r
      <app:draft>yes</app:draft>\r
      <vaext:state name="draft" href="http://qa-epsilon:8080/webservice/escenic/section/state/draft/sectionadmin"/>\r
   </app:control>\r
   <metadata:reference source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>\r
   <link rel="down" href="http://qa-epsilon:8080/webservice/escenic/section/457/subsections" type="application/atom+xml" thr:count="0" xmlns:thr="http://purl.org/syndication/thread/1.0"/>\r
   <link rel="http://www.vizrt.com/types/relation/inboxes" href="http://qa-epsilon:8080/webservice/escenic/section/457/inboxes" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/lists" href="http://qa-epsilon:8080/webservice/escenic/section/457/lists" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/pages" href="http://qa-epsilon:8080/webservice/escenic/section/457/pages" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/content-items" href="http://qa-epsilon:8080/webservice/escenic/section/457/content-items" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/changelog" href="http://qa-epsilon:8080/webservice/escenic/changelog/section/457" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/inboxes" href="http://qa-epsilon:8080/webservice/escenic/inbox/1197" type="application/atom+xml; type=entry" title=""/>\r
   <link rel="http://www.vizrt.com/types/relation/pages" href="http://qa-epsilon:8080/webservice/escenic/section-page/1196" type="application/atom+xml; type=entry" title="EDIT:SectionTest12:35:11:844"/>\r
   <link rel="http://www.vizrt.com/types/relation/active-page" href="http://qa-epsilon:8080/webservice/escenic/section-page/1196" type="application/atom+xml; type=entry" title="EDIT:SectionTest12:35:11:844"/>\r
   <link rel="http://www.vizrt.com/types/relation/parent" href="http://qa-epsilon:8080/webservice/escenic/section/222" type="application/atom+xml; type=entry" title="AAAA"/>\r
   <metadata:home-section>true</metadata:home-section>\r
   <metadata:draft-page>false</metadata:draft-page>\r
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="9642e9b9-7a61-4c75-9512-38a723d989c1" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RenameSection_WithSameHeader" id="b677e4a4-4109-4413-acce-9272418170c3"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4518a878-d78c-4299-bd91-4cd2562a712a" name="RenameSection_WithSameHeader" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;6aca118c&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/457</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom" xmlns:app="http://www.w3.org/2007/app" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">\r
   <id>http://qa-epsilon:8080/webservice/escenic/section/457</id>\r
   <link rel="self" href="http://qa-epsilon:8080/webservice/escenic/section/457" type="application/atom+xml; type=entry"/>\r
   <link rel="edit" href="http://qa-epsilon:8080/webservice/escenic/section/457" type="application/atom+xml; type=entry"/>\r
   <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-epsilon:8080/webservice/escenic/lock/section/457/6aca118c" type="application/atom+xml; type=entry"/>\r
   <dcterms:identifier>457</dcterms:identifier>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>\r
   <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>\r
   <metadata:publication href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" title="qa"/>\r
   <link rel="http://www.vizrt.com/types/relation/operation" href="http://qa-epsilon:8080/webservice/escenic/section/457/content/move/" type="application/atom+xml; type=entry" title="Move Content"/>\r
   <link rel="http://www.vizrt.com/types/relation/operation" href="http://qa-epsilon:8080/webservice/escenic/section/457/move" type="application/atom+xml; type=entry" title="Move"/>\r
   <content type="application/vnd.vizrt.payload+xml">\r
      <vdf:payload model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section" xmlns:vdf="http://www.vizrt.com/types">\r
         <vdf:field name="com.escenic.sectionName">\r
            <vdf:value>EDIT:SectionTest12:35:11:844</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.uniqueName">\r
            <vdf:value>sectiontest12:35:11:844</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.directoryName">\r
            <vdf:value>EDIT:SectionTest12_35_11_844</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.sectionURI"/>\r
         <vdf:field name="com.escenic.inheritAccess">\r
            <vdf:value>false</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.virtualSource">\r
            <vdf:value>false</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.hidden">\r
            <vdf:value>false</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.agreementRequired">\r
            <vdf:value>false</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.agreementInfo"/>\r
         <vdf:field name="com.escenic.agreementType"/>\r
         <vdf:field name="com.escenic.sectionLayout">\r
            <vdf:value>defaultsection</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.articleLayout">\r
            <vdf:value>defaultarticle</vdf:value>\r
         </vdf:field>\r
         <vdf:field name="com.escenic.sectionParameters">\r
            <vdf:value/>\r
         </vdf:field>\r
      </vdf:payload>\r
   </content>\r
   <title type="text">EDIT:SectionTest12:35:11:844</title>\r
   <summary type="text">Template Set / AAAA / EDIT:SectionTest12:35:11:844</summary>\r
   <app:edited>2018-02-27T06:36:07.649Z</app:edited>\r
   <link href="http://epsilon.qa.local/AAAA/EDIT:SectionTest12_35_11_844/" rel="alternate"/>\r
   <updated>2018-02-27T06:36:07.649Z</updated>\r
   <dcterms:created>2018-02-27T06:36:07.649Z</dcterms:created>\r
   <category term="directory" scheme="http://www.vizrt.com/types"/>\r
   <app:control xmlns:vaext="http://www.vizrt.com/atom-ext">\r
      <app:draft>yes</app:draft>\r
      <vaext:state name="draft" href="http://qa-epsilon:8080/webservice/escenic/section/state/draft/sectionadmin"/>\r
   </app:control>\r
   <metadata:reference source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>\r
   <link rel="down" href="http://qa-epsilon:8080/webservice/escenic/section/457/subsections" type="application/atom+xml" thr:count="0" xmlns:thr="http://purl.org/syndication/thread/1.0"/>\r
   <link rel="http://www.vizrt.com/types/relation/inboxes" href="http://qa-epsilon:8080/webservice/escenic/section/457/inboxes" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/lists" href="http://qa-epsilon:8080/webservice/escenic/section/457/lists" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/pages" href="http://qa-epsilon:8080/webservice/escenic/section/457/pages" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/content-items" href="http://qa-epsilon:8080/webservice/escenic/section/457/content-items" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/changelog" href="http://qa-epsilon:8080/webservice/escenic/changelog/section/457" type="application/atom+xml"/>\r
   <link rel="http://www.vizrt.com/types/relation/inboxes" href="http://qa-epsilon:8080/webservice/escenic/inbox/1197" type="application/atom+xml; type=entry" title=""/>\r
   <link rel="http://www.vizrt.com/types/relation/pages" href="http://qa-epsilon:8080/webservice/escenic/section-page/1196" type="application/atom+xml; type=entry" title="EDIT:SectionTest12:35:11:844"/>\r
   <link rel="http://www.vizrt.com/types/relation/active-page" href="http://qa-epsilon:8080/webservice/escenic/section-page/1196" type="application/atom+xml; type=entry" title="EDIT:SectionTest12:35:11:844"/>\r
   <link rel="http://www.vizrt.com/types/relation/parent" href="http://qa-epsilon:8080/webservice/escenic/section/222" type="application/atom+xml; type=entry" title="AAAA"/>\r
   <metadata:home-section>true</metadata:home-section>\r
   <metadata:draft-page>false</metadata:draft-page>\r
</entry>]]></con:request><con:assertion type="GroovyScriptAssertion" id="9642e9b9-7a61-4c75-9512-38a723d989c1" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","412");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="412")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckSectionNameUpdate" id="fac762fa-d6f8-4018-93d0-f8e63bfe67c6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a06b00d2-f0f5-43ec-b49c-a88259c67912" name="CheckSectionNameUpdate" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/457</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc3e77c8-2389-46b4-85c6-0f43c339bd30" name="Script Assertion"><con:configuration><scriptText>def Title;
def title_value;
def title;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);


int isEqualString(String a,String b)
{
	if(a.size()!=b.size())
	return 0;
	for(int i=0;i&lt;a.size();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}

int CheckListNameUpdate()
{
	def request = context.expand('${RenameSection#Request}');
	def xml = new XmlParser().parseText(request);
	
	def response = context.expand('${CheckSectionNameUpdate#Response}');
	def xml2 = new XmlParser().parseText(response);
	
	
	int FOUND=0;
	
	xml.breadthFirst().
	each {
			if(it.@'name'.toString().contains("com.escenic.sectionName")&amp;&amp; FOUND==0)
			{
				FOUND=1;Title = it.'vdf:value'[0].value()[0];//value()[0].toString();
			}};
	
	xml2.breadthFirst().
	each {
			if(it.@'name'.toString().contains("com.escenic.sectionName"))
			title=it.'vdf:value'[0].value()[0];//value()[0].toString();
		};
	if(isEqualString(Title,title))
	{
		return 1;
	}
	return 0;
}



def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

if(httpStatusCode=="200")
{
	int UpdateResult=CheckListNameUpdate();
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
	
	if(UpdateResult==1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Sectionname Updated");
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Sectionname not Updated.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c28286b1-bddb-4414-be4d-73da5417f51e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SubSectionCreate" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="a73168a8-2ef0-4e6f-aa6b-d90774c1eed5"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="5959a490-571e-411c-b6ab-1ddfa435269d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="54aed511-875e-4a02-b736-1ef22f7445a2"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="f710b869-7abe-402b-8d92-33366916b3c4"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String section_create_uri;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'content-descriptor'.toString().contains("com.escenic.section"))
		{
			section_create_uri = it.@'href';
		}
	};

if(section_create_uri.contains("webservice"))
{
	int index = section_create_uri.indexOf("webservice/")+"webservice/".length();
	String tmp = section_create_uri.substring(index);
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+tmp;
}
else
{
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+"/"+section_create_uri;
}

log.info section_create_uri;
context.testCase.testSteps["CreateSection"].setPropertyValue("EndPoint",section_create_uri);
context.testCase.testSteps["CreateSubSection"].setPropertyValue("EndPoint",section_create_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="4d385640-d0bd-4319-af63-0b50837276b7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="497e0a03-b906-4170-a30a-ba832c6b9a10"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="f866b1fd-8d5e-46d1-b53f-4a2000bab000"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="e10b603b-418d-48b0-9c1e-5dbdc2231cc3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSection" id="deda20e0-e359-4f75-9de6-17182f7b443a"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI" id="41a3c92f-e6f1-4338-95c3-7573b461197c"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xml2 = new XmlParser().parseText(response);
def ParentSection_URI;
def SubSection_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
			it.@'rel'=="down" && FOUND==0 &&
			it.@'href'.toString().contains("subsections"))
		{
			SubSection_URI = it.@'href';FOUND=1;
		}
	};

FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry") && FOUND==0)
		{
			ParentSection_URI = it.'id'[0].value()[0].toString();
			FOUND=1;
		}
	};
log.info ParentSection_URI+" ; "+SubSection_URI;

def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);

]]></script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSection" id="4ec2112d-6adf-43b8-855a-b0c0158d01ac"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SectionTest12:35:22:764</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/222" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedSectionURI" id="0a2f36ac-5b2c-4217-8ce9-0e6543228683"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
section_uri = httpResponseHeader["Location"][0];
log.info section_uri;
delete_section_uri = section_uri+"/delete";
context.testCase.testSteps["GetCreatedSection"].setPropertyValue("EndPoint",section_uri);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetCreatedSection" id="3887183c-7e63-4826-99a7-0eecf34c7a1b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="GetCreatedSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/458</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSubSection" id="11048fb0-4111-42f4-ae83-3c651cedc13d"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSubSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SubSectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSubSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI-SubSection" id="54079c89-c1e5-426e-993c-ac9e08043415"><con:settings/><con:config><script>def httpResponseHeaders = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders
def ParentSection_URI = httpResponseHeaders["Location"][0]
log.info ParentSection_URI;


def request = context.expand('${CreateSubSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSubSection"].setPropertyValue("Request",newXml);

</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSubSection" id="bf4ac437-f767-48e5-ab26-39e83d2d9eaa"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="7518ad2b-9ca1-4048-8153-304a1b3875f4" name="CreateSubSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SubSectionTest12:35:23:905</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/458" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="d43a1de8-7981-4db1-9862-5574b88fcdc0" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetSubSectionURI" id="69570b8a-bd74-4721-b26e-b9f3f037ab61"><con:settings/><con:config><script>def httpResponseHeaders = context.testCase.testSteps["CreateSubSection"].testRequest.response.responseHeaders;
def SubSection_URI = httpResponseHeaders["Location"][0];
context.testCase.testSteps["CheckSubsectionCreated"].setPropertyValue("EndPoint",SubSection_URI);
log.info SubSection_URI;
</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckSubsectionCreated" id="85d95709-9344-4d39-bacd-f7664d4f00c6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="932ffd6a-a8b4-450f-b181-a7ffa51c3635" name="CheckSubsectionCreated" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/459</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="ecec5ec5-087e-4b99-8422-1a48c3e5b408" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","SubSection is Created.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","SubSection is Created.");
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","SubSection is not Created.");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ac8e1340-e82c-4505-bf84-bf8bac5ce8be" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ETagUpdatesOfParentSection-VF-7170" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="611d21f0-5bb9-4ba2-ac5f-c6715d2d638e"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="e0fa292d-71cb-489f-9b72-3f5d9458e720"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="389a884b-50a9-427e-8958-9ce8ba097aec"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="11d1c240-1160-4b8c-8adb-559313a71ab5"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String section_create_uri;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'content-descriptor'.toString().contains("com.escenic.section"))
		{
			section_create_uri = it.@'href';
		}
	};

if(section_create_uri.contains("webservice"))
{
	int index = section_create_uri.indexOf("webservice/")+"webservice/".length();
	String tmp = section_create_uri.substring(index);
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+tmp;
}
else
{
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+"/"+section_create_uri;
}

log.info section_create_uri;
context.testCase.testSteps["CreateSection"].setPropertyValue("EndPoint",section_create_uri);
context.testCase.testSteps["CreateSubSection"].setPropertyValue("EndPoint",section_create_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="a8fba737-d1ae-42c0-9cf8-c6e5d1a01e29"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="4248f616-fc0e-4db0-837f-61a23444c749"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="bf7f23cb-3184-418a-99f4-c77fd8e5824d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="7a53cdff-e6c7-4f2e-a27e-7dfceafc6a67"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSection" id="5de44b34-88d8-4a51-85e0-02dc251b2ce5"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI" id="a4bf77ac-ebcd-41c4-a533-981ed390d936"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xml2 = new XmlParser().parseText(response);
def ParentSection_URI;
def SubSection_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
			it.@'rel'=="down" && FOUND==0 &&
			it.@'href'.toString().contains("subsections"))
		{
			SubSection_URI = it.@'href';FOUND=1;
		}
	};

FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry") && FOUND==0)
		{
			ParentSection_URI = it.'id'[0].value()[0].toString();
			FOUND=1;
		}
	};
log.info ParentSection_URI+" ; "+SubSection_URI;

def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);

]]></script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSection" id="187f9013-6725-4dbb-b1ee-17422d8484d9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SectionTest12:35:30:651</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/222" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedSectionURI" id="7671b8d7-636d-4aa5-9129-30fe084170a8"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
section_uri = httpResponseHeader["Location"][0];
log.info section_uri;
context.testCase.testSteps["GetCreatedSection"].setPropertyValue("EndPoint",section_uri);
context.testCase.testSteps["CheckETagOfParentSection"].setPropertyValue("EndPoint",section_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetCreatedSection" id="841e585c-5b6a-442d-8d09-a516d9897ca3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="GetCreatedSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/460</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSubSection" id="d9ca4ecf-ab95-493e-8696-29c0adec2633"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSubSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SubSectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSubSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI-SubSection" id="b5561da1-b96a-436e-ad33-461fcddc8ac8"><con:settings/><con:config><script>def httpResponseHeaders = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders
def ParentSection_URI = httpResponseHeaders["Location"][0]
log.info ParentSection_URI;


def request = context.expand('${CreateSubSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSubSection"].setPropertyValue("Request",newXml);

</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSubSection" id="91893e84-f71a-44ae-a455-5c29269c409f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="7518ad2b-9ca1-4048-8153-304a1b3875f4" name="CreateSubSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SubSectionTest12:35:31:696</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/460" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="d43a1de8-7981-4db1-9862-5574b88fcdc0" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckETagOfParentSection" id="175ab386-7676-47cf-a0a6-d97aaa374793"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="CheckETagOfParentSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/460</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int isDifferent(String a,String b)
{
	if(a.length()!=b.length())
	return 1;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 1;
	}
	return 0;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","ETag is updated.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","ETag is not updated.");
if(httpStatusCode=="200")
{
	def old_response = context.testCase.testSteps["GetCreatedSection"].testRequest.response.responseHeaders;
	def new_response = context.testCase.testSteps["CheckETagOfParentSection"].testRequest.response.responseHeaders;
	def old_ETAG = old_response["ETag"][0];
	def new_ETAG = new_response["ETag"][0];
	log.info new_ETAG;
	log.info old_ETAG;
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Prev ETag : "+old_ETAG+", New Etag : "+new_ETAG+". Etag changed.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Prev ETag : "+old_ETAG+", New Etag : "+new_ETAG+". Etag changed.");
	if(isDifferent(old_ETAG,new_ETAG)==1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Prev ETag : "+old_ETAG+", New Etag : "+new_ETAG+".Both are same.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="afbdbe10-7c4a-4be3-84f3-d4c68867bb51" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ETagUpdates-ForDeleteSubSection-VF-7170" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="8ac76ca9-4d94-4d84-969f-6cfc6cab486d"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="64ad3d36-0a41-46d5-acb0-8aad683d535e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="75a07477-faf0-42d1-984d-fddd459e7706"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="6463fbb5-5b93-48b1-bae5-9f0513a2edc1"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String section_create_uri;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'content-descriptor'.toString().contains("com.escenic.section"))
		{
			section_create_uri = it.@'href';
		}
	};

if(section_create_uri.contains("webservice"))
{
	int index = section_create_uri.indexOf("webservice/")+"webservice/".length();
	String tmp = section_create_uri.substring(index);
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+tmp;
}
else
{
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+"/"+section_create_uri;
}

log.info section_create_uri;
context.testCase.testSteps["CreateSection"].setPropertyValue("EndPoint",section_create_uri);
context.testCase.testSteps["CreateSubSection"].setPropertyValue("EndPoint",section_create_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="f26b1cf5-3394-443f-bc00-e0aac5382ecd"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="2e1b1860-2a59-483b-a614-9271561bb787"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="433ec5f7-3730-435f-8ed9-2b8d8c2032c8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="2bb7c76f-50c2-420f-aa1a-2fca72947911"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSection" id="513766d0-3bb6-4208-b6b8-dc576b468d41"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI" id="61184cd7-90f3-486b-af79-8290936778e3"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xml2 = new XmlParser().parseText(response);
def ParentSection_URI;
def SubSection_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
			it.@'rel'=="down" && FOUND==0 &&
			it.@'href'.toString().contains("subsections"))
		{
			SubSection_URI = it.@'href';FOUND=1;
		}
	};

FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry") && FOUND==0)
		{
			ParentSection_URI = it.'id'[0].value()[0].toString();
			FOUND=1;
		}
	};
log.info ParentSection_URI+" ; "+SubSection_URI;

def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);

]]></script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSection" id="49a79251-d04f-47ea-9488-2d38ad7261df"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SectionTest12:35:37:942</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/222" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedSectionURI" id="0b09c8fd-cfa9-48eb-a19a-cf472c1db8f2"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
section_uri = httpResponseHeader["Location"][0];
log.info section_uri;
context.testCase.testSteps["GetCreatedSection"].setPropertyValue("EndPoint",section_uri);
context.testCase.testSteps["CheckETagOfParentSectionAfterAdded"].setPropertyValue("EndPoint",section_uri);
context.testCase.testSteps["CheckETagOfParentSection"].setPropertyValue("EndPoint",section_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetCreatedSection" id="00d151b4-ab00-4308-b395-603c77798fce"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="GetCreatedSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/462</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSubSection" id="c6d47042-03a0-4a8b-b695-10b2667ee0df"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSubSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SubSectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer =new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSubSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI-SubSection" id="dcbc85e9-c4af-49c3-8be2-5be0818bf2d5"><con:settings/><con:config><script>def httpResponseHeaders = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders
def ParentSection_URI = httpResponseHeaders["Location"][0]
log.info ParentSection_URI;


def request = context.expand('${CreateSubSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSubSection"].setPropertyValue("Request",newXml);

</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSubSection" id="45c8f95a-3401-4ad6-8377-16f892ff0f6c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="7518ad2b-9ca1-4048-8153-304a1b3875f4" name="CreateSubSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SubSectionTest12:35:39:10</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/462" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="d43a1de8-7981-4db1-9862-5574b88fcdc0" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckETagOfParentSectionAfterAdded" id="6a976efd-4bcb-49e2-a056-5a09c9545ad0"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="CheckETagOfParentSectionAfterAdded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/462</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int isDifferent(String a,String b)
{
	if(a.length()!=b.length())
	return 1;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 1;
	}
	return 0;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","ETag is updated.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","ETag is not updated.");
if(httpStatusCode=="200")
{
	def old_response = context.testCase.testSteps["GetCreatedSection"].testRequest.response.responseHeaders;
	def new_response = context.testCase.testSteps["CheckETagOfParentSectionAfterAdded"].testRequest.response.responseHeaders;
	def old_ETAG = old_response["ETag"][0];
	def new_ETAG = new_response["ETag"][0];
	log.info new_ETAG;
	log.info old_ETAG;
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Prev ETag : "+old_ETAG+", New Etag : "+new_ETAG+". Etag changed.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Prev ETag : "+old_ETAG+", New Etag : "+new_ETAG+". Etag changed.");
	if(isDifferent(old_ETAG,new_ETAG)==1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Prev ETag : "+old_ETAG+", New Etag : "+new_ETAG+".Both are same.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedSubSectionURI" id="5243747e-70b8-4ab2-8276-55552945dfe5"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSubSection"].testRequest.response.responseHeaders;
section_uri = httpResponseHeader["Location"][0];
log.info section_uri;
delete_section_uri = section_uri+"/delete";
context.testCase.testSteps["GetCreatedSubSection"].setPropertyValue("EndPoint",section_uri);
context.testCase.testSteps["GetSection_DeleteModel"].setPropertyValue("EndPoint",delete_section_uri);
context.testCase.testSteps["DeleteSection"].setPropertyValue("EndPoint",delete_section_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetCreatedSubSection" id="4c81b125-8b28-4c0d-975d-fc404e04eb48"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d21bab70-ceb8-44fa-8959-bf2df6608d4a" name="GetCreatedSubSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/463</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionDeleteURI" id="47b4652d-6e57-4953-b188-6bcbc820ebf2"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSubSection"].testRequest.response.responseHeaders;
section_uri = httpResponseHeader["Location"][0];
delete_section_uri = section_uri+"/delete";

context.testCase.testSteps["GetSection_DeleteModel"].setPropertyValue("EndPoint",delete_section_uri);
context.testCase.testSteps["DeleteSection"].setPropertyValue("EndPoint",delete_section_uri);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection_DeleteModel" id="228aa8e3-34a9-48c3-b276-1e13d76629ea"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="9a5f7000-bb8b-4f26-961e-a2b258339aab" name="GetSection_DeleteModel" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/463/delete</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetDeleteURI" id="419e337b-5595-4683-ab1c-1dd92ba11abd"><con:settings/><con:config><script>def response = context.expand('${GetSection_DeleteModel#Response}');
def xml = new XmlParser().parseText(response);
def model;

xml.breadthFirst().each{
		if(it.@'model'!=null)
		{
			model = it.@'model';
		}
	};

def request = context.expand('${DeleteSection#Request}');
def request_xml = new XmlParser().parseText(request);
request_xml.'content'.'vdf:payload'.each{it.@'model'=model};

request_xml.breadthFirst().each
{
	if(it.@name=="com.escenic.section.delete.confirmation")
	it.'vdf:value'[0].value=true;
};
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(request_xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["DeleteSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="DeleteSection" id="195bd559-c7e9-470f-9372-797448265387"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="34b1dd07-e7c7-4a3c-9a0c-eb47c6767e8a" name="DeleteSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;-247897060&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/463/delete</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section.delete.463">
      <vdf:field name="com.escenic.section.delete.title"/>
      <vdf:field name="com.escenic.section.delete.replacement"/>
      <vdf:field name="com.escenic.section.delete.confirmation">
        <vdf:value>true</vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="79407a6a-2be3-4579-b2a8-18c5146ba9da" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckETagOfParentSection" id="86e1ef2b-c1dd-4a9d-bf9a-eb4c885824d4"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="CheckETagOfParentSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/462</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int isDifferent(String a,String b)
{
	if(a.length()!=b.length())
	return 1;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 1;
	}
	return 0;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","ETag is updated.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","ETag is not updated.");
if(httpStatusCode=="200")
{
	def old_response = context.testCase.testSteps["GetCreatedSection"].testRequest.response.responseHeaders;
	def new_response = context.testCase.testSteps["CheckETagOfParentSection"].testRequest.response.responseHeaders;
	def old_ETAG = old_response["ETag"][0];
	def new_ETAG = new_response["ETag"][0];
	log.info new_ETAG;
	log.info old_ETAG;
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Prev ETag : "+old_ETAG+", New Etag : "+new_ETAG+". Etag changed.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Prev ETag : "+old_ETAG+", New Etag : "+new_ETAG+". Etag changed.");
	if(isDifferent(old_ETAG,new_ETAG)==1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Prev ETag : "+old_ETAG+", New Etag : "+new_ETAG+".Both are same.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a29dd04c-a419-46ad-8997-ebcb7682cd49" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DeleteSectionDontDeleteArticles-VF-7169" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="23923d82-7591-49ab-9499-047627fefe35"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="f8621463-ac1c-4bf8-a33f-cfe4979fbaf5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="92c3e4ad-3b5b-4005-9767-4bd7f52cda99"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="c742c303-8791-42cb-a47c-0172b4be90ae"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String section_create_uri;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'content-descriptor'.toString().contains("com.escenic.section"))
		{
			section_create_uri = it.@'href';
		}
	};

if(section_create_uri.contains("webservice"))
{
	int index = section_create_uri.indexOf("webservice/")+"webservice/".length();
	String tmp = section_create_uri.substring(index);
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+tmp;
}
else
{
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+"/"+section_create_uri;
}

log.info section_create_uri;
context.testCase.testSteps["CreateSection"].setPropertyValue("EndPoint",section_create_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="055ba112-ed32-4fff-a89e-41475a9fd36a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="ff9de23c-297f-4a93-94ea-0d24f5fd7f37"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="bc136e16-aacf-4c18-8060-ad3416634b86"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="CreateContentURI" id="50cf337a-4e52-434a-8fcb-e2d79abfb79e"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);

def sectionName= new String[10];
def sectionURI= new String[10];
int idx=0;

xml.breadthFirst().
each {
		if(it.name().toString().contains("id") &amp;&amp; it.value()[0].contains("/section/") &amp;&amp; !it.value()[0].contains("subsection"))
		{
			if(idx&lt;10)
			{
				//sectionName[idx] = it.value()[0];
				sectionURI[idx] = it.value()[0];
				idx+=1;
			}
		}
	}

if(idx!=0)
{
	if(idx>2)
	section_uri= sectionURI[1] + "/content-items";
	else
	section_uri= sectionURI[0] + "/content-items";
	context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",section_uri);
}</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="19e7bb88-7369-41e2-b55a-52ecabd9f10f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSection" id="dd6ced22-8d5d-4923-a055-834b4f2223da"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI" id="22971b1e-a776-4920-a74e-518bbbf78a7a"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xml2 = new XmlParser().parseText(response);
def ParentSection_URI;
def SubSection_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
			it.@'rel'=="down" && FOUND==0 &&
			it.@'href'.toString().contains("subsections"))
		{
			SubSection_URI = it.@'href';FOUND=1;
		}
	};

FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry") && FOUND==0)
		{
			ParentSection_URI = it.'id'[0].value()[0].toString();
			FOUND=1;
		}
	};
log.info ParentSection_URI+" ; "+SubSection_URI;

def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml)
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);

]]></script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSection" id="001ca9e7-4475-4ce3-93bd-9bc75aeee39f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SectionTest12:35:48:592</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/222" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="e8af372f-4052-48a6-bdf1-9e87cd7899c7"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml)
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="640392a8-da0d-4414-be6c-b11f17d39d06"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="c54a8c93-bff8-4e09-91de-b61417981711" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/455/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="d196969d-15b5-4701-9998-baf5eaa7302c" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetCreatedContentURI" id="82f5e5cc-69bf-4b18-814a-8ac450a19502"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def content_uri;
if(httpResponseHeader!=null)
{
	content_uri = httpResponseHeader["Location"][0];
}
context.testCase.testSteps["RetriveContent"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["IsContentDeletedWithHomeSection"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["SetHomeSection"].setPropertyValue("EndPoint",content_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveContent" id="e3c53ee8-8f5f-488e-a23e-cac0e6d37eba"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="fdd6e67b-3829-419c-83d9-6b448becb7bc" name="RetriveContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/3477</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="efaaad14-fc6e-4b91-8850-89823597ddd2" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetHomeSectionToContent" id="ebb016b7-4bd4-4faa-8d4f-847d4ff63a9c"><con:settings/><con:config><script>def request = context.expand('${CreateSection#Request}');
def xml = new XmlParser().parseText(request);
def newHomeSectionTitle;

xml.breadthFirst().each
{
	if(it.@name=="com.escenic.sectionName")
	{
		newHomeSectionTitle = it.'value'[0].value()[0];
	}
};
log.info newHomeSectionTitle;
def response = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
def newHomeURI = response["Location"][0];
log.info newHomeURI;

response = context.expand('${RetriveContent#Response}');
xml = new XmlParser().parseText(response);

xml.breadthFirst().each
	{
		if(it.@rel=="http://www.vizrt.com/types/relation/home-section")
		{
			it.@href=	newHomeURI;
			it.@title=newHomeSectionTitle;
		}
		if(it.@rel=="http://www.vizrt.com/types/relation/section")
		{
			it.@href=	newHomeURI;
			it.@title=newHomeSectionTitle;
		}
	};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace = true;
printer.print(xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["SetHomeSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="SetHomeSection" id="ac96bfdb-a924-4796-b4fb-ca85cd088817"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="81462cf4-620d-4f5f-9fdc-45dead32985d" name="SetHomeSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/3477</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>http://qa-epsilon:8080/webservice/escenic/content/3477</id>
  <link rel="self" href="http://qa-epsilon:8080/webservice/escenic/content/3477" type="application/atom+xml; type=entry"/>
  <link rel="edit" href="http://qa-epsilon:8080/webservice/escenic/content/3477" type="application/atom+xml; type=entry"/>
  <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-epsilon:8080/webservice/escenic/lock/article/3477/69240037" type="application/atom+xml; type=entry"/>
  <dcterms:identifier xmlns:dcterms="http://purl.org/dc/terms/">3477</dcterms:identifier>
  <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" title="qa">
    <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-epsilon:8080/webservice/escenic/section/464" title="SectionTest12:35:48:592" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-epsilon:8080/webservice/escenic/section/464" title="SectionTest12:35:48:592" type="application/atom+xml; type=entry"/>
  </metadata:publication>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-epsilon:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-epsilon:8080/webservice/escenic/content/3477/log/" type="application/atom+xml; type=entry" title="History"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-epsilon:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-epsilon:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://epsilon.qa.local/Extra/article3477.ece" type="application/xhtml+xml" title="cXense Analytics"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-epsilon:8080/webservice-extensions/note/note.html?url=http://qa-epsilon:8080/note-webservice/escenic/content/3477/notes" type="application/xhtml+xml" title="Notes"/>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="subtitle"/>
      <vdf:field name="leadtext"/>
      <vdf:field name="maxAge"/>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
      <vdf:field name="byline"/>
      <vdf:field name="creditLine"/>
      <vdf:field name="overline"/>
      <vdf:field name="datelineTag"/>
      <vdf:field name="shirttail"/>
      <vdf:field name="quote"/>
      <vdf:field name="suggested-tags"/>
      <vdf:field name="storyKeywords"/>
      <vdf:field name="originatingURL"/>
      <vdf:field name="priority"/>
      <vdf:field name="indexable"/>
      <vdf:field name="followlinks"/>
      <vdf:field name="copyright"/>
      <vdf:field name="owner"/>
      <vdf:field name="source"/>
      <vdf:field name="layoutVariant"/>
      <vdf:field name="customConfig"/>
      <vdf:field name="com.escenic.tags">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <title type="text">This is a test story title</title>
  <summary type="text"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>
  <app:edited xmlns:app="http://www.w3.org/2007/app">2018-02-27T06:36:44.000Z</app:edited>
  <dcterms:created xmlns:dcterms="http://purl.org/dc/terms/">2018-02-27T06:36:44.000Z</dcterms:created>
  <metadata:reference xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="8911013a-5fd1-4edd-9425-c8f35c9c015a"/>
  <author>
    <name>editqa editAdministrator</name>
    <email>editadmin@emali.com</email>
    <uri>http://qa-epsilon:8080/webservice/escenic/person/1</uri>
  </author>
  <metadata:creator xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>editqa editAdministrator</name>
  </metadata:creator>
  <metadata:last-edited-by xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>editqa editAdministrator</name>
  </metadata:last-edited-by>
  <app:control xmlns:app="http://www.w3.org/2007/app">
    <app:draft>yes</app:draft>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext" name="draft" href="http://qa-epsilon:8080/webservice/escenic/content/state/draft/editor"/>
  </app:control>
  <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-epsilon:8080/webservice/escenic/section/464" title="SectionTest12:35:48:592" type="application/atom+xml; type=entry"/>
  <link rel="usage" href="http://qa-epsilon:8080/webservice/usage/article/3477" type="text/uri-list" title="Incoming Links"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/content/3477/preview" rel="http://www.vizrt.com/types/relation/preview"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/content/3477/log" rel="http://www.vizrt.com/types/relation/log"/>
  <link href="http://qa-epsilon:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="cafdf13c-220f-4212-a499-a0f14f7222fd" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="204")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedSectionURI" id="d27d1442-5ee1-4e2a-9622-f123079ff253"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
section_uri = httpResponseHeader["Location"][0];
log.info section_uri;
delete_section_uri = section_uri+"/delete";
context.testCase.testSteps["GetCreatedSection"].setPropertyValue("EndPoint",section_uri);
context.testCase.testSteps["GetSection_DeleteModel"].setPropertyValue("EndPoint",delete_section_uri);
context.testCase.testSteps["DeleteSection"].setPropertyValue("EndPoint",delete_section_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetCreatedSection" id="8f42eb08-369d-48a3-a498-c5db56cebe5c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="GetCreatedSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/464</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetSection_DeleteModel" id="d815577a-dc2b-4f43-825a-d1b0372e7691"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="df988c60-b16d-41a0-b248-10386690fdd3" name="GetSection_DeleteModel" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/464/delete</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="1d23709e-bf5e-407d-9977-6d87f966bba5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetDeleteURI" id="82402983-2815-4bf4-8821-fea35093624f"><con:settings/><con:config><script>def response = context.expand('${GetSection_DeleteModel#Response}');
def xml = new XmlParser().parseText(response);
def model;

xml.breadthFirst().each{
		if(it.@'model'!=null)
		{
			model = it.@'model';
		}
	};

def request = context.expand('${DeleteSection#Request}');
def request_xml = new XmlParser().parseText(request);
request_xml.'content'.'vdf:payload'.each{it.@'model'=model};
request_xml.breadthFirst().each{
	if(it.@name=="com.escenic.section.delete.confirmation")
	it.'vdf:value'[0].value="true";
};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(request_xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["DeleteSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="DeleteSection" id="98c90b23-088d-4cdf-8d21-9cc963b6623f"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="34b1dd07-e7c7-4a3c-9a0c-eb47c6767e8a" name="DeleteSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;-247897060&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/464/delete</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section.delete.464">
      <vdf:field name="com.escenic.section.delete.title"/>
      <vdf:field name="com.escenic.section.delete.replacement">
        <vdf:origin href="http://qa-bianca:8080/webservice/escenic/section/4"/>
        <vdf:value>News</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.section.delete.confirmation">
        <vdf:value>true</vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="79407a6a-2be3-4579-b2a8-18c5146ba9da" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="IsContentDeletedWithHomeSection" id="b5e30607-82df-4b8a-afd1-b7e9b7538b5d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="fdd6e67b-3829-419c-83d9-6b448becb7bc" name="IsContentDeletedWithHomeSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/3477</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="375852b0-26dd-4055-80f1-7f61bf1e39ee" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200 - Content should exist.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","200 - Content exists.");
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode+" - Content is deleted with home section.");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f52850df-f9a3-4911-a37d-3768d4c46230" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LinkToReturnLastPage-VF-2483" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="b5b4a8a5-ec17-45ad-a73e-72eb820a6e8a"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="be2b0e26-41cd-4eef-98e7-cb7985ed61ea"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="ae5c1ee9-138c-4267-8ea7-f07f33ecdd2c"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

//context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="16c961f3-dfce-4679-b55c-6ffa919d9697"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindChangelog" id="1e64f2d1-c736-4396-8057-79d55ab707f8"><con:settings/><con:config><script>def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String Changelog;
int FOUND=0;
xml.breadthFirst().each{
	if(it.@rel=="http://www.vizrt.com/types/relation/protection-domains")
	{
		Changelog = it.@href;
	}
};
context.testCase.testSteps["GetChangelog"].setPropertyValue("EndPoint",Changelog);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetChangelog" id="93055475-6086-4aa5-9069-4debe0104361"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="373e36d9-51f8-4b6e-936a-e32543a6d3d0" name="GetChangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/changelog</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindSectionChangelog" id="4c6a0786-2e34-492d-936c-1d274f68d1b9"><con:settings/><con:config><script>def response = context.expand('${GetChangelog#Response}');
def xml = new XmlParser().parseText(response);
String SectionChangelog="";
int FOUND=0;

xml.breadthFirst().each
{
	if(it.name().toString().contains("entry"))
	{
		for(s in it.children())
		{
			if(s.@rel=="http://www.vizrt.com/types/relations/changelog")
			{
				SectionChangelog = s.@href;
			}
		}
	}
};

log.info SectionChangelog;
context.testCase.testSteps["GetSectionChangelog"].setPropertyValue("EndPoint",SectionChangelog);
context.testCase.testSteps["SectionChangelog"].setPropertyValue("EndPoint",SectionChangelog);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSectionChangelog" id="ef53a7a9-52a4-4f7b-9651-9cc0c53ff47c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="59afae28-ffcd-435d-884f-ad2c649a31b7" name="GetSectionChangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/changelog/section/454</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SectionChangelog" id="30a0698d-39ac-4039-8657-f71ea998688d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="59afae28-ffcd-435d-884f-ad2c649a31b7" name="SectionChangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/changelog/section/454</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindNextChangelogs" id="ab704855-d58a-4a12-a238-49bc8608cbb4"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

def response = context.expand('${SectionChangelog#Response}');
def xml = new XmlParser().parseText(response);
def PreviousChangelog, NextChangelog;
int Found = 0;
xml.breadthFirst().each
{
	if(it.@rel=="previous")
	PreviousChangelog = it.@href;
	if(it.@rel=="next")
	NextChangelog = it.@href;
};

for(int i=0;;i++)
{
	context.testCase.testSteps["CheckNextChangeLog"].setPropertyValue("EndPoint",NextChangelog);
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CheckNextChangeLog']);
	
	response = context.expand('${CheckNextChangeLog#Response}');
	xml = new XmlParser().parseText(response);
	Found = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
		Found = 1;
	};
	if(Found)
	{
		xml.breadthFirst().each
		{
			if(it.@rel=="next")
			NextChangelog = it.@href;
		};
	}
	else
	{
		log.info "empty at "+i.toString();
		break;
	}
}
</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckNextChangeLog" id="1c5d775f-0bc8-475b-aa0e-88d74c6d8beb"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0cf07350-66ed-4bf0-bacb-ddac1ffdd0cc" name="CheckNextChangeLog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/changelog/section/454/before/26587?count=10</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="90bc7a9f-d518-484f-97ac-b9a3a3162f4f" name="Script Assertion"><con:configuration><scriptText>def response = context.expand('${CheckNextChangeLog#Response}');

def xml = new XmlParser().parseText(response);
int FLAG = 0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("entry"))
	FLAG=1;
};

int CheckForPrevLink(xml)
{
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("link") &amp;&amp; it.@rel=="previous")
		FOUND=1;
	};
	return FOUND;
}

if(FLAG==1)
{
	log.info "not empty";
}
else
{
	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);

	suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
	suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
	
	def httpResponseHeaders = context.testCase.testSteps["CheckNextChangeLog"].testRequest.response.responseHeaders;
	def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name","CheckNextChangeLog");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Previous link is found at the last Empty Page.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Previous link is found at the last Empty Page.");	
	
	if(httpStatusCode=="200")
	{
		int result = CheckForPrevLink(xml);
		if(result)
		{
			testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
		}
		else
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Previous link is NOT found at the last Empty Page.");
			testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
		}
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindPreviousChangeLog" id="de96a7ac-134e-4a7b-b5ad-7a6df7d8c034"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

def response = context.expand('${SectionChangelog#Response}');
def xml = new XmlParser().parseText(response);
def PreviousChangelog, NextChangelog;
int Found = 0;
xml.breadthFirst().each
{
	if(it.@rel=="previous")
	PreviousChangelog = it.@href;
};

for(int i=0;;i++)
{
	context.testCase.testSteps["CheckPreviousChangeLog"].setPropertyValue("EndPoint",PreviousChangelog);
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CheckPreviousChangeLog']);
	
	response = context.expand('${CheckPreviousChangeLog#Response}');
	xml = new XmlParser().parseText(response);
	Found = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
		Found = 1;
	};
	if(Found)
	{
		xml.breadthFirst().each
		{
			if(it.@rel=="previous")
			PreviousChangelog = it.@href;
		};
	}
	else
	{
		log.info "empty at "+i.toString();
		break;
	}
}
</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckPreviousChangeLog" id="46e082b4-a79c-46e0-b88c-e39d30a5b97f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="7a3fa1e8-f81a-4e0e-a8fb-fb4a47b9581b" name="CheckPreviousChangeLog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/changelog/section/454/after/26601?count=10</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="6ef75d40-8801-4493-9391-df62d2a4fdcb" name="Script Assertion"><con:configuration><scriptText>def response = context.expand('${CheckPreviousChangeLog#Response}');

def xml = new XmlParser().parseText(response);
int FLAG = 0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("entry"))
	FLAG=1;
};

int CheckForNextLink(xml)
{
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("link") &amp;&amp; it.@rel=="next")
		FOUND=1;
	};
	return FOUND;
}

if(FLAG==1)
{
	log.info "not empty";
}
else
{
	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);

	suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
	suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
	
	def httpResponseHeaders = context.testCase.testSteps["CheckNextChangeLog"].testRequest.response.responseHeaders;
	def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name","CheckPreviousChangeLog");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Next link is found at the last Empty Page.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Next link is found at the last Empty Page.");	
	
	if(httpStatusCode=="200")
	{
		int result = CheckForNextLink(xml);
		if(result)
		{
			testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
		}
		else
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Next link is NOT found at the last Empty Page.");
			testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
		}
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9f409a74-6e54-474e-b069-e3e662549e88" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CheckPreviousLink-VF-2485_backup" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Description" id="5e8a7506-8ab8-489b-93e6-08b41c87cea7"><con:settings/><con:config><script>/*
 * The test case may fail some times because changelog
 * do not update immediately after creating a section.
 * Specially on Escenic-6 engines.
 * If SSE server is different then it occurs much more frequently.
 */</script></con:config></con:testStep><con:testStep type="groovy" name="SetCredentials" id="592515aa-ed49-4d88-bb9d-c2ecc5151165"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;
def xml = new XmlSlurper().parse("C:/Users/amnm/Desktop/HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="8a92518b-4d27-41dc-b3e8-169f5d7e4794"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="b45d6d93-89a0-4249-9f7e-952e279785e2"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="5184c9c7-bbe4-4da0-92d1-6826921dbc4f"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String section_create_uri;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'content-descriptor'.toString().contains("com.escenic.section"))
		{
			section_create_uri = it.@'href';
		}
	};

if(section_create_uri.contains("webservice"))
{
	int index = section_create_uri.indexOf("webservice/")+"webservice/".length();
	String tmp = section_create_uri.substring(index);
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+tmp;
}
else
{
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+"/"+section_create_uri;
}

log.info section_create_uri;
context.testCase.testSteps["CreateSection"].setPropertyValue("EndPoint",section_create_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="f032e61f-6f8f-46c4-8192-78331edd6ae3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindChangelog" id="bdd987f5-d53f-4918-828b-6feb1508e775"><con:settings/><con:config><script>def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String Changelog;
int FOUND=0;
xml.breadthFirst().each{
	if(it.@rel=="http://www.vizrt.com/types/relation/protection-domains")
	{
		Changelog = it.@href;
	}
};
context.testCase.testSteps["GetChangelog"].setPropertyValue("EndPoint",Changelog);</script></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="42f1515a-c264-4f2e-b9f2-aa61d6cbb8a4"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="8d7c0672-6099-4317-9962-c7a57dc84b9e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="cd9f2888-ed2a-4290-878d-0e3217678115"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080/webservice/publication/qa/content-descriptions/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSection" id="4a53764c-40d1-4387-95c1-c35c53b7f6ef"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI" id="c7f48ed2-d0ec-4d0e-8658-81b3340f9d76"><con:settings/><con:config><script>def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

def ParentSection_URI;
def SubSection_URI;
int FOUND=0;

xml.breadthFirst().
each {
		if(it.name().toString().contains("entry") &amp;&amp; FOUND==0)
		{
			ParentSection_URI = it.'id'[0].value()[0].toString();
			FOUND=1;
		}
	};

def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);

</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSection" id="da2aaa8f-1065-48c1-ab38-6dc12c969a5f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-eta:8080/webservice/publication/qa/escenic/model/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SectionTest16:45:31:304</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-eta:8080/webservice/escenic/section/1" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="delay" name="Delay" id="cbfaaa17-4e20-407d-a34e-f74997110864" disabled="true"><con:settings/><con:config><delay>80000</delay></con:config></con:testStep><con:testStep type="httprequest" name="GetChangelog" id="f0a9d68e-c51f-4638-b629-e0fd06f2760f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="373e36d9-51f8-4b6e-936a-e32543a6d3d0" name="GetChangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080/webservice/escenic/changelog</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindSectionChangelog" id="41f11655-7343-4b5b-b5d2-74b7476c4860"><con:settings/><con:config><script><![CDATA[
def httpResponseHeader = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
def NewSectionID = httpResponseHeader["Location"][0];

def response = context.expand('${GetChangelog#Response}');
def xml = new XmlParser().parseText(response);
String SectionChangelog="";
int FOUND=0;

xml.breadthFirst().each
{
	if(it.name().toString().contains("entry") && it.'id'[0].value().toString().contains(NewSectionID))
	{
		for(s in it.children())
		{
			if(s.@rel=="http://www.vizrt.com/types/relations/changelog")
			{
				SectionChangelog = s.@href;
				FOUND = 1;
			}
		}
	}
};


if(FOUND==0)
{
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry") && it.'id'[0].value().toString().contains("section"))
		{
			for(s in it.children())
			{
				if(s.@rel=="http://www.vizrt.com/types/relations/changelog")
				{
					SectionChangelog = s.@href;
				}
			}
		}
	};
	def NewID = NewSectionID.findAll(/\d+/)*.toInteger();
	def OldSectionID = SectionChangelog.findAll(/\d+/)*.toInteger();
	log.info SectionChangelog;
	SectionChangelog = SectionChangelog.replace(OldSectionID[1].toString(),NewID[1].toString());
	log.info SectionChangelog;
}

/*
def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);
String SectionChangelog="";
String SectionID;
int FOUND=0;

int IsEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i<a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
xml.breadthFirst().each
{
	if(it.name().toString().contains("entry") && FOUND==0)
	{
		for(s in it.children())
		{
			if(s.@rel=="self")
			{
				SectionID = s.@href;
				FOUND = 1;
				log.info SectionID;
			}
		}
	}
};

response = context.expand('${GetChangelog#Response}');
xml = new XmlParser().parseText(response);
xml.breadthFirst().each
{
	if(it.name().toString().contains("entry") && IsEqual(it.'id'[0].value()[0].toString(),SectionID)==1)
	{
		for(s in it.children())
		{
			if(s.@rel=="http://www.vizrt.com/types/relations/changelog")
			{
				SectionChangelog = s.@href;
				FOUND = 1;
				log.info SectionChangelog;
			}
		}
	}
};
*/

log.info SectionChangelog;

context.testCase.testSteps["GetSectionChangelog"].setPropertyValue("EndPoint",SectionChangelog);
context.testCase.testSteps["SectionChangelog"].setPropertyValue("EndPoint",SectionChangelog);]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetSectionChangelog" id="a9313fe4-74d9-4bd3-8e64-3b92931a5842"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="59afae28-ffcd-435d-884f-ad2c649a31b7" name="GetSectionChangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080/webservice/escenic/changelog/section/139</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindContentCreationURI" id="ce52dc75-a13e-4170-ab1b-74dd1d842920"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

def response = context.expand('${GetSectionChangelog#Response}');
def xml = new XmlParser().parseText(response);
def ContentCretionLink;
def NextLink;
int FOUND = 0;
xml.breadthFirst().each
{
	if(it.@rel=="http://www.vizrt.com/types/relation/content-items")
	{
		ContentCretionLink = it.@href;
		FOUND = 1;
	}
};
/*
while(FOUND==0)
{
	xml.breadthFirst().each
	{
		if(it.@rel=="next")
		{
			NextLink = it.@href;
		}
	};
	context.testCase.testSteps["GetSectionChangelogAgain"].setPropertyValue("EndPoint",NextLink);
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['GetSectionChangelogAgain']);

	response = context.expand('${GetSectionChangelogAgain#Response}');
	def tmp =  new XmlParser().parseText(response);

	tmp.breadthFirst().each
	{
		if(it.@rel=="http://www.vizrt.com/types/relation/content-items")
		{
			ContentCretionLink = it.@href;
			FOUND = 1;
		}
	};
}*/
log.info ContentCretionLink;
context.testCase.testSteps["CreateContentForSection"].setPropertyValue("EndPoint",ContentCretionLink);</script></con:config></con:testStep><con:testStep type="groovy" name="SetModelForContent" id="256c7fc7-ae5e-4fa7-9931-c53fd7b63825"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContentForSection#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContentForSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="CreateStoriesForSection" id="8aed79bd-0145-4af0-bac8-5164e592f224"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

for(int i=0;i&lt;39;i++)
{
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CreateContentForSection'])
}
</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContentForSection" id="1c20a252-b6c4-4a78-9dd8-7436dac29f78"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="8f6e9571-3b88-440c-a10d-3cb635b33698" name="CreateContentForSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080/webservice/escenic/section/139/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-eta:8080/webservice/publication/qa/escenic/model/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SectionChangelog" id="929786dd-288c-4769-adb4-1b57a910dde9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="59afae28-ffcd-435d-884f-ad2c649a31b7" name="SectionChangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080/webservice/escenic/changelog/section/139</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindNextChangelogs" id="249f3174-f5d2-4c63-a0d9-5b01b1a5f326"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

def response = context.expand('${SectionChangelog#Response}');
def xml = new XmlParser().parseText(response);
def PreviousChangelog, NextChangelog;
int Found = 0;
xml.breadthFirst().each
{
	if(it.@rel=="previous")
	PreviousChangelog = it.@href;
	if(it.@rel=="next")
	NextChangelog = it.@href;
};

for(int i=0;;i++)
{
	context.testCase.testSteps["CheckNextChangeLog"].setPropertyValue("EndPoint",NextChangelog);
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CheckNextChangeLog']);
	
	response = context.expand('${CheckNextChangeLog#Response}');
	xml = new XmlParser().parseText(response);
	Found = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
		Found = 1;
	};
	if(Found)
	{
		xml.breadthFirst().each
		{
			if(it.@rel=="next")
			NextChangelog = it.@href;
		};
	}
	else
	{
		log.info "empty at "+i.toString();
		break;
	}
}
</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckNextChangeLog" id="b2a6028d-2805-4ff9-a3f9-5de21d49c0e6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0cf07350-66ed-4bf0-bacb-ddac1ffdd0cc" name="CheckNextChangeLog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080/webservice/escenic/changelog/section/139/before/4977?count=10</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="90bc7a9f-d518-484f-97ac-b9a3a3162f4f" name="Script Assertion"><con:configuration><scriptText>def response = context.expand('${CheckNextChangeLog#Response}');

def xml = new XmlParser().parseText(response);
int FLAG = 0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("entry"))
	FLAG=1;
};

int CheckForPrevLink(xml)
{
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("link") &amp;&amp; it.@rel=="previous")
		FOUND=1;
	};
	return FOUND;
}

if(FLAG==1)
{
	log.info "not empty";
}
else
{
	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);

	suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
	suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
	
	def httpResponseHeaders = context.testCase.testSteps["CheckNextChangeLog"].testRequest.response.responseHeaders;
	def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name","CheckNextChangeLog");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Previous link is found at the last Empty Page.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Previous link is found at the last Empty Page.");	
	
	if(httpStatusCode=="200")
	{
		int result = CheckForPrevLink(xml);
		if(result)
		{
			testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
		}
		else
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Previous link is NOT found at the last Empty Page.");
			testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
		}
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindPreviousChangeLog" id="1e1815c4-3ea4-4dcc-9da5-f923684bb1bc"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

def response = context.expand('${SectionChangelog#Response}');
def xml = new XmlParser().parseText(response);
def PreviousChangelog, NextChangelog;
int Found = 0;
xml.breadthFirst().each
{
	if(it.@rel=="previous")
	PreviousChangelog = it.@href;
};

for(int i=0;;i++)
{
	context.testCase.testSteps["CheckPreviousChangeLog"].setPropertyValue("EndPoint",PreviousChangelog);
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CheckPreviousChangeLog']);
	
	response = context.expand('${CheckPreviousChangeLog#Response}');
	xml = new XmlParser().parseText(response);
	Found = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
		Found = 1;
	};
	if(Found)
	{
		xml.breadthFirst().each
		{
			if(it.@rel=="previous")
			PreviousChangelog = it.@href;
		};
	}
	else
	{
		log.info "empty at "+i.toString();
		break;
	}
}
</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckPreviousChangeLog" id="d1a1435b-cff6-4a6e-a689-2080bb206bc9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="7a3fa1e8-f81a-4e0e-a8fb-fb4a47b9581b" name="CheckPreviousChangeLog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-eta:8080/webservice/escenic/changelog/section/139/after/4986?count=10</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="6ef75d40-8801-4493-9391-df62d2a4fdcb" name="Script Assertion"><con:configuration><scriptText>def response = context.expand('${CheckPreviousChangeLog#Response}');

def xml = new XmlParser().parseText(response);
int FLAG = 0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("entry"))
	FLAG=1;
};

int CheckForNextLink(xml)
{
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("link") &amp;&amp; it.@rel=="next")
		FOUND=1;
	};
	return FOUND;
}

if(FLAG==1)
{
	log.info "not empty";
}
else
{
	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);

	suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
	suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
	
	def httpResponseHeaders = context.testCase.testSteps["CheckNextChangeLog"].testRequest.response.responseHeaders;
	def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name","CheckPreviousChangeLog");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Next link is found at the last Empty Page.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Next link is found at the last Empty Page.");	
	
	if(httpStatusCode=="200")
	{
		int result = CheckForNextLink(xml);
		if(result)
		{
			testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
		}
		else
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Next link is NOT found at the last Empty Page.");
			testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
		}
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4c777e7b-f3b3-4945-b7eb-90435b39f7aa" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CheckPreviousLink-VF-2485" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="69fdad97-b07d-43c3-8ef6-60c4d5861791"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="bceec16a-82de-45c7-8f87-c5543938785a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="4cd50d2e-9241-45da-bc1a-e5145db675f4"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="546ec7a0-6d65-4341-9e0d-ead31605cc54"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindChangelog" id="6cb237c8-bae0-4a59-beeb-bcbb8e9d710a"><con:settings/><con:config><script>def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String Changelog;
int FOUND=0;
xml.breadthFirst().each{
	if(it.@rel=="http://www.vizrt.com/types/relation/protection-domains")
	{
		Changelog = it.@href;
	}
};
context.testCase.testSteps["GetChangelog"].setPropertyValue("EndPoint",Changelog);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="42292ebc-44cc-422c-a2ae-f51b88f6be12"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetChangelog" id="c730991c-728d-4fd1-a703-80f9292687ad"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="373e36d9-51f8-4b6e-936a-e32543a6d3d0" name="GetChangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/changelog</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindSectionChangelog" id="b74d8a4e-17e1-45e6-902b-6452628ede1a"><con:settings/><con:config><script>def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);
String SectionChangelog="";
String SectionID;
int FOUND=0;

int IsEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
xml.breadthFirst().each
{
	if(it.name().toString().contains("entry") &amp;&amp; FOUND==0)
	{
		for(s in it.children())
		{
			if(s.@rel=="self")
			{
				SectionID = s.@href;
				FOUND = 1;
				log.info SectionID;
			}
		}
	}
};

response = context.expand('${GetChangelog#Response}');
xml = new XmlParser().parseText(response);
xml.breadthFirst().each
{
	if(it.name().toString().contains("entry") &amp;&amp; IsEqual(it.'id'[0].value()[0].toString(),SectionID)==1)
	{
		for(s in it.children())
		{
			if(s.@rel=="http://www.vizrt.com/types/relations/changelog")
			{
				SectionChangelog = s.@href;
				FOUND = 1;
				log.info SectionChangelog;
			}
		}
	}
};

log.info SectionChangelog;

context.testCase.testSteps["GetSectionChangelog"].setPropertyValue("EndPoint",SectionChangelog);
context.testCase.testSteps["SectionChangelog"].setPropertyValue("EndPoint",SectionChangelog);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSectionChangelog" id="25d194f8-7312-4619-a564-af57f7ea9a0e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="59afae28-ffcd-435d-884f-ad2c649a31b7" name="GetSectionChangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/changelog/section/1</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindContentCreationURI" id="a35bbcf3-0fee-43d3-b72d-8dffc8608ee8"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);
def ContentCretionLink;
def NextLink;
int FOUND = 0;
xml.breadthFirst().each
{
	if(it.@rel=="http://www.vizrt.com/types/relation/content-items" &amp;&amp; FOUND==0)
	{
		ContentCretionLink = it.@href;
		FOUND = 1;
	}
};

log.info ContentCretionLink;
context.testCase.testSteps["CreateContentForSection"].setPropertyValue("EndPoint",ContentCretionLink);</script></con:config></con:testStep><con:testStep type="groovy" name="SetModelForContent" id="d682d17e-652c-4e48-8a33-572705a9d5c7"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContentForSection#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContentForSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="CreateStoriesForSection" id="92c885c3-d6de-4e96-9ba6-b8b57dbd3089"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

for(int i=0;i&lt;39;i++)
{
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CreateContentForSection'])
}
</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContentForSection" id="98c6694d-4039-45fd-b6c4-edeb491bc46e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="8f6e9571-3b88-440c-a10d-3cb635b33698" name="CreateContentForSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SectionChangelog" id="c5dc37af-eb75-46fd-9114-ba586ec63e3c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="59afae28-ffcd-435d-884f-ad2c649a31b7" name="SectionChangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/changelog/section/1</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindNextChangelogs" id="4f46ad19-c8f8-42ad-8d96-edbfe3647780"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

def response = context.expand('${SectionChangelog#Response}');
def xml = new XmlParser().parseText(response);
def PreviousChangelog, NextChangelog;
int Found = 0;
xml.breadthFirst().each
{
	if(it.@rel=="previous")
	PreviousChangelog = it.@href;
	if(it.@rel=="next")
	NextChangelog = it.@href;
};

context.testCase.testSteps["GetPageOne"].setPropertyValue("EndPoint",NextChangelog);
/*
for(int i=0;i&lt;5;i++)
{
	context.testCase.testSteps["CheckNextChangeLog"].setPropertyValue("EndPoint",NextChangelog);
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CheckNextChangeLog']);
	
	response = context.expand('${GetPageOne#Response}');
	xml = new XmlParser().parseText(response);
	Found = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
		Found = 1;
	};
	if(Found)
	{
		xml.breadthFirst().each
		{
			if(it.@rel=="next")
			NextChangelog = it.@href;
		};
	}
	else
	{
		log.info "empty at "+i.toString();
		break;
	}
}
*/</script></con:config></con:testStep><con:testStep type="httprequest" name="GetPageOne" id="be635e6d-8489-47e3-9d8c-759de04df3dd"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0cf07350-66ed-4bf0-bacb-ddac1ffdd0cc" name="GetPageOne" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/changelog/section/1/before/52214?count=10</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="90bc7a9f-d518-484f-97ac-b9a3a3162f4f" name="Script Assertion" disabled="true"><con:configuration><scriptText>def response = context.expand('${CheckNextChangeLog#Response}');

def xml = new XmlParser().parseText(response);
int FLAG = 0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("entry"))
	FLAG=1;
};

int CheckForPrevLink(xml)
{
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("link") &amp;&amp; it.@rel=="previous")
		FOUND=1;
	};
	return FOUND;
}

if(FLAG==1)
{
	log.info "not empty";
}
else
{
	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);

	suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
	suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
	
	def httpResponseHeaders = context.testCase.testSteps["CheckNextChangeLog"].testRequest.response.responseHeaders;
	def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name","CheckNextChangeLog");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Previous link is found at the last Empty Page.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Previous link is found at the last Empty Page.");	
	
	if(httpStatusCode=="200")
	{
		int result = CheckForPrevLink(xml);
		if(result)
		{
			testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
		}
		else
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Previous link is NOT found at the last Empty Page.");
			testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
		}
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindNextChangelog-2" id="8a05681a-eb4f-41a8-8d46-f59196d666b6"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

def response = context.expand('${GetPageOne#Response}');
def xml = new XmlParser().parseText(response);
def PreviousChangelog, NextChangelog;
int Found = 0;
xml.breadthFirst().each
{
	if(it.@rel=="previous")
	PreviousChangelog = it.@href;
	if(it.@rel=="next")
	NextChangelog = it.@href;
};

context.testCase.testSteps["GetPageTwo"].setPropertyValue("EndPoint",NextChangelog);
/*
for(int i=0;i&lt;5;i++)
{
	context.testCase.testSteps["CheckNextChangeLog"].setPropertyValue("EndPoint",NextChangelog);
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['CheckNextChangeLog']);
	
	response = context.expand('${GetPageOne#Response}');
	xml = new XmlParser().parseText(response);
	Found = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
		Found = 1;
	};
	if(Found)
	{
		xml.breadthFirst().each
		{
			if(it.@rel=="next")
			NextChangelog = it.@href;
		};
	}
	else
	{
		log.info "empty at "+i.toString();
		break;
	}
}
*/</script></con:config></con:testStep><con:testStep type="httprequest" name="GetPageTwo" id="e603e0aa-ce80-4992-a8c7-97926fe62c38"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2f1ef0dd-f90f-4b02-a375-6cb955e32184" name="GetPageTwo" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/changelog/section/1/before/52201?count=10</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindNextChangelog-3" id="e7aa5572-3346-4d91-9feb-c493e5cbca15"><con:settings/><con:config><script>def response = context.expand('${GetPageTwo#Response}');
def xml = new XmlParser().parseText(response);
def PreviousChangelog, NextChangelog;
int Found = 0;
xml.breadthFirst().each
{
	if(it.@rel!=null &amp;&amp; it.@rel=="next")
	{
		NextChangelog = it.@href.toString();
		context.testCase.testSteps["GetPageThree"].setPropertyValue("EndPoint",NextChangelog);
		log.info NextChangelog;
	}
};
//log.info NextChangelog;
//context.testCase.testSteps["GetPageThree"].setPropertyValue("EndPoint",NextChangelog);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetPageThree" id="b7396e9c-0d10-4840-bfed-e2e086719bf7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2f1ef0dd-f90f-4b02-a375-6cb955e32184" name="GetPageThree" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/changelog/section/1/before/52190?count=10</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindPreviousChangeLog" id="f01413d3-28eb-4463-a43e-6235a16bff3a"><con:settings/><con:config><script>def response = context.expand('${GetPageThree#Response}');
def xml = new XmlParser().parseText(response);
def PreviousChangelog, NextChangelog;
int Found = 0;
xml.breadthFirst().each
{
	if(it.@rel!=null &amp;&amp; it.@rel=="previous")
	{
		PreviousChangelog = it.@href.toString();
		context.testCase.testSteps["GetPreviousPage"].setPropertyValue("EndPoint",PreviousChangelog);
		log.info PreviousChangelog;
	}
};</script></con:config></con:testStep><con:testStep type="httprequest" name="GetPreviousPage" id="5838d02b-010b-4284-bf2a-9e80133f9ae6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="7a3fa1e8-f81a-4e0e-a8fb-fb4a47b9581b" name="GetPreviousPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/changelog/section/1/after/52189?count=10</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="6ef75d40-8801-4493-9391-df62d2a4fdcb" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

int IsEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
int CheckResponse(res1,res2)
{
	def xml1 = new XmlParser().parseText(res1);
	def xml2 = new XmlParser().parseText(res2);
	def FirstEntries = new String[15];
	def SecondEntries = new String[15];
	int f=0;
	int counter = 0;
	int counter2 = 0;
	xml1.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
		{
			FirstEntries[counter++] = it.toString();
		}
	};
	
	xml2.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
		{
			SecondEntries[counter2++] = it.toString();
		}
	};

	if(counter!=counter2)
	return 0;
	for(int i=0;i&lt;counter2;i++)
	{
		if(IsEqual(FirstEntries[i],SecondEntries[i])==0)
		return 0;
	}
	return 1;
}

def httpResponseHeaders = context.testCase.testSteps["GetPreviousPage"].testRequest.response.responseHeaders;
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name","GetPreviousPage");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Prev link directs to the last visited page.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Prev link directs to the last visited page.");	

if(httpStatusCode=="200")
{
	def PageTwoResponse = context.expand('${GetPageTwo#Response}');
	def PrevPageResponse = context.expand('${GetPreviousPage#Response}');
	int result = CheckResponse(PageTwoResponse,PrevPageResponse);
	if(result)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Prev link does not direct to the last visited page.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}	</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4dadb690-0ccf-4247-9dd8-de1df97429ad" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestChangeLogLinkEachSection-VF-2305" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="2049bada-2de8-4649-9ca1-f342639e4188"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="19b8c7f4-2c36-45cf-813f-e4cefd81a6e8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetRootSection" id="0bf4bb76-9644-4608-bcea-2fbb0ee61fa1"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="0a2ac495-5f1e-4e5a-8dfd-e15f74f87edc"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c866121d-1a1f-4115-81db-dc82fd5e484c" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="ac471cf5-d1d4-4c60-934a-efb72f2ca53a" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

int FindChangelog(res)
{
	def xml = new XmlParser().parseText(res);
	int countChangelog = 0;
	int countEntry = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
		{
			countEntry+=1;
			for(s in it.children())
			{
				if(s.name().toString().contains("link") &amp;&amp; s.@rel=="http://www.vizrt.com/types/relation/changelog")
				countChangelog += 1;
			}
		}
	};
	if(countChangelog==countEntry)
	return 1
	return 0;
}
/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${GetRootSection#Response}');
	int result = FindChangelog(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Change log link found for each entry.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Change log link found each entry.");
	log.info result;
	if(result)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Change log link not found for each entry.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4331059a-2421-4386-934e-7289f07bff2b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestSectionContsinsListsInboxPagesLinkRelation-vf-1555" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="2aec6f87-a385-4b4d-b1a5-cdd853aae996"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="727ccd41-1d1d-4ad9-bf34-04491a9a0712"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="eacb94e5-daa0-4336-8958-e6df1f43983e"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="8a41abf8-29d0-46f8-a66e-8a7a591086de"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String section_create_uri;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'content-descriptor'.toString().contains("com.escenic.section"))
		{
			section_create_uri = it.@'href';
		}
	};

if(section_create_uri.contains("webservice"))
{
	int index = section_create_uri.indexOf("webservice/")+"webservice/".length();
	String tmp = section_create_uri.substring(index);
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+tmp;
}
else
{
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+"/"+section_create_uri;
}

log.info section_create_uri;
context.testCase.testSteps["CreateSection"].setPropertyValue("EndPoint",section_create_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="470f3f5d-0e72-4c49-9991-d01d452d45ca"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="776c8053-25f5-4fee-bf3f-d5efe8d688cd"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="c45bc289-d9b9-4c22-85da-e61d7a0e7a96"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="fd5516a8-64f1-4096-9c00-11d62463482a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSection" id="fdbbab87-023a-44f3-899f-83de5b745f91"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI" id="70db645c-2859-4fdb-a17a-c12d62e03931"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xml2 = new XmlParser().parseText(response);
def ParentSection_URI;
def SubSection_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
			it.@'rel'=="down" && FOUND==0 &&
			it.@'href'.toString().contains("subsections"))
		{
			SubSection_URI = it.@'href';FOUND=1;
		}
	};

FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry") && FOUND==0)
		{
			ParentSection_URI = it.'id'[0].value()[0].toString();
			FOUND=1;
		}
	};
log.info ParentSection_URI+" ; "+SubSection_URI;

def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);

]]></script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSection" id="b9dd3a83-626e-4094-8be9-94f2d26bfc39"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SectionTest12:36:46:501</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/222" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedSectionURI" id="abe6d39a-fb6a-4b6d-96ec-85aea3675d34"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
section_uri = httpResponseHeader["Location"][0];
context.testCase.testSteps["CheckRleationLinks"].setPropertyValue("EndPoint",section_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckRleationLinks" id="c90e1ba6-a44f-47fe-b5f1-f08ba4e2e359"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="CheckRleationLinks" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/465</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int CheckLinkRelations(res)
{
	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	
	int InboxRelationFound=0,ListRelationFound=0,PagesRelationFound=0;
	def xml = new XmlParser().parseText(res);
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("link"))
		{
			if(it.@rel=="http://www.vizrt.com/types/relation/inboxes")
			InboxRelationFound = 1;
			if(it.@rel=="http://www.vizrt.com/types/relation/lists")
			ListRelationFound = 1;
			if(it.@rel=="http://www.vizrt.com/types/relation/pages")
			PagesRelationFound = 1;
		}
	};

	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Found section's in-boxes, lists, pages as link relations.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found section's in-boxes, lists, pages as link relations ");
	def MissingLinks="";
	if(!InboxRelationFound)
	{
		MissingLinks+="in-boxes";
	}
	if(!ListRelationFound)
	{
		if(MissingLinks.length())
		MissingLinks+=",lists";
		else
		MissingLinks+="lists";
	}
	if(!ListRelationFound)
	{
		if(MissingLinks.length())
		MissingLinks+=",pages";
		else
		PagesRelationFound+="pages";
	}
	if(InboxRelationFound+PagesRelationFound+ListRelationFound&lt;3)
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Not found section's "+MissingLinks+" as link relations.");
	return (InboxRelationFound+PagesRelationFound+ListRelationFound);
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${CheckRleationLinks#Response}');
	int result = CheckLinkRelations(response);
	if(result==3)
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	else
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6bb65f9d-f470-447c-8d82-22e8bdabfa9e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestRetrievingStagedSectionPage-VF-5787" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Description" id="424e6b32-a4e1-4be7-96b1-87ffd2faea19"><con:settings/><con:config><script>/*
 * Engine 5.7.* does not work for this TC.
 * Section webservice does not respond with section-page webservice url for 5.7 Engine.
 */</script></con:config></con:testStep><con:testStep type="groovy" name="SetCredentials" id="21eca475-2cec-4169-8764-54dcaeded78b"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="7bd577fb-3eb8-478b-b954-58a2974d39aa"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="3c9a59d2-a5d7-49f9-a7c5-6fd3f9caf354"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="f59a7fa3-e22a-4acd-9019-4d32b7de70b1"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String section_create_uri;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'content-descriptor'.toString().contains("com.escenic.section"))
		{
			section_create_uri = it.@'href';
		}
	};

if(section_create_uri.contains("webservice"))
{
	int index = section_create_uri.indexOf("webservice/")+"webservice/".length();
	String tmp = section_create_uri.substring(index);
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+tmp;
}
else
{
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+"/"+section_create_uri;
}

log.info section_create_uri;
context.testCase.testSteps["CreateSection"].setPropertyValue("EndPoint",section_create_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="4ba08082-42fc-444f-96a3-b32b378d5200"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="a9fa6d9f-e497-48c9-98ab-7eb1ab4b49d7"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="2b29339b-6d53-43d9-b3af-778661bf7161"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="82c0d5f4-f42d-4637-8ea6-1c018d0704f4"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSection" id="63b8ab7c-61d2-40dd-9ebb-58f68121740f"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI" id="0de6f5d3-596e-4570-bae2-d34c66fff326"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xml2 = new XmlParser().parseText(response);
def ParentSection_URI;
def SubSection_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
			it.@'rel'=="down" && FOUND==0 &&
			it.@'href'.toString().contains("subsections"))
		{
			SubSection_URI = it.@'href';FOUND=1;
		}
	};

FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry") && FOUND==0)
		{
			ParentSection_URI = it.'id'[0].value()[0].toString();
			FOUND=1;
		}
	};
log.info ParentSection_URI+" ; "+SubSection_URI;

def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);

]]></script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSection" id="abf2484d-2e85-456c-a076-93ec83bdb8c9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SectionTest12:36:51:949</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/222" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedSectionURI" id="86404432-ff67-49d7-8bdb-2911a91fae7c"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
section_uri = httpResponseHeader["Location"][0];
context.testCase.testSteps["GetCreatedSection"].setPropertyValue("EndPoint",section_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetCreatedSection" id="b96c2aee-0963-447f-8322-b64a938f7e2a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="GetCreatedSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/466</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetActivePageURI" id="8a8131ec-9b29-4ac2-b129-a987a3a815e9"><con:settings/><con:config><script>def response = context.expand('${GetCreatedSection#Response}');
def xml = new XmlParser().parseText(response);
def ActivePage;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link") &amp;&amp; it.@rel=="http://www.vizrt.com/types/relation/active-page")
	ActivePage = it.@href;
};
log.info ActivePage;
context.testCase.testSteps["GetActiveSectionPage"].setPropertyValue("EndPoint",ActivePage);
context.testCase.testSteps["StageSectionPage"].setPropertyValue("EndPoint",ActivePage);
context.testCase.testSteps["CheckSectionPageAgain"].setPropertyValue("EndPoint",ActivePage);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetActiveSectionPage" id="560db81c-df7c-4120-9f38-2b484e785d06"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="6fa6e1db-69d6-410d-a861-91b671fe96ba" name="GetActiveSectionPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section-page/1214</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="EditSectionPage" id="5d4a02cd-d0c3-4251-9901-5c25abfd2a9e"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetActiveSectionPage#Response}');
def xml = new XmlParser().parseText(response);
def AreaModelName;
def toAdd = '''
<vdf:field name="com.escenic.color">
	<vdf:value>#ffcccc</vdf:value>
</vdf:field>''';
def nodetoAdd = new XmlParser(false,false).parseText(toAdd);

xml.breadthFirst().each
{
	if(it.parent()!=null && it.parent().@name=="anotherContentArea")
	{
		it.children().add(nodetoAdd);
	}
};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["StageSectionPage"].setPropertyValue("Request",newXml);
]]></script></con:config></con:testStep><con:testStep type="httprequest" name="StageSectionPage" id="acc0e5f4-7d4f-41a2-a179-4e43356ec473"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="e59c78de-63bf-47a4-bef3-55a3164ab3ba" name="StageSectionPage" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section-page/1214</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>http://qa-epsilon:8080/webservice/escenic/section-page/1214</id>
  <link rel="self" href="http://qa-epsilon:8080/webservice/escenic/section-page/1214" type="application/atom+xml; type=entry"/>
  <link rel="edit" href="http://qa-epsilon:8080/webservice/escenic/section-page/1214" type="application/atom+xml; type=entry"/>
  <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-epsilon:8080/webservice/escenic/lock/pool/1214/2819b26e-280c-4cda-8fa1-97bf81559fff" type="application/atom+xml; type=entry"/>
  <dcterms:identifier xmlns:dcterms="http://purl.org/dc/terms/">1214</dcterms:identifier>
  <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" title="qa"/>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/com.escenic.index-page">
      <vdf:field name="page">
        <vdf:value>
          <group:group xmlns:group="http://xmlns.escenic.com/2015/layout-group" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/group/content" label="Content">
            <vdf:payload model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/group/content#options"/>
            <group:area name="contentArea">
              <vdf:payload model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/group/content#contentArea-area-options"/>
            </group:area>
            <group:area name="anotherContentArea">
              <vdf:payload model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/group/content#anotherContentArea-area-options">
                <vdf:field name="com.escenic.color">
                  <vdf:value>#ffcccc</vdf:value>
                </vdf:field>
              </vdf:payload>
            </group:area>
          </group:group>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
  <title type="text">SectionTest12:36:51:949</title>
  <link rel="edit-media" href="http://qa-epsilon:8080/webservice/escenic/section-page/1214" type="application/atom+xml; type=entry" title="SectionTest12:36:51:949"/>
  <link rel="http://www.vizrt.com/types/relation/parent" href="http://qa-epsilon:8080/webservice/escenic/section/466" type="application/atom+xml; type=entry" title="SectionTest12:36:51:949"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section-page/1214/preview" rel="http://www.vizrt.com/types/relation/preview"/>
  <dcterms:created xmlns:dcterms="http://purl.org/dc/terms/">2018-02-27T06:37:47.000Z</dcterms:created>
  <app:edited xmlns:app="http://www.w3.org/2007/app">2018-02-27T06:37:47.000Z</app:edited>
  <app:control xmlns:app="http://www.w3.org/2007/app">
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext" name="published" href="http://qa-epsilon:8080/webservice/escenic/pool/state/published"/>
    <app:draft>no</app:draft>
  </app:control>
  <dcterms:available xmlns:dcterms="http://purl.org/dc/terms/">2018-02-27T06:36:47.000Z</dcterms:available>
</entry>
]]></con:request><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckSectionPageAgain" id="d617086e-1b95-4fd8-a6a6-544a05b9d4a8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2c4ba485-93bb-4287-aa0d-327f165ec4ca" name="CheckSectionPageAgain" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section-page/1214</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3b09b038-544e-491c-a27b-e6a1c53f7bf4" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a43587a5-e6f0-42c8-b2a3-6d5a3a229192" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestRootCanNotHomeWhenDeleteASection-VF-6271" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="9547eca7-8ba7-45ff-9270-286d285383fe"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="15e2b44f-baf2-4aa8-9ade-2c83db4fff9b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="98920410-2061-4f72-8e96-c8710f3867a7"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="5c146d08-43f5-4a99-9263-f174f62a4c55"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String section_create_uri;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'content-descriptor'.toString().contains("com.escenic.section"))
		{
			section_create_uri = it.@'href';
		}
	};

if(section_create_uri.contains("webservice"))
{
	int index = section_create_uri.indexOf("webservice/")+"webservice/".length();
	String tmp = section_create_uri.substring(index);
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+tmp;
}
else
{
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+"/"+section_create_uri;
}

log.info section_create_uri;
context.testCase.testSteps["CreateSection"].setPropertyValue("EndPoint",section_create_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="ac9b966d-4ed7-4a69-a6ef-d490c1b1845c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="13e193af-1bb4-463b-be49-b0f82e4a3567"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="e6c16855-d8e0-41af-a6e8-09159913ef89"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="CreateContentURI" id="06debaf9-a47c-4acb-800f-67eb9c46f9e0"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);

def sectionName= new String[10];
def sectionURI= new String[10];
int idx=0;

xml.breadthFirst().
each {
		if(it.name().toString().contains("id") &amp;&amp; it.value()[0].contains("/section/") &amp;&amp; !it.value()[0].contains("subsection"))
		{
			if(idx&lt;10)
			{
				//sectionName[idx] = it.value()[0];
				sectionURI[idx] = it.value()[0];
				idx+=1;
			}
		}
	}

if(idx!=0)
{
	if(idx>2)
	section_uri= sectionURI[1] + "/content-items";
	else
	section_uri= sectionURI[0] + "/content-items";
	context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",section_uri);
}</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="ff2402c6-0925-4a7d-bdba-c571bdc6ba2f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSection" id="0e63db2b-4a19-4841-afbd-764ea452cb46"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI" id="13541677-c1fa-4d6d-a9ba-96a8df395833"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xml2 = new XmlParser().parseText(response);
def ParentSection_URI;
def SubSection_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
			it.@'rel'=="down" && FOUND==0 &&
			it.@'href'.toString().contains("subsections"))
		{
			SubSection_URI = it.@'href';FOUND=1;
		}
	};

FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry") && FOUND==0)
		{
			ParentSection_URI = it.'id'[0].value()[0].toString();
			FOUND=1;
		}
	};
log.info ParentSection_URI+" ; "+SubSection_URI;

def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml)
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);

]]></script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSection" id="520c78f8-e236-4b79-8247-e1c0cb95f480"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SectionTest12:37:0:758</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/222" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="adc9f0fa-dee2-4bd1-98bd-c47e6d2829a6"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml)
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="f447ca9e-5fd2-41af-965c-5349cc00dd8d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="c54a8c93-bff8-4e09-91de-b61417981711" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/455/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="d196969d-15b5-4701-9998-baf5eaa7302c" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetCreatedContentURI" id="dbcad70c-76e9-48da-8d83-e079e0ab61b6"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def content_uri;
if(httpResponseHeader!=null)
{
	content_uri = httpResponseHeader["Location"][0];
}
context.testCase.testSteps["RetriveContent"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["SetHomeSection"].setPropertyValue("EndPoint",content_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveContent" id="bdfc43e5-e0de-445a-8804-7fee08f0bf5c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="fdd6e67b-3829-419c-83d9-6b448becb7bc" name="RetriveContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/3518</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="efaaad14-fc6e-4b91-8850-89823597ddd2" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetHomeSectionToContent" id="8c394725-475b-471d-8a21-22339ed044e5"><con:settings/><con:config><script>def request = context.expand('${CreateSection#Request}');
def xml = new XmlParser().parseText(request);
def newHomeSectionTitle;

xml.breadthFirst().each
{
	if(it.@name=="com.escenic.sectionName")
	{
		newHomeSectionTitle = it.'value'[0].value()[0];
	}
};
log.info newHomeSectionTitle;
def response = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
def newHomeURI = response["Location"][0];
log.info newHomeURI;

response = context.expand('${RetriveContent#Response}');
xml = new XmlParser().parseText(response);

xml.breadthFirst().each
	{
		if(it.@rel=="http://www.vizrt.com/types/relation/home-section")
		{
			it.@href=	newHomeURI;
			it.@title=newHomeSectionTitle;
		}
		if(it.@rel=="http://www.vizrt.com/types/relation/section")
		{
			it.@href=	newHomeURI;
			it.@title=newHomeSectionTitle;
		}
	};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace = true;
printer.print(xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["SetHomeSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="SetHomeSection" id="75297e70-b587-4cc6-a725-e35aee652ad4"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="81462cf4-620d-4f5f-9fdc-45dead32985d" name="SetHomeSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/content/3518</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>http://qa-epsilon:8080/webservice/escenic/content/3518</id>
  <link rel="self" href="http://qa-epsilon:8080/webservice/escenic/content/3518" type="application/atom+xml; type=entry"/>
  <link rel="edit" href="http://qa-epsilon:8080/webservice/escenic/content/3518" type="application/atom+xml; type=entry"/>
  <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-epsilon:8080/webservice/escenic/lock/article/3518/a36c0ea" type="application/atom+xml; type=entry"/>
  <dcterms:identifier xmlns:dcterms="http://purl.org/dc/terms/">3518</dcterms:identifier>
  <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://qa-epsilon:8080/webservice/escenic/publication/qa/" title="qa">
    <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-epsilon:8080/webservice/escenic/section/467" title="SectionTest12:37:0:758" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-epsilon:8080/webservice/escenic/section/467" title="SectionTest12:37:0:758" type="application/atom+xml; type=entry"/>
  </metadata:publication>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-epsilon:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-epsilon:8080/webservice/escenic/content/3518/log/" type="application/atom+xml; type=entry" title="History"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-epsilon:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-epsilon:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://epsilon.qa.local/Extra/article3518.ece" type="application/xhtml+xml" title="cXense Analytics"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-epsilon:8080/webservice-extensions/note/note.html?url=http://qa-epsilon:8080/note-webservice/escenic/content/3518/notes" type="application/xhtml+xml" title="Notes"/>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="subtitle"/>
      <vdf:field name="leadtext"/>
      <vdf:field name="maxAge"/>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
      <vdf:field name="byline"/>
      <vdf:field name="creditLine"/>
      <vdf:field name="overline"/>
      <vdf:field name="datelineTag"/>
      <vdf:field name="shirttail"/>
      <vdf:field name="quote"/>
      <vdf:field name="suggested-tags"/>
      <vdf:field name="storyKeywords"/>
      <vdf:field name="originatingURL"/>
      <vdf:field name="priority"/>
      <vdf:field name="indexable"/>
      <vdf:field name="followlinks"/>
      <vdf:field name="copyright"/>
      <vdf:field name="owner"/>
      <vdf:field name="source"/>
      <vdf:field name="layoutVariant"/>
      <vdf:field name="customConfig"/>
      <vdf:field name="com.escenic.tags">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <title type="text">This is a test story title</title>
  <summary type="text"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>
  <app:edited xmlns:app="http://www.w3.org/2007/app">2018-02-27T06:37:57.000Z</app:edited>
  <dcterms:created xmlns:dcterms="http://purl.org/dc/terms/">2018-02-27T06:37:57.000Z</dcterms:created>
  <metadata:reference xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="0dacfb57-f582-430e-9fb6-f3a652c1cb60"/>
  <author>
    <name>editqa editAdministrator</name>
    <email>editadmin@emali.com</email>
    <uri>http://qa-epsilon:8080/webservice/escenic/person/1</uri>
  </author>
  <metadata:creator xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>editqa editAdministrator</name>
  </metadata:creator>
  <metadata:last-edited-by xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>editqa editAdministrator</name>
  </metadata:last-edited-by>
  <app:control xmlns:app="http://www.w3.org/2007/app">
    <app:draft>yes</app:draft>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext" name="draft" href="http://qa-epsilon:8080/webservice/escenic/content/state/draft/editor"/>
  </app:control>
  <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-epsilon:8080/webservice/escenic/section/467" title="SectionTest12:37:0:758" type="application/atom+xml; type=entry"/>
  <link rel="usage" href="http://qa-epsilon:8080/webservice/usage/article/3518" type="text/uri-list" title="Incoming Links"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/content/3518/preview" rel="http://www.vizrt.com/types/relation/preview"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/content/3518/log" rel="http://www.vizrt.com/types/relation/log"/>
  <link href="http://qa-epsilon:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="cafdf13c-220f-4212-a499-a0f14f7222fd" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="204")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedSectionURI" id="96cf9bb0-512f-4f50-9dac-a12a458a0176"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
section_uri = httpResponseHeader["Location"][0];
log.info section_uri;
delete_section_uri = section_uri+"/delete";
context.testCase.testSteps["GetCreatedSection"].setPropertyValue("EndPoint",section_uri);
context.testCase.testSteps["GetSection_DeleteModel"].setPropertyValue("EndPoint",delete_section_uri);
context.testCase.testSteps["DeleteSection"].setPropertyValue("EndPoint",delete_section_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetCreatedSection" id="21d1d104-108e-4d99-94b4-10330d11353b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="GetCreatedSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/467</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetSection_DeleteModel" id="2f3c04e4-5bc5-4464-87b6-37af111470b9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="df988c60-b16d-41a0-b248-10386690fdd3" name="GetSection_DeleteModel" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/467/delete</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="1d23709e-bf5e-407d-9977-6d87f966bba5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetDeleteURI" id="da4898d8-5507-4121-8749-7aa3e81e76e1"><con:settings/><con:config><script>def response = context.expand('${GetSection_DeleteModel#Response}');
def xml = new XmlParser().parseText(response);
def model;

xml.breadthFirst().each{
		if(it.@'model'!=null)
		{
			model = it.@'model';
		}
	};

def request = context.expand('${DeleteSection#Request}');
def request_xml = new XmlParser().parseText(request);
request_xml.'content'.'vdf:payload'.each{it.@'model'=model};
request_xml.breadthFirst().each{
	if(it.@name=="com.escenic.section.delete.confirmation")
	it.'vdf:value'[0].value="true";
};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(request_xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["DeleteSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="SetRootASReplaceHomeSection" id="042f6f50-bf3d-4435-8a78-74087db61714"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);
int FOUND = 0;
int TitleFound=0;
def Title;
def RootURI;
xml.breadthFirst().each
{
	if(it.parent()!=null)
	{
		if(it.parent().name().toString().contains("entry") && it.name().toString().contains("link") && FOUND==0)
		{
			if(it.@rel!="self")
			{
				RootURI = it.@href;
				FOUND = 1;
			}
		}
	}
	
};

xml.breadthFirst().each
{
	if(it.@name=="com.escenic.sectionName" && TitleFound==0)
	{
		Title = it.children()[0].value()[0];
		TitleFound=1;
	}
	
};

//RootURI = "http://qa-eta:8080/webservice/escenic/section/4";
//Title = "News"
def toAdd = "<vdf:origin href=\""+RootURI+"\"/>";//+"<vdf:value>"+TitleFound+"</vdf:value>";
def toAdd2 = "<vdf:value>"+Title+"</vdf:value>";

def nodetoAdd = new XmlParser(false,false).parseText(toAdd);
def nodetoAdd2 = new XmlParser(false,false).parseText(toAdd2);

def request = context.expand('${DeleteSection#Request}');
def request_xml = new XmlParser().parseText(request);

request_xml.breadthFirst().each{
	if(it.@name=="com.escenic.section.delete.replacement")
	{
		if(it.children().size())
		{
			for(s in it.children())
			{
				log.info s.name();
				if(s.name().toString().contains("origin"))
				{
					s.@href = RootURI;
					log.info "uri"
				}
				if(s.name().toString().contains("value"))
				{
					s.value = Title;
					log.info "name"
				}
			}
		}
		else
		{
			it.children().add(nodetoAdd);
			it.children().add(nodetoAdd2);
		}
		
	}
};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(request_xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["DeleteSection"].setPropertyValue("Request",newXml);
]]></script></con:config></con:testStep><con:testStep type="httprequest" name="DeleteSection" id="7d383532-c85d-453c-b02e-2ca0804ce6fc"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="34b1dd07-e7c7-4a3c-9a0c-eb47c6767e8a" name="DeleteSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="&amp;quot;-247897060&amp;quot;" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/467/delete</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section.delete.467">
      <vdf:field name="com.escenic.section.delete.title"/>
      <vdf:field name="com.escenic.section.delete.replacement">
        <vdf:origin href="http://qa-epsilon:8080/webservice/escenic/section/1"/>
        <vdf:value>Template Set</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.section.delete.confirmation">
        <vdf:value>true</vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="79407a6a-2be3-4579-b2a8-18c5146ba9da" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Response - 500 - Root Section can not be set as Home section.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Response - "+httpStatusCode.toString()+" - Root Section can not be set as Home section.");
if(httpStatusCode=="500")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	if(httpStatusCode==204)
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Response - "+httpStatusCode.toString()+" - Root Section set as Home section.");
	else
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Response - "+httpStatusCode.toString()+" - Root Section can not be set as Home section.");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="70e21819-f70e-4b9e-ad93-cce9643b7872" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AllSubSectionsCanBeDiscoveredFromSection-VF-1459" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="a089a52a-7be7-4868-ae0f-d26ae1bd7606"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="8926b987-b7a4-4f71-8d20-45638a03f9e1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="ebb89696-3818-48ba-ad5c-b0bb7bc12c2f"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="eb97fbd7-c5ed-492f-9a58-198999a11f53"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String section_create_uri;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'content-descriptor'.toString().contains("com.escenic.section"))
		{
			section_create_uri = it.@'href';
		}
	};

if(section_create_uri.contains("webservice"))
{
	int index = section_create_uri.indexOf("webservice/")+"webservice/".length();
	String tmp = section_create_uri.substring(index);
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+tmp;
}
else
{
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+"/"+section_create_uri;
}

log.info section_create_uri;
context.testCase.testSteps["CreateSection"].setPropertyValue("EndPoint",section_create_uri);
context.testCase.testSteps["CreateChildSection"].setPropertyValue("EndPoint",section_create_uri);
context.testCase.testSteps["CreateGrandChildSection"].setPropertyValue("EndPoint",section_create_uri);
context.testCase.testSteps["CreateGreatGrandChildSection"].setPropertyValue("EndPoint",section_create_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="04dd47ec-7f50-4342-aada-556e9032391a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="7e9faf5e-15eb-46bc-9f4d-43882e197fd8"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="61a82f6a-402e-4490-85e1-147bee4d5686"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="63e8916f-d79d-4322-94d2-6d9de46df744"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSection" id="29c437ad-be2e-4f49-9ff7-989918ddaf7e"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+"-"+calendar.get(Calendar.MINUTE)+"-"+calendar.get(Calendar.SECOND)+"-"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="SetParentSection" id="0cfda977-6605-4188-8dfa-a23a2ce6ec56"><con:settings/><con:config><script>def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xml2 = new XmlParser().parseText(response);
def ParentSection_URI;
def SubSection_URI;
int FOUND=0;

xml.breadthFirst().
each {
		if(it.name().toString().contains("entry") &amp;&amp; FOUND==0)
		{
			ParentSection_URI = it.'id'[0].value()[0].toString();
			FOUND=1;
		}
	};
log.info ParentSection_URI;

def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);

</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSection" id="4ce7e3af-8daa-448e-8a14-3159bb64c16b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SectionTest12-37-9-127</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/222" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion" disabled="true"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetParentOfChildSection" id="616ee0c8-8d15-4a7d-bbad-fd7a66cf8192"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
def ParentSection = httpResponseHeader["Location"][0];

def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection;

String sectionname = "Child-";
def parentsection;
section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		{
			parentsection = it.'field'.'value'[0].value()[0];
			it.'field'.'value'[0].value()[0]=sectionname+parentsection.toString();
		}
	}
	};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateChildSection"].setPropertyValue("Request",newXml);
</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateChildSection" id="42b0c2a9-cee4-4e4f-a203-5899ea46987a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="1010501b-fe52-4fe6-9362-10fd49cfc9f8" name="CreateChildSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>Child-SectionTest12-37-9-127</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/468" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetParentOfGrandChildSection" id="613c547f-2f31-4510-890e-49bd67ba9f20"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateChildSection"].testRequest.response.responseHeaders;
def ParentSection = httpResponseHeader["Location"][0];

def request = context.expand('${CreateChildSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection;

String sectionname = "GrandChild-";
def parentsection;
section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		{
			parentsection = it.'field'.'value'[0].value()[0];
			parentsection = parentsection.replaceAll("Child-","");
			it.'field'.'value'[0].value()[0]=sectionname+parentsection.toString();
		}
	}
	};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateGrandChildSection"].setPropertyValue("Request",newXml);
</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateGrandChildSection" id="ad40b9cb-0a2e-4b09-8499-9af7cb688858"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="47dfde9a-376e-40e2-944e-1340f9d8c797" name="CreateGrandChildSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>GrandChild-SectionTest12-37-9-127</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/469" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetParentOfGreatGrandChildSection" id="e20d3526-8687-4033-953c-56f6f2cb1918"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateGrandChildSection"].testRequest.response.responseHeaders;
def ParentSection = httpResponseHeader["Location"][0];

def request = context.expand('${CreateGrandChildSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection;

String sectionname = "GreatGrandChild-";
def parentsection;
section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		{
			parentsection = it.'field'.'value'[0].value()[0];
			parentsection = parentsection.replaceAll("GrandChild-","");
			it.'field'.'value'[0].value()[0]=sectionname+parentsection.toString();
		}
	}
	};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateGreatGrandChildSection"].setPropertyValue("Request",newXml);
</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateGreatGrandChildSection" id="7dc38d1e-77c1-4dbf-872a-d39f3f578de0"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="5ec6d624-5fb7-4e83-a501-4e9f5e2be873" name="CreateGreatGrandChildSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>GreatGrandChild-SectionTest12-37-9-127</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/470" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedSectionURI" id="031843fd-7e8e-43a0-a182-94bf5809a123"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
section_uri = httpResponseHeader["Location"][0];
context.testCase.testSteps["GetParentSection"].setPropertyValue("EndPoint",section_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetParentSection" id="af132970-9043-4111-abd2-d4a62f94eee5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="GetParentSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/468</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion" disabled="true"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindSubSection" id="fd215dbf-59ce-4b6d-a32b-c6d3c48d53bb"><con:settings/><con:config><script>def response = context.expand('${GetParentSection#Response}');
def xml = new XmlParser().parseText(response);

xml.breadthFirst().each
{
	if(it.name().toString().contains("link") &amp;&amp; it.@rel=="down")
	{
		ParentSection = it.@href;
	}
};
context.testCase.testSteps["CheckSubsections-1stSection"].setPropertyValue("EndPoint",ParentSection);
</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckSubsections-1stSection" id="bdc5b1f7-3028-4187-ae9c-a71e19ab44ab"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="96f53f54-5493-4970-ab8a-965bf021e4aa" name="CheckSubsections-1stSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/468/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="0bedff74-d6ca-46fd-bf3a-ef6dbeb3c229" name="Script Assertion"><con:configuration><scriptText><![CDATA[def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int IsEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i<a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
int IsChildSectionFound(response)
{
	int FOUND = 0;
	def ResponseHeaders = context.testCase.testSteps["CreateChildSection"].testRequest.response.responseHeaders;
	def Location = ResponseHeaders["Location"][0];
	log.info Location;
	def xml = new XmlParser().parseText(response);
	xml.breadthFirst().each
	{
		if(FOUND == 0 && it.name().toString().contains("link") && it.parent().name().toString().contains("entry") && it.@rel=="self")
		{
			ID = it.@href;//value()[0].toString();
			FOUND = IsEqual(ID,Location);
			context.testCase.testSteps["GetChildSection"].setPropertyValue("EndPoint",ID);
		}
	};
	return FOUND;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode.toString()+"-subsections not found.");
if(httpStatusCode=="200")
{
	def response = context.expand('${CheckSubsections-1stSection#Response}');
	int result = IsChildSectionFound(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","ChildSection found from section's down link.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","ChildSection found from section's down link.");
	if(result)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","ChildSection not found from section's down link.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}]]></scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetChildSection" id="46e54fe2-c3bc-48a7-ad8c-ae6782baa87f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2464a37d-1add-48da-aa3c-848650cea71c" name="GetChildSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/469</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindSubSectionOfChildSection" id="4a54d444-da54-4351-9942-7d876091c2e4"><con:settings/><con:config><script>def response = context.expand('${GetChildSection#Response}');
def xml = new XmlParser().parseText(response);

xml.breadthFirst().each
{
	if(it.name().toString().contains("link") &amp;&amp; it.@rel=="down")
	{
		ParentSection = it.@href;
	}
};
context.testCase.testSteps["CheckSubsections-ChildSection"].setPropertyValue("EndPoint",ParentSection);</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckSubsections-ChildSection" id="f072ce07-e94b-441e-b501-df6b4428303c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="bfb06a6d-9b08-41c2-a38f-650a94c7ff13" name="CheckSubsections-ChildSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/469/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="aadf6a89-53ea-4f71-adab-7f39e261ceb8" name="Script Assertion"><con:configuration><scriptText><![CDATA[def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int IsEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i<a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
int IsChildSectionFound(response)
{
	int FOUND = 0;
	def ResponseHeaders = context.testCase.testSteps["CreateGrandChildSection"].testRequest.response.responseHeaders;
	def Location = ResponseHeaders["Location"][0];
	log.info Location;
	def xml = new XmlParser().parseText(response);
	xml.breadthFirst().each
	{
		if(FOUND == 0 && it.name().toString().contains("link") && it.parent().name().toString().contains("entry") && it.@rel=="self")
		{
			ID = it.@href;//value()[0].toString();
			FOUND = IsEqual(ID,Location);
			context.testCase.testSteps["GetGrandChildSection"].setPropertyValue("EndPoint",ID);
		}
	};
	return FOUND;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode.toString()+"-subsections not found.");
if(httpStatusCode=="200")
{
	def response = context.expand('${CheckSubsections-ChildSection#Response}');
	int result = IsChildSectionFound(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Grand Child Section found from section's down link.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Grand Child Section found from section's down link.");
	if(result)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Grand Child Section not found from section's down link.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}]]></scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetGrandChildSection" id="71bac838-246b-4b48-8b14-a731d0569d66"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="fb2e6633-920c-44af-a227-103a797bc484" name="GetGrandChildSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/470</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="FindSubSectionOfGrandChildSection" id="51973d18-5b2b-4e15-bc79-967db45f13fc"><con:settings/><con:config><script>def response = context.expand('${GetGrandChildSection#Response}');
def xml = new XmlParser().parseText(response);

xml.breadthFirst().each
{
	if(it.name().toString().contains("link") &amp;&amp; it.@rel=="down")
	{
		ParentSection = it.@href;
	}
};
context.testCase.testSteps["CheckSubsections-GrandChildSection"].setPropertyValue("EndPoint",ParentSection);</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckSubsections-GrandChildSection" id="18f76afa-ca1a-464b-ba4d-c38c0128ee66"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="1e696b7f-a0c2-47f3-bb1c-186f8e1ac0e2" name="CheckSubsections-GrandChildSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/470/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="b5390616-ee19-4b02-9037-e5ac058dd84f" name="Script Assertion"><con:configuration><scriptText><![CDATA[def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int IsEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i<a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
int IsChildSectionFound(response)
{
	int FOUND = 0;
	def ResponseHeaders = context.testCase.testSteps["CreateGreatGrandChildSection"].testRequest.response.responseHeaders;
	def Location = ResponseHeaders["Location"][0];
	log.info Location;
	def xml = new XmlParser().parseText(response);
	xml.breadthFirst().each
	{
		if(FOUND == 0 && it.name().toString().contains("link") && it.parent().name().toString().contains("entry") && it.@rel=="self")
		{
			ID = it.@href;//value()[0].toString();
			FOUND = IsEqual(ID,Location);
		}
	};
	return FOUND;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode.toString()+"-subsections not found.");
if(httpStatusCode=="200")
{
	def response = context.expand('${CheckSubsections-GrandChildSection#Response}');
	int result = IsChildSectionFound(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Great Grand Child Section found from section's down link.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Great Grand Child Section found from section's down link.");
	if(result)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Great Grand Child Section not found from section's down link.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}]]></scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ab6bd66f-d9f3-4ed0-8c78-2ab9f89b9d08" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestParameterLinkInSection-VF-7232" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="2714c078-9577-4004-9736-a38ef7ddcdfb"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="5ea61e8e-08bf-426d-aa46-b5b8d9d053ad"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="bfa6b34e-3e7a-4a00-82ab-efe893ab9edd"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="63487bb8-b41e-4d7a-931f-973ab5c8054f"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String section_create_uri;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'content-descriptor'.toString().contains("com.escenic.section"))
		{
			section_create_uri = it.@'href';
		}
	};

if(section_create_uri.contains("webservice"))
{
	int index = section_create_uri.indexOf("webservice/")+"webservice/".length();
	String tmp = section_create_uri.substring(index);
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+tmp;
}
else
{
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+"/"+section_create_uri;
}

log.info section_create_uri;
context.testCase.testSteps["CreateSection"].setPropertyValue("EndPoint",section_create_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="c0c19bbc-8cc8-4c72-831a-99896c665dcb"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="f4597cda-2b4d-4402-8c47-33e6eb817fac"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="b9c11328-33e5-454b-9337-48035652f520"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="f6239075-ce53-430a-824e-e61d9cbff70c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSection" id="4eefc15b-c3f7-4b9a-8c60-9ebb62c5585a"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI" id="b490af48-3fee-47b3-b6d6-899a91a0060c"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xml2 = new XmlParser().parseText(response);
def ParentSection_URI;
def SubSection_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
			it.@'rel'=="down" && FOUND==0 &&
			it.@'href'.toString().contains("subsections"))
		{
			SubSection_URI = it.@'href';FOUND=1;
		}
	};

FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry") && FOUND==0)
		{
			ParentSection_URI = it.'id'[0].value()[0].toString();
			FOUND=1;
		}
	};
log.info ParentSection_URI+" ; "+SubSection_URI;

def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);

]]></script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSection" id="485de544-fdc3-41a1-b97b-ee8d6ac73d58"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SectionTest11:55:5:388</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/222" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedSectionURI" id="669178b0-ce22-4fcb-b0d8-d2da74590593"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
section_uri = httpResponseHeader["Location"][0];
log.info section_uri;
context.testCase.testSteps["TestSectionParameterInSection"].setPropertyValue("EndPoint",section_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="TestSectionParameterInSection" id="bdef8173-ecc1-4ec8-863d-eeda95d845d7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="TestSectionParameterInSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/496</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int IsSectionParameterIncluded(response)
{
	def xml = new XmlParser().parseText(response);
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(FOUND == 0 &amp;&amp; it.name().toString().contains("link") &amp;&amp; it.@rel.toString().contains("http://www.escenic.com/types/relation/parameters"))
		{
			ID = it.@href;
			log.info ID;
			FOUND = 1;
			context.testCase.testSteps["CheckParameterLink"].setPropertyValue("EndPoint",ID);
		}
	};
	return FOUND;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Section Parameter link Found.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Section Parameter link Found.");
if(httpStatusCode=="200")
{
	def response = context.expand('${TestSectionParameterInSection#Response}');
	int result = IsSectionParameterIncluded(response);
	if(result)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Section Parameter link not Found.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode.toString()+httpStatusCode.toString()+"Section Not Found.");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckParameterLink" id="32923377-f608-4f73-b78c-589a0ac26c59"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="55fa84ce-b191-42c7-833a-60a4b2a35ba5" name="CheckParameterLink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/section/125/parameters</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="56b4d25e-a301-4587-b091-0fdf50a86c35" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


int IsSectionParameterIncluded(response)
{
	def xml = new XmlParser().parseText(response);
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(FOUND == 0 &amp;&amp; it.name().toString().contains("link") &amp;&amp; it.@rel.toString().contains("http://www.escenic.com/types/relation/parameters"))
		{
			ID = it.@href;
			log.info ID;
			FOUND = 1;
			context.testCase.testSteps["CheckParameterLink"].setPropertyValue("EndPoint",ID);
		}
	};
	return FOUND;
}


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200-Section Parameter link valid.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","200-Section Parameter link valid.");

def response = context.expand('${TestSectionParameterInSection#Response}');
int result = IsSectionParameterIncluded(response);
if(result)
{
	if(httpStatusCode=="200")
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Section parameter link is not included in section response.");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b597d458-aa5d-4208-976b-2c8e71e9c9fb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestParameterLinkInSectionPage-VF-7232" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="4dd1953e-f0b7-41b9-a788-d6456d035bc1"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;
/*
def file = new File("C:/test.txt");
def lines = file.readLines();
lines.each{
	String line -> log.info line;
	};
*/
def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="dcacd5e8-dc04-41df-983f-911de8110ed2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="ea302b2b-e987-46a9-993a-57416d6f382d"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="a65cf11e-a3eb-4db7-9016-4af2907eaf27"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String section_create_uri;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'content-descriptor'.toString().contains("com.escenic.section"))
		{
			section_create_uri = it.@'href';
		}
	};

if(section_create_uri.contains("webservice"))
{
	int index = section_create_uri.indexOf("webservice/")+"webservice/".length();
	String tmp = section_create_uri.substring(index);
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+tmp;
}
else
{
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+"/"+section_create_uri;
}

log.info section_create_uri;
context.testCase.testSteps["CreateSection"].setPropertyValue("EndPoint",section_create_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="25b0b718-a625-429f-9b61-6058df98f676"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="a7b6b886-5f2b-4b5c-b1fb-1fea45a504f6"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="c94462cf-9664-465d-9709-045122a798f5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="ef0629ca-4518-4237-bdba-04c2bd08f397"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSection" id="7e091ed7-bb52-4b2b-b422-e2191fd029e7"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI" id="c0296eab-56b8-4c58-b2f1-cecf4804922e"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xml2 = new XmlParser().parseText(response);
def ParentSection_URI;
def SubSection_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
			it.@'rel'=="down" && FOUND==0 &&
			it.@'href'.toString().contains("subsections"))
		{
			SubSection_URI = it.@'href';FOUND=1;
		}
	};

FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry") && FOUND==0)
		{
			ParentSection_URI = it.'id'[0].value()[0].toString();
			FOUND=1;
		}
	};
log.info ParentSection_URI+" ; "+SubSection_URI;

def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);

]]></script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSection" id="240df9a8-15aa-4974-9a5c-8e40aa9bb43a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SectionTest11:55:15:840</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/222" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedSectionURI" id="108e7f21-9b62-4eaa-884c-4e7a7533e16c"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
section_uri = httpResponseHeader["Location"][0];

context.testCase.testSteps["GetCreatedSection"].setPropertyValue("EndPoint",section_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetCreatedSection" id="6e5078a8-5bd1-4a44-b13a-540840015bcb"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="GetCreatedSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/497</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


if(httpStatusCode=="200")
{
	log.info "PASS";
}
else
{
	log.info "FAIL";
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseSectionPageLink" id="e8097896-9f24-4762-8077-0e932516e7e6"><con:settings/><con:config><script>def response = context.expand('${GetCreatedSection#Response}');

def xml = new XmlParser().parseText(response);
int FOUND = 0;
xml.breadthFirst().each
{
	if(FOUND == 0 &amp;&amp; it.name().toString().contains("link") &amp;&amp; it.@rel.toString().contains("http://www.vizrt.com/types/relation/pages"))
	{
		ID = it.@href;
		log.info ID;
		FOUND = 1;
		context.testCase.testSteps["TestSectionParameterInSectionPage"].setPropertyValue("EndPoint",ID);
	}
};
</script></con:config></con:testStep><con:testStep type="httprequest" name="TestSectionParameterInSectionPage" id="75acd835-9050-4797-93a0-7f350e8cef7a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="TestSectionParameterInSectionPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/497/pages</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int IsSectionParameterIncluded(response)
{
	def xml = new XmlParser().parseText(response);
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(FOUND == 0 &amp;&amp; it.name().toString().contains("link") &amp;&amp; it.@rel.toString().contains("http://www.escenic.com/types/relation/parameters"))
		{
			ID = it.@href;
			log.info ID;
			FOUND = 1;
			context.testCase.testSteps["CheckParameterLink"].setPropertyValue("EndPoint",ID);
		}
	};
	return FOUND;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Section Parameter link Found.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Section Parameter link Found.");
if(httpStatusCode=="200")
{
	def response = context.expand('${TestSectionParameterInSectionPage#Response}');
	int result = IsSectionParameterIncluded(response);
	if(result)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Section Parameter link not Found.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode.toString()+httpStatusCode.toString()+"Section Not Found.");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckParameterLink" id="8e7c0617-32e5-4f80-b228-f9285f56738f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="55fa84ce-b191-42c7-833a-60a4b2a35ba5" name="CheckParameterLink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/section/127/parameters</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="56b4d25e-a301-4587-b091-0fdf50a86c35" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


int IsSectionParameterIncluded(response)
{
	def xml = new XmlParser().parseText(response);
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(FOUND == 0 &amp;&amp; it.name().toString().contains("link") &amp;&amp; it.@rel.toString().contains("http://www.escenic.com/types/relation/parameters"))
		{
			ID = it.@href;
			log.info ID;
			FOUND = 1;
			context.testCase.testSteps["CheckParameterLink"].setPropertyValue("EndPoint",ID);
		}
	};
	return FOUND;
}


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200-Section Parameter link valid.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","200-Section Parameter link valid.");

def response = context.expand('${TestSectionParameterInSectionPage#Response}');
int result = IsSectionParameterIncluded(response);
if(result)
{
	if(httpStatusCode=="200")
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Section parameter link is not included in section response.");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="fb4dcc44-3f5a-4dca-b2fd-1c0afbe9374f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestParameterLinkInInbox-VF-7232" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="4d668d3a-1fe1-434c-8e3b-6bc51dea4c06"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;
/*
def file = new File("C:/test.txt");
def lines = file.readLines();
lines.each{
	String line -> log.info line;
	};
*/
def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="0a81d8ea-f910-4a7f-b476-180bde6c3c4e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="e9145f4d-49f1-4f8b-961a-00e082ab6c39"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="b2fe3d9d-fc8c-48be-b809-cc03f109f273"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String section_create_uri;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'content-descriptor'.toString().contains("com.escenic.section"))
		{
			section_create_uri = it.@'href';
		}
	};

if(section_create_uri.contains("webservice"))
{
	int index = section_create_uri.indexOf("webservice/")+"webservice/".length();
	String tmp = section_create_uri.substring(index);
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+tmp;
}
else
{
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+"/"+section_create_uri;
}

log.info section_create_uri;
context.testCase.testSteps["CreateSection"].setPropertyValue("EndPoint",section_create_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="27871bc1-35e3-41ae-8875-1ae7f6d71834"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="1875a381-94b2-4b8a-9133-f2b1c3210aef"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="d6efb858-1394-4092-875b-d066f4f8072e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="b887bb08-564b-4f3c-a4b3-0fa6100f879f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSection" id="f620e29d-be0b-46d4-bf88-81f3217e41df"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI" id="a395c82b-7dc7-4192-8534-291eb21d0584"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xml2 = new XmlParser().parseText(response);
def ParentSection_URI;
def SubSection_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
			it.@'rel'=="down" && FOUND==0 &&
			it.@'href'.toString().contains("subsections"))
		{
			SubSection_URI = it.@'href';FOUND=1;
		}
	};

FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry") && FOUND==0)
		{
			ParentSection_URI = it.'id'[0].value()[0].toString();
			FOUND=1;
		}
	};
log.info ParentSection_URI+" ; "+SubSection_URI;

def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);

]]></script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSection" id="7b38e885-8e95-4386-8e64-278de520e191"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SectionTest11:55:25:916</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/222" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedSectionURI" id="5e2536d7-c130-40ec-9082-d7979abac9f0"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
section_uri = httpResponseHeader["Location"][0];

context.testCase.testSteps["GetCreatedSection"].setPropertyValue("EndPoint",section_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetCreatedSection" id="08c35077-a5db-42ca-a314-6779fcf9cc2f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="GetCreatedSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/498</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


if(httpStatusCode=="200")
{
	log.info "PASS";
}
else
{
	log.info "FAIL";
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseSectionPageLink" id="26b4292a-1479-4222-a49c-ac9b7f36f3ae"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetCreatedSection#Response}');

def xml = new XmlParser().parseText(response);
int FOUND = 0;

xml.breadthFirst().each
{
	if(FOUND == 0 && it.name().toString().contains("link") && it.@rel.toString().contains("http://www.vizrt.com/types/relation/inboxes"))
	{
		ID = it.@href;
		log.info ID;
		FOUND = 1;
		context.testCase.testSteps["TestSectionParameterInInboxes"].setPropertyValue("EndPoint",ID);
	}
};

FOUND = 0;
xml.breadthFirst().each
{
	if(FOUND == 0 && it.name().toString().contains("link") && it.@rel.toString().contains("http://www.vizrt.com/types/relation/lists"))
	{
		ID = it.@href;
		log.info ID;
		FOUND = 1;
		context.testCase.testSteps["TestSectionParameterInLists"].setPropertyValue("EndPoint",ID);
	}
};]]></script></con:config></con:testStep><con:testStep type="httprequest" name="TestSectionParameterInInboxes" id="31b92c31-afff-40aa-9973-a195b3f08bcf"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="TestSectionParameterInInboxes" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/498/inboxes</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int IsSectionParameterIncluded(response)
{
	def xml = new XmlParser().parseText(response);
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(FOUND == 0 &amp;&amp; it.name().toString().contains("link") &amp;&amp; it.@rel.toString().contains("http://www.escenic.com/types/relation/parameters"))
		{
			ID = it.@href;
			log.info ID;
			FOUND = 1;
			context.testCase.testSteps["CheckParameterLinkFromInbox"].setPropertyValue("EndPoint",ID);
		}
	};
	return FOUND;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Section Parameter link Found.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Section Parameter link Found.");
if(httpStatusCode=="200")
{
	def response = context.expand('${TestSectionParameterInInboxes#Response}');
	int result = IsSectionParameterIncluded(response);
	if(result)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Section Parameter link not Found.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode.toString()+"Section Not Found.");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckParameterLinkFromInbox" id="52337fb2-26e8-403a-895d-d44c7b58da33"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="55fa84ce-b191-42c7-833a-60a4b2a35ba5" name="CheckParameterLinkFromInbox" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/section/130/parameters</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="56b4d25e-a301-4587-b091-0fdf50a86c35" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


int IsSectionParameterIncluded(response)
{
	def xml = new XmlParser().parseText(response);
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(FOUND == 0 &amp;&amp; it.name().toString().contains("link") &amp;&amp; it.@rel.toString().contains("http://www.escenic.com/types/relation/parameters"))
		{
			ID = it.@href;
			log.info ID;
			FOUND = 1;
			context.testCase.testSteps["CheckParameterLinkFromInbox"].setPropertyValue("EndPoint",ID);
		}
	};
	return FOUND;
}


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200-Section Parameter link valid.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","200-Section Parameter link valid.");

def response = context.expand('${TestSectionParameterInInboxes#Response}');
int result = IsSectionParameterIncluded(response);
if(result)
{
	if(httpStatusCode=="200")
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Section parameter link is not included in section response.");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="TestSectionParameterInLists" id="3a095aba-6e3d-457d-a927-cee2cfd57bff" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="TestSectionParameterInLists" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/498/lists</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int IsSectionParameterIncluded(response)
{
	def xml = new XmlParser().parseText(response);
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(FOUND == 0 &amp;&amp; it.name().toString().contains("link") &amp;&amp; it.@rel.toString().contains("http://www.escenic.com/types/relation/parameters"))
		{
			ID = it.@href;
			log.info ID;
			FOUND = 1;
			context.testCase.testSteps["CheckParameterLinkFromLists"].setPropertyValue("EndPoint",ID);
		}
	};
	return FOUND;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Section Parameter link Found.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Section Parameter link Found.");
if(httpStatusCode=="200")
{
	def response = context.expand('${TestSectionParameterInLists#Response}');
	int result = IsSectionParameterIncluded(response);
	if(result)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Section Parameter link not Found.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode.toString()+"Section Not Found.");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckParameterLinkFromLists" id="fc1dca7b-3cf4-4718-9b70-f9f7c4ec73b9" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="55fa84ce-b191-42c7-833a-60a4b2a35ba5" name="CheckParameterLinkFromLists" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-caliban:8080/webservice/escenic/section/137/parameters</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="56b4d25e-a301-4587-b091-0fdf50a86c35" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


int IsSectionParameterIncluded(response)
{
	def xml = new XmlParser().parseText(response);
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(FOUND == 0 &amp;&amp; it.name().toString().contains("link") &amp;&amp; it.@rel.toString().contains("http://www.escenic.com/types/relation/parameters"))
		{
			ID = it.@href;
			log.info ID;
			FOUND = 1;
			context.testCase.testSteps["CheckParameterLinkFromInbox"].setPropertyValue("EndPoint",ID);
		}
	};
	return FOUND;
}


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200-Section Parameter link valid.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","200-Section Parameter link valid.");

def response = context.expand('${TestSectionParameterInLists#Response}');
int result = IsSectionParameterIncluded(response);
if(result)
{
	if(httpStatusCode=="200")
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Section parameter link is not included in section response.");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9a3edaad-76d9-40f0-b48d-1b37b93afc5c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestParameterLinkInList-VF-7232" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="4556513f-7ffb-4be4-9860-56ae15b02831"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;


/*def file = new File("C:/Users/amnm/Desktop/WEBSERVICETEST/host.txt");
def lines = file.readLines();
lines.each{
	String line -> log.info line;
	};
*/
def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="ed033985-4240-4f37-a5c2-c684e616292d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="fcf9eab0-52f6-435e-99c8-a2dfa6b9a243"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="83ac16e5-0b9b-431b-9eea-19297cf24960"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String section_create_uri;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'content-descriptor'.toString().contains("com.escenic.section"))
		{
			section_create_uri = it.@'href';
		}
	};

if(section_create_uri.contains("webservice"))
{
	int index = section_create_uri.indexOf("webservice/")+"webservice/".length();
	String tmp = section_create_uri.substring(index);
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+tmp;
}
else
{
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+"/"+section_create_uri;
}

log.info section_create_uri;
context.testCase.testSteps["CreateSection"].setPropertyValue("EndPoint",section_create_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="f8cfc3ce-b718-4b9e-a206-45e1511fe3f3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="dea37855-fd23-45d4-b371-95f327ceede9"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="90296472-2ea9-4968-a1c0-bb0622c23953"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="5ef0846d-1edf-49b3-9b12-d0b13bbc0375"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSection" id="7b883bcb-1261-4905-bf91-16c4c0e79bcc"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI" id="61c4ce47-2598-4515-a0fe-5e68ec6646d6"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xml2 = new XmlParser().parseText(response);
def ParentSection_URI;
def SubSection_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
			it.@'rel'=="down" && FOUND==0 &&
			it.@'href'.toString().contains("subsections"))
		{
			SubSection_URI = it.@'href';FOUND=1;
		}
	};

FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry") && FOUND==0)
		{
			ParentSection_URI = it.'id'[0].value()[0].toString();
			FOUND=1;
		}
	};
log.info ParentSection_URI+" ; "+SubSection_URI;

def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);

]]></script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSection" id="47142678-e228-432a-ad64-0e6525478096"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-epsilon:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SectionTest11:55:35:814</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-epsilon:8080/webservice/escenic/section/222" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetCreatedSectionURI" id="d2334390-6698-4dda-9599-a7abbbb06d8f"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
section_uri = httpResponseHeader["Location"][0];

context.testCase.testSteps["GetCreatedSection"].setPropertyValue("EndPoint",section_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetCreatedSection" id="34fa690e-bd5c-4619-ab37-62a4eb462739"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="GetCreatedSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/499</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


if(httpStatusCode=="200")
{
	log.info "PASS";
}
else
{
	log.info "FAIL";
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetListCreationURI" id="96b8d00b-c734-48dd-b321-66a8e75a7252"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetCreatedSection#Response}');
def xml = new XmlParser().parseText(response);
def List_Creation_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
		it.@'rel'=="http://www.vizrt.com/types/relation/lists" &&
		it.@'href'.toString().contains("lists")
		&& FOUND==0
		) {FOUND=1;List_Creation_URI = it.@'href';}};


context.testCase.testSteps["CreateList"].setPropertyValue("EndPoint",List_Creation_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetListName" id="44468db1-d1e6-4c44-936a-b07e6a8cda89"><con:settings/><con:config><script>String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

String listname = "ListTest"+GetTime();
def request = context.expand('${CreateList#Request}');
def list_xml = new XmlParser().parseText(request);
list_xml.'title'.each{it.value=listname.toString()};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(list_xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["CreateList"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateList" id="b0d6a8fb-01ba-49cc-aaf5-39d3eb9c1a57"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateList" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/499/lists</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <title type="text">ListTest11:55:37:223</title>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types">
      <vdf:field name="com.escenic.name">
        <vdf:value>testlist</vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseSectionPageLink" id="1e2a500c-62fa-4981-8173-d444cb0a1b5f"><con:settings/><con:config><script>def response = context.expand('${GetCreatedSection#Response}');

def xml = new XmlParser().parseText(response);
int FOUND = 0;

xml.breadthFirst().each
{
	if(FOUND == 0 &amp;&amp; it.name().toString().contains("link") &amp;&amp; it.@rel.toString().contains("http://www.vizrt.com/types/relation/lists"))
	{
		ID = it.@href;
		log.info ID;
		FOUND = 1;
		context.testCase.testSteps["TestSectionParameterInLists"].setPropertyValue("EndPoint",ID);
	}
};</script></con:config></con:testStep><con:testStep type="httprequest" name="TestSectionParameterInLists" id="3c8e2210-3fe0-433c-b49f-2d5bf7eedc1d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0019c144-83b9-427a-b206-a39ddc2070a7" name="TestSectionParameterInLists" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice/escenic/section/499/lists</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7d90b3ef-7e54-4840-8555-9e8e8259bfbf" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int IsSectionParameterIncluded(response)
{
	def xml = new XmlParser().parseText(response);
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(FOUND == 0 &amp;&amp; it.name().toString().contains("link") &amp;&amp; it.@rel.toString().contains("http://www.escenic.com/types/relation/parameters"))
		{
			ID = it.@href;
			log.info ID;
			FOUND = 1;
			context.testCase.testSteps["CheckParameterLinkFromLists"].setPropertyValue("EndPoint",ID);
		}
	};
	return FOUND;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Section Parameter link Found.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Section Parameter link Found.");
if(httpStatusCode=="200")
{
	def response = context.expand('${TestSectionParameterInLists#Response}');
	int result = IsSectionParameterIncluded(response);
	if(result)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Section Parameter link not Found.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode.toString()+"Section Not Found.");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckParameterLinkFromLists" id="8d84dffb-8781-4f6b-9c2d-6b83c62152e5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="55fa84ce-b191-42c7-833a-60a4b2a35ba5" name="CheckParameterLinkFromLists" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/section/134/parameters</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="56b4d25e-a301-4587-b091-0fdf50a86c35" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


int IsSectionParameterIncluded(response)
{
	def xml = new XmlParser().parseText(response);
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(FOUND == 0 &amp;&amp; it.name().toString().contains("link") &amp;&amp; it.@rel.toString().contains("http://www.escenic.com/types/relation/parameters"))
		{
			ID = it.@href;
			log.info ID;
			FOUND = 1;
			context.testCase.testSteps["CheckParameterLinkFromLists"].setPropertyValue("EndPoint",ID);
		}
	};
	return FOUND;
}


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200-Section Parameter link valid.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","200-Section Parameter link valid.");

def response = context.expand('${TestSectionParameterInLists#Response}');
int result = IsSectionParameterIncluded(response);
if(result)
{
	if(httpStatusCode=="200")
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Section parameter link is not included in section response.");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="5711f9ba-4eac-43a1-9e0b-5825692396be" name="SearchTest"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="3cb59631-0a56-454f-a8e7-67d99916b0b7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ExposeSectionTaxonomy-VF-6241" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="a88fa0f6-7fc5-44ae-8264-0eb21c3a3c7b"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="bd7ffe64-88e6-416d-9edb-ff0d46ca296d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseWebservices" id="eb715c00-a7e4-46c1-864a-88e686d8c2ae"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Tag_Search_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="search-description")
		{
			Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}

		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-search-description")
		{
			Tag_Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

context.testCase.testSteps["CheckSectionTaxonomy"].setPropertyValue("EndPoint",Search_URI);</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckSectionTaxonomy" id="dbf30729-9f85-4cd2-ada4-2add393005b5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="CheckSectionTaxonomy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/open-search/content-search-description.xml</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int CheckSectionTaxonomy(response)
{
	def xml = new XmlParser().parseText(response);
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(it.@rel=="http://a9.com/-/opensearch/extensions/semantic/1.0/taxonomies")
		FOUND=1;
	};
	return FOUND;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${CheckSectionTaxonomy#Response}');
	int result = CheckSectionTaxonomy(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Section \"taxonomy\" in the Search Web Service.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Section \"taxonomy\" in the Search Web Service.");
	if(result==1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Section \"taxonomy\" not found in the Search Web Service.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8fe04bf6-8c83-43d9-af91-4243ef0c38a0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SearchTestCase" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="900768e8-c4c1-40f5-b9f1-2fb0d0b70cae"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="b8a36a61-2ba1-42ec-9bc4-84c0d5330989"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseWebservices" id="2c11493c-d23c-48f7-88b2-38ef04879571"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Tag_Search_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="search-description")
		{
			Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}

		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-search-description")
		{
			Tag_Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

context.testCase.testSteps["GetSearchDescription"].setPropertyValue("EndPoint",Search_URI);
context.testCase.testSteps["GetTagSearchDescription"].setPropertyValue("EndPoint",Tag_Search_URI);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSearchDescription" id="d9b1decf-ae85-4394-ad3a-761c47af57bf"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetSearchDescription" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/open-search/content-search-description.xml</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetSearchURLS" id="b52d9505-2213-4f1b-b9ee-7d091b63cb5f"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSearchDescription#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Search_URI_2;

def html_search;
int URL_FOUND=0;

int isEqualString(String a,String b)
{
	if(a.size()!=b.size())
	return 0;
	for(int i=0;i<a.size();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
String MakeProperURL(String url)
{
	int st,ed;
	String res="";
	String SearchTerms = "searchTerms";
	String tmp="";
	int FOUND=0;
	for(int i=0;i<url.size();i++)
	{
		if(url[i]=='{')
		{
			st=i;
			for(int j=st;j<url.size();j++)
			{
				if(url[j]=='}')
				{
					ed = j;
					break;
				}
			}
			tmp = url.substring(st,ed+1);
			tmp2 = url.substring(st+1,ed);//excluding {}
			if(isEqualString(tmp2,SearchTerms))
			{
				url = url.replaceAll("searchTerms","*");
				//log.info url;
			}
			else
			{
				url = url.replaceAll(tmp2,"");
				//log.info url;
			}
		}
	}
	tmp="";
	for(int i=0;i<url.size();i++)
	{
		if(url[i]!='{' && url[i]!='}')
		tmp=tmp+url[i];
	}
	for(int i=0;i<tmp.size();i++)
	{
		if(tmp[i]=='?')
		{
			if(FOUND==0)
			{
				res=res+tmp[i];
				FOUND=1;
			}
			else
			continue;
			
		}
		else
		res=res+tmp[i];
	}
	return res;
}
xml.breadthFirst().
each {
		if(it.name().toString().contains("Url") &&
		it.@'type'=="application/atom+xml"
		)
		{
			if(URL_FOUND==0)
			{
				Search_URI = it.@'template';
				URL_FOUND=1;
			}
			else
			Search_URI_2 = it.@'template';
		}
		if(it.name().toString().contains("Url") &&
		it.@'type'=="text/html")
		html_search = it.@'template';
	};

if(Search_URI)
Search_URI =  MakeProperURL(Search_URI);
context.testCase.testSteps["GetAtomXMLSearch"].setPropertyValue("EndPoint",Search_URI);

if(Search_URI_2)
Search_URI_2 =  MakeProperURL(Search_URI_2);
else
Search_URI_2=Search_URI;
context.testCase.testSteps["GetAtomXMLSearch2"].setPropertyValue("EndPoint",Search_URI_2);

if(html_search)
html_search =  MakeProperURL(html_search);
context.testCase.testSteps["Html_Search"].setPropertyValue("EndPoint",html_search);
//log.info html_search;]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetAtomXMLSearch" id="4d2a6c1a-ca5d-4f18-b5e0-dcd9736bcb98"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4d8e21ef-20cb-434d-a896-b7dad27fa133" name="GetAtomXMLSearch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/publication/qa/search/*/?pw=&amp;c=&amp;tag=&amp;filters=&amp;start=&amp;end=</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e97b0b94-029a-4d37-a807-e6ead9f189a0" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetAtomXMLSearch2" id="6d7aafa0-14c2-48a2-9dbd-b29335314137"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="9cbf4c2a-844a-4d63-aa07-2dfa3108ca68" name="GetAtomXMLSearch2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/search?q=*</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f3c84c02-4495-4fa5-ba3b-21c7d80d5315" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int isEqual(String url_previous,String url_current)
{
	if(url_previous.size()!=url_current.size())
	return 0;
	for(int i=0;i&lt;url_previous.size();i++)
	{
		if(url_previous[i]!=url_current[i])
		return 0;
	}
	return 1;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	String url_previous = context.expand('${GetAtomXMLSearch#EndPoint}');
	String url_current = context.expand('${GetAtomXMLSearch2#EndPoint}');
	if(isEqual(url_previous,url_current))
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Search URL should respond with 200.");
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Search URL is not Available.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Html_Search" id="baf115ed-5798-4d28-a5d2-e2395932b3b7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2100b047-699b-4ef1-894e-aa05ccc996d5" name="Html_Search" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/publication/qa/search/*/?pw=&amp;c=&amp;format=html&amp;filters=&amp;start=&amp;end=</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="ccbb1f7f-bc12-4778-ad6e-3e255a8799b5" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetTagSearchDescription" id="459b1a55-8188-4ddb-b484-f264b643f9ae"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="fa5b09a5-b81e-4efd-900d-bce6d3a5d82b" name="GetTagSearchDescription" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/open-search/tag-search-description.xml</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="555013a9-afd0-46dd-94d0-d1f40425807a" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetTagSearchURLS" id="a846eb74-acb3-4305-a242-deec5b7fb1aa"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetTagSearchDescription#Response}');
def xml = new XmlParser().parseText(response);

def Xhtml_search;
def Xml_search;

int URL_FOUND=0;

int isEqualString(String a,String b)
{
	if(a.size()!=b.size())
	return 0;
	for(int i=0;i<a.size();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
String MakeProperURL(String url)
{
	int st,ed;
	String res="";
	String SearchTerms = "searchTerms";
	String tmp="";
	int FOUND=0;
	for(int i=0;i<url.size();i++)
	{
		if(url[i]=='{')
		{
			st=i;
			for(int j=st;j<url.size();j++)
			{
				if(url[j]=='}')
				{
					ed = j;
					break;
				}
			}
			tmp = url.substring(st,ed+1);
			tmp2 = url.substring(st+1,ed);//excluding {}
			if(isEqualString(tmp2,SearchTerms))
			{
				url = url.replaceAll("searchTerms","*");
				//log.info url;
			}
			else
			{
				url = url.replaceAll(tmp2,"");
				//log.info url;
			}
		}
	}
	tmp="";
	for(int i=0;i<url.size();i++)
	{
		if(url[i]!='{' && url[i]!='}')
		tmp=tmp+url[i];
	}
	for(int i=0;i<tmp.size();i++)
	{
		if(tmp[i]=='?')
		{
			if(FOUND==0)
			{
				res=res+tmp[i];
				FOUND=1;
			}
			else
			continue;
			
		}
		else
		res=res+tmp[i];
	}
	return res;
}
xml.breadthFirst().
each {
		if(it.name().toString().contains("Url") && it.@'type'=="application/atom+xml")
			Xml_search = it.@'template';
		if(it.name().toString().contains("Url") && it.@'type'=="application/xhtml+xml")
			Xhtml_search = it.@'template';
	};

if(Xml_search)
Xml_search =  MakeProperURL(Xml_search);
context.testCase.testSteps["GetTagXMLSearch"].setPropertyValue("EndPoint",Xml_search);

if(Xhtml_search)
Xhtml_search =  MakeProperURL(Xhtml_search);
context.testCase.testSteps["GetTagXHTMLSearch"].setPropertyValue("EndPoint",Xhtml_search);

log.info Xhtml_search;
log.info Xml_search;]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetTagXMLSearch" id="0f138483-dab8-49d9-b3f1-ba8b72a00d5a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="7676e331-f0d9-4462-acf6-96298a651099" name="GetTagXMLSearch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/classification/tag/search?*=*&amp;tagStructures=&amp;parent=&amp;=&amp;pageSize=</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="ad57d6e0-e08b-46a0-85b5-66cfa0e66f21" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetTagXHTMLSearch" id="b8c92e2e-77df-49bf-b98b-113ebffa04a6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c9c96d53-9838-4dca-aae8-b9bb855be407" name="GetTagXHTMLSearch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/publication/qa/tag/*</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="644e06ab-39d0-4020-92c8-63fba63ec732" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ae4de1c9-353e-45a0-8176-41100a0d8f66" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FilterSearchAllTypes" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="eab5daa2-8da5-4544-8c4e-9e8605eba79a"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="e9d3989a-f12f-4ed6-a273-6d8fe5d54ad8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-alpha:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseWebservices" id="f17ef012-0ff9-4aa3-b623-03d58ed43e74"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Tag_Search_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="search-description")
		{
			Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}

		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-search-description")
		{
			Tag_Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

context.testCase.testSteps["GetSearchDescription"].setPropertyValue("EndPoint",Search_URI);
//context.testCase.testSteps["GetTagSearchDescription"].setPropertyValue("EndPoint",Tag_Search_URI);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSearchDescription" id="f413c5df-1666-471f-adb3-6a09939ff39f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetSearchDescription" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-alpha:8080/webservice/open-search/content-search-description.xml</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetEndPoints" id="be4343b3-8937-40e6-bef6-19f484f9f5fe"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSearchDescription#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Search_URI_2;

def html_search;
int URL_FOUND=0;

int isEqualString(String a,String b)
{
	if(a.size()!=b.size())
	return 0;
	for(int i=0;i<a.size();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
String MakeProperURL(String url)
{
	int st,ed;
	String res="";
	String SearchTerms = "searchTerms";
	String tmp="";
	int FOUND=0;
	for(int i=0;i<url.size();i++)
	{
		if(url[i]=='{')
		{
			st=i;
			for(int j=st;j<url.size();j++)
			{
				if(url[j]=='}')
				{
					ed = j;
					break;
				}
			}
			tmp = url.substring(st,ed+1);
			tmp2 = url.substring(st+1,ed);//excluding {}
			if(isEqualString(tmp2,SearchTerms))
			{
				url = url.replaceAll("searchTerms","*");
			}
			else
			{
				url = url.replaceAll(tmp2,"");
			}
		}
	}
	tmp="";
	for(int i=0;i<url.size();i++)
	{
		if(url[i]!='{' && url[i]!='}')
		tmp=tmp+url[i];
	}
	for(int i=0;i<tmp.size();i++)
	{
		if(tmp[i]=='?')
		{
			if(FOUND==0)
			{
				res=res+tmp[i];
				FOUND=1;
			}
			else
			continue;
			
		}
		else
		res=res+tmp[i];
	}
	return res;
}
xml.breadthFirst().
each {
		if(it.name().toString().contains("Url") &&
		it.@'type'=="application/atom+xml"
		)
		{
			if(URL_FOUND==0)
			{
				Search_URI = it.@'template';
				URL_FOUND=1;
			}
			else
			Search_URI_2 = it.@'template';
		}
		if(it.name().toString().contains("Url") &&
		it.@'type'=="text/html")
		html_search = it.@'template';
	};

if(Search_URI)
{
	Search_URI =  MakeProperURL(Search_URI);
}

context.testCase.testSteps["FilterSearchStory"].setPropertyValue("Endpoint",Search_URI);
context.testCase.testSteps["FilterSearchPicture"].setPropertyValue("Endpoint",Search_URI);
context.testCase.testSteps["FilterSearchSection"].setPropertyValue("Endpoint",Search_URI);
context.testCase.testSteps["FilterSearchPerson"].setPropertyValue("Endpoint",Search_URI);
context.testCase.testSteps["FilterSearchTags"].setPropertyValue("Endpoint",Search_URI);
context.testCase.testSteps["FilterSearchGallery"].setPropertyValue("Endpoint",Search_URI);
context.testCase.testSteps["FilterSearchVideo"].setPropertyValue("Endpoint",Search_URI);
context.testCase.testSteps["FilterSearchAudio"].setPropertyValue("Endpoint",Search_URI);
context.testCase.testSteps["FilterSearchKeyFrame"].setPropertyValue("Endpoint",Search_URI);

context.testCase.testSteps["FilterSearchList"].setPropertyValue("Endpoint",Search_URI);


]]></script></con:config></con:testStep><con:testStep type="groovy" name="GetModelURI" id="395c7edc-f533-4fd7-9f35-94af57fb288e"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}

context.testCase.testSteps["GetModel"].setPropertyValue("Endpoint",content_description_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModel" id="8423e7e2-55ca-4040-af68-de9253e1b7ac"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="169c2de7-955e-4c6f-ade1-e1335084c24b" name="GetModel" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-alpha:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5653be1f-a84f-4f1d-bc28-cadbaae1b3ac" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseModels" id="1f4ff26a-6ba2-4e2d-b314-bf92664e2d8c"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetModel#Response}');
def models = new String [1000];
int startIndex = response.indexOf("http:");
int lastIndex = response.indexOf("\n");
int idx = 0;
def endPoint;
while(response.size())
{
	if(lastIndex>=0 && lastIndex>=startIndex)
	{
		models[idx]=response.substring(startIndex,lastIndex);
		//log.info models[idx];
		models[idx] = models[idx].trim();
		idx+=1;
	}
	if(lastIndex<response.size())
	{
		response = response.substring(lastIndex+1);
		startIndex = response.indexOf("http:");
		lastIndex = response.indexOf("\n");
	}
}

for(int i=0;i<idx;i++)
{
	if(models[i].contains("story"))
	{
		endPoint = context.expand('${FilterSearchStory#EndPoint}');
		if(endPoint.contains("&filters="))
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		else
		endPoint = endPoint+"&filters="+models[i];
		context.testCase.testSteps["FilterSearchStory"].setPropertyValue("EndPoint",endPoint);
	}
	if(models[i].contains("picture"))
	{
		endPoint = context.expand('${FilterSearchPicture#EndPoint}');
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["FilterSearchPicture"].setPropertyValue("EndPoint",endPoint);
	}
	if(models[i].contains("section"))
	{
		endPoint = context.expand('${FilterSearchSection#EndPoint}');
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["FilterSearchSection"].setPropertyValue("EndPoint",endPoint);
	}
	if(models[i].contains("person"))
	{
		endPoint = context.expand('${FilterSearchPerson#EndPoint}');
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["FilterSearchPerson"].setPropertyValue("EndPoint",endPoint);
	}
	if(models[i].contains("list"))
	{
		endPoint = context.expand('${FilterSearchList#EndPoint}');
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["FilterSearchList"].setPropertyValue("EndPoint",endPoint);
	}
	if(models[i].contains("tag"))
	{
		endPoint = context.expand('${FilterSearchTags#EndPoint}');
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["FilterSearchTags"].setPropertyValue("EndPoint",endPoint);
	}
	if(models[i].contains("gallery"))
	{
		endPoint = context.expand('${FilterSearchGallery#EndPoint}');
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["FilterSearchGallery"].setPropertyValue("EndPoint",endPoint);
	}
	if(models[i].contains("video") && models[i].contains("Ingest"))
	{
		endPoint = context.expand('${FilterSearchVideo#EndPoint}');
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["FilterSearchVideo"].setPropertyValue("EndPoint",endPoint);
	}
	if(models[i].contains("audio") && models[i].contains("Ingest"))
	{
		endPoint = context.expand('${FilterSearchAudio#EndPoint}');
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["FilterSearchAudio"].setPropertyValue("EndPoint",endPoint);
	}
	if(models[i].contains("keyframe"))
	{
		endPoint = context.expand('${FilterSearchKeyFrame#EndPoint}');
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["FilterSearchKeyFrame"].setPropertyValue("EndPoint",endPoint);
	}
}]]></script></con:config></con:testStep><con:testStep type="httprequest" name="FilterSearchStory" id="03a447c0-5bdb-4088-b0dd-e79fcc7fdc22"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="FilterSearchStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-alpha:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-alpha:8080/webservice/escenic/publication/qa/model/content-type/story&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f05ae613-602d-424e-adb2-5ad80bee8f83" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;
int maxItemPerPage(response)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	return itemsPerPage.toInteger();
}
int GetTotalResult(response)
{
	def xml = new XmlParser().parseText(response);
	def totalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		totalResult=it.value()[0];
	};
	return totalResult.toInteger();
}
int checkResult(response,String type)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage = 0;
	int count = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total=it.value()[0];
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	xml.breadthFirst().each
	{
		if(it.@rel=="http://www.escenic.com/types/relation/model" &amp;&amp; it.@title.toString().contains(type))
		count+=1;
	};
	return count;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${FilterSearchStory#Response}');
	def type="story";
	int totalResult = GetTotalResult(response);
	int result = checkResult(response,type);
	int itemsPerPage = maxItemPerPage(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked "+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked"+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+(itemsPerPage-result).toString()+" results found are not "+type+" type.");
	log.info itemsPerPage;
	log.info result;
	if(result==itemsPerPage)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="FilterSearchPicture" id="7af3a029-80bc-40f7-8b23-c4fc45f1fc16"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="FilterSearchPicture" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-alpha:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-alpha:8080/webservice/escenic/publication/qa/model/content-type/picture&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="788e11c1-9654-4609-9c4a-f51bb7a8b0cf" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;
int maxItemPerPage(response)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	return itemsPerPage.toInteger();
}
int GetTotalResult(response)
{
	def xml = new XmlParser().parseText(response);
	def totalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		totalResult=it.value()[0];
	};
	return totalResult.toInteger();
}
int checkResult(response,String type)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage = 0;
	int count = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total=it.value()[0];
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	xml.breadthFirst().each
	{
		if(it.@rel=="http://www.escenic.com/types/relation/model" &amp;&amp; it.@title.toString().contains(type))
		count+=1;
	};
	return count;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${FilterSearchPicture#Response}');
	def type="picture";
	int totalResult = GetTotalResult(response);
	int result = checkResult(response,type);
	int itemsPerPage = maxItemPerPage(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked "+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked"+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+(itemsPerPage-result).toString()+" results found are not "+type+" type.");
	log.info itemsPerPage;
	log.info result;
	if(result==itemsPerPage)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="FilterSearchSection" id="ac929d45-5cf8-4de7-ab8d-b2cc279bf1e3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="FilterSearchSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-alpha:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-alpha:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="65c12735-9227-47ae-bbdc-e2fd7cd258cd" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;
int maxItemPerPage(response)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	return itemsPerPage.toInteger();
}
int GetTotalResult(response)
{
	def xml = new XmlParser().parseText(response);
	def totalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		totalResult=it.value()[0];
	};
	return totalResult.toInteger();
}
int checkResult(response,String type)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage = 0;
	int count = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total=it.value()[0];
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	xml.breadthFirst().each
	{
		if(it.@rel=="http://www.escenic.com/types/relation/model" &amp;&amp; it.@title.toString().contains(type))
		count+=1;
	};
	return count;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${FilterSearchSection#Response}');
	def type="section";
	int totalResult = GetTotalResult(response);
	int result = checkResult(response,type);
	int itemsPerPage = maxItemPerPage(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked "+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked"+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+(itemsPerPage-result).toString()+" results found are not "+type+" type.");
	log.info itemsPerPage;
	log.info result;
	if(result==itemsPerPage)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="FilterSearchPerson" id="01d19b55-a926-4e70-b6ba-829efeaa140c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="FilterSearchPerson" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-alpha:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-alpha:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.person&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9f084d54-8d1f-4007-8930-7866d20d3700" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;
int maxItemPerPage(response)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	return itemsPerPage.toInteger();
}
int GetTotalResult(response)
{
	def xml = new XmlParser().parseText(response);
	def totalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		totalResult=it.value()[0];
	};
	return totalResult.toInteger();
}
int checkResult(response,String type)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage = 0;
	int count = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total=it.value()[0];
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	xml.breadthFirst().each
	{
		if(it.@rel=="http://www.escenic.com/types/relation/model" &amp;&amp; it.@title.toString().contains(type))
		count+=1;
	};
	return count;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${FilterSearchPerson#Response}');
	def type="person";
	int totalResult = GetTotalResult(response);
	int result = checkResult(response,type);
	int itemsPerPage = maxItemPerPage(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked "+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked"+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+(itemsPerPage-result).toString()+" results found are not "+type+" type.");
	log.info itemsPerPage;
	log.info result;
	if(result==itemsPerPage)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="FilterSearchList" id="5df03a80-31d4-4dbc-9fee-2236a751ae4a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="FilterSearchList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-alpha:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-alpha:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.list&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9e7780c0-e817-4931-8917-ec07a96ac10b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;
int maxItemPerPage(response)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	return itemsPerPage.toInteger();
}
int GetTotalResult(response)
{
	def xml = new XmlParser().parseText(response);
	def totalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		totalResult=it.value()[0];
	};
	return totalResult.toInteger();
}
int checkResult(response,String type)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage = 0;
	int count = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total=it.value()[0];
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	xml.breadthFirst().each
	{
		if(it.@rel=="http://www.escenic.com/types/relation/model" &amp;&amp; it.@title.toString().contains(type))
		count+=1;
	};
	return count;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${FilterSearchList#Response}');
	def type="list";
	int totalResult = GetTotalResult(response);
	int result = checkResult(response,type);
	int itemsPerPage = maxItemPerPage(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked "+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked"+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+(itemsPerPage-result).toString()+" results found are not "+type+" type.");
	log.info itemsPerPage;
	log.info result;
	if(result==itemsPerPage)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="FilterSearchTags" id="90ebf4ed-0e87-4dae-8c17-3bad35495ddf"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="FilterSearchTags" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-alpha:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-alpha:8080/webservice/escenic/publication/qa/model/content-type/widget_tags&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="12b41d0b-1155-4e7d-b157-eed7a98a5a4e" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;
int maxItemPerPage(response)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	return itemsPerPage.toInteger();
}
int GetTotalResult(response)
{
	def xml = new XmlParser().parseText(response);
	def totalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		totalResult=it.value()[0];
	};
	return totalResult.toInteger();
}
int checkResult(response,String type)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage = 0;
	int count = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total=it.value()[0];
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	xml.breadthFirst().each
	{
		if(it.@rel=="http://www.escenic.com/types/relation/model" &amp;&amp; it.@title.toString().contains(type))
		count+=1;
	};
	return count;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${FilterSearchTags#Response}');
	def type="tag";
	int totalResult = GetTotalResult(response);
	int result = checkResult(response,type);
	int itemsPerPage = maxItemPerPage(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked "+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked"+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+(itemsPerPage-result).toString()+" results found are not "+type+" type.");
	log.info itemsPerPage;
	log.info result;
	if(result==itemsPerPage)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="FilterSearchGallery" id="46dd8a7a-33d1-4a88-bf2a-d8d2c0020e56"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="FilterSearchGallery" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-alpha:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-alpha:8080/webservice/escenic/publication/qa/model/content-type/gallery&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="98d12ee6-3b09-46cb-b7ad-22376d9cba73" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;
int maxItemPerPage(response)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	return itemsPerPage.toInteger();
}
int GetTotalResult(response)
{
	def xml = new XmlParser().parseText(response);
	def totalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		totalResult=it.value()[0];
	};
	return totalResult.toInteger();
}
int checkResult(response,String type)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage = 0;
	int count = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total=it.value()[0];
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	xml.breadthFirst().each
	{
		if(it.@rel=="http://www.escenic.com/types/relation/model" &amp;&amp; it.@title.toString().contains(type))
		count+=1;
	};
	return count;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${FilterSearchGallery#Response}');
	def type="gallery";
	int totalResult = GetTotalResult(response);
	int result = checkResult(response,type);
	int itemsPerPage = maxItemPerPage(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked "+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked"+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+(itemsPerPage-result).toString()+" results found are not "+type+" type.");
	log.info itemsPerPage;
	log.info result;
	if(result==itemsPerPage)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="FilterSearchVideo" id="fe40fb14-c891-4431-85f9-a14dfdc955c8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="FilterSearchVideo" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-alpha:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-alpha:8080/webservice/escenic/publication/qa/model/content-type/videoIngest&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="094ec307-7844-4846-a510-2e2eebd7ea36" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;
int maxItemPerPage(response)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	return itemsPerPage.toInteger();
}
int GetTotalResult(response)
{
	def xml = new XmlParser().parseText(response);
	def totalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		totalResult=it.value()[0];
	};
	return totalResult.toInteger();
}
int checkResult(response,String type)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage = 0;
	int count = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total=it.value()[0];
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	xml.breadthFirst().each
	{
		if(it.@rel=="http://www.escenic.com/types/relation/model" &amp;&amp; it.@title.toString().contains(type))
		count+=1;
	};
	return count;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${FilterSearchVideo#Response}');
	def type="video";
	int totalResult = GetTotalResult(response);
	int result = checkResult(response,type);
	int itemsPerPage = maxItemPerPage(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked "+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked"+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+(itemsPerPage-result).toString()+" results found are not "+type+" type.");
	log.info itemsPerPage;
	log.info result;
	if(result==itemsPerPage)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="FilterSearchAudio" id="c5cf8f42-0754-48e1-8b46-c087e56483d9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="FilterSearchAudio" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-alpha:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-alpha:8080/webservice/escenic/publication/qa/model/content-type/audioIngest&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="561c40de-84a7-407f-b792-2018d52951e2" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;
int maxItemPerPage(response)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	return itemsPerPage.toInteger();
}
int GetTotalResult(response)
{
	def xml = new XmlParser().parseText(response);
	def totalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		totalResult=it.value()[0];
	};
	return totalResult.toInteger();
}
int checkResult(response,String type)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage = 0;
	int count = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total=it.value()[0];
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	xml.breadthFirst().each
	{
		if(it.@rel=="http://www.escenic.com/types/relation/model" &amp;&amp; it.@title.toString().contains(type))
		count+=1;
	};
	return count;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${FilterSearchAudio#Response}');
	def type="audio";
	int totalResult = GetTotalResult(response);
	int result = checkResult(response,type);
	int itemsPerPage = maxItemPerPage(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked "+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked"+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+(itemsPerPage-result).toString()+" results found are not "+type+" type.");
	log.info itemsPerPage;
	log.info result;
	if(result==itemsPerPage)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="FilterSearchKeyFrame" id="97e1371e-a4c6-44f8-a030-a24fbeb12265"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="FilterSearchKeyFrame" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-alpha:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-alpha:8080/webservice/escenic/publication/qa/model/content-type/keyframe&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="56b40a2e-ea26-4118-8518-a3f6cd57ea29" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;
int maxItemPerPage(response)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	return itemsPerPage.toInteger();
}
int GetTotalResult(response)
{
	def xml = new XmlParser().parseText(response);
	def totalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		totalResult=it.value()[0];
	};
	return totalResult.toInteger();
}
int checkResult(response,String type)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage = 0;
	int count = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total=it.value()[0];
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	xml.breadthFirst().each
	{
		if(it.@rel=="http://www.escenic.com/types/relation/model" &amp;&amp; it.@title.toString().contains(type))
		count+=1;
	};
	return count;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${FilterSearchKeyFrame#Response}');
	def type="keyframe";
	int totalResult = GetTotalResult(response);
	int result = checkResult(response,type);
	int itemsPerPage = maxItemPerPage(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked "+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked"+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+(itemsPerPage-result).toString()+" results found are not "+type+" type.");
	log.info itemsPerPage;
	log.info result;
	if(result==itemsPerPage)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7e709e04-5010-4509-b138-4a9712c54b6d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SearchByID-Stoy" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Description" id="78a8350e-b7b2-4853-b738-d59a8cfbcd15"><con:settings/><con:config><script>/*

 Does not work for Engine 5.7 versions as filter in the url needs to be added 
 using hard coding for search Picture.
 If filter= *** is added in search url then the testcase can be used for 
 Engine 5.7 versions.
 
 */</script></con:config></con:testStep><con:testStep type="groovy" name="SetCredentials" id="cafbc628-4665-4c0e-9065-e8ae22275f27"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="2082910b-7aeb-416c-99cd-0e050633e629"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseWebservices" id="7f887161-a489-42d9-95cc-c69fb90edc99"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Tag_Search_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="search-description")
		{
			Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}

		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-search-description")
		{
			Tag_Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

context.testCase.testSteps["GetSearchDescription"].setPropertyValue("EndPoint",Search_URI);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSearchDescription" id="f2cbecd0-26d0-487b-bf5d-83a18f44bfc7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetSearchDescription" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/open-search/content-search-description.xml</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetSectionURIForContent" id="828bcc7e-9ca7-42db-84c2-3d7942ea07cc"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="groovy" name="GetModelURI" id="a00e51c3-c61f-4896-80fc-b1c052280eb8"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}

context.testCase.testSteps["GetModel"].setPropertyValue("Endpoint",content_description_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModel" id="3eed3835-898d-41c8-9eff-37c2584aa42b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="169c2de7-955e-4c6f-ade1-e1335084c24b" name="GetModel" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5653be1f-a84f-4f1d-bc28-cadbaae1b3ac" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="fd04b3fe-6797-41bc-855d-9809258c5cea"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModel#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="2de214b4-940b-4bfe-910e-7a51bd33672e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="e9dbeeeb-c8bb-4047-aadb-fd7da3cbe0f3" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="2ac38892-bcdf-4605-80e5-2d741ecf1499" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="delay" name="Delay" id="0616a1aa-e6cf-4a47-aa77-3e775409abea"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="groovy" name="SetWithSearchID" id="4b720899-89c0-4d3e-917c-8a9029bfcd5c"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSearchDescription#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Search_URI_2;

def html_search;
int URL_FOUND=0;

int isEqualString(String a,String b)
{
	if(a.size()!=b.size())
	return 0;
	for(int i=0;i<a.size();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
String MakeProperURL(String url)
{
	int st,ed;
	String res="";
	String SearchTerms = "searchTerms";
	String tmp="";
	int FOUND=0;
	for(int i=0;i<url.size();i++)
	{
		if(url[i]=='{')
		{
			st=i;
			for(int j=st;j<url.size();j++)
			{
				if(url[j]=='}')
				{
					ed = j;
					break;
				}
			}
			tmp = url.substring(st,ed+1);
			tmp2 = url.substring(st+1,ed);//excluding {}
			if(isEqualString(tmp2,SearchTerms))
			{
				url = url.replaceAll("searchTerms","*");
				//log.info url;
			}
			else
			{
				url = url.replaceAll(tmp2,"");
				//log.info url;
			}
		}
	}
	tmp="";
	for(int i=0;i<url.size();i++)
	{
		if(url[i]!='{' && url[i]!='}')
		tmp=tmp+url[i];
	}
	for(int i=0;i<tmp.size();i++)
	{
		if(tmp[i]=='?')
		{
			if(FOUND==0)
			{
				res=res+tmp[i];
				FOUND=1;
			}
			else
			continue;
			
		}
		else
		res=res+tmp[i];
	}
	return res;
}

int GetContentID()
{
	def header = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders;
	def location = header["Location"][0];
	def arr = location.findAll(/\d+/)*.toInteger();
	return arr[1].toInteger();
}
xml.breadthFirst().
each {
		if(it.name().toString().contains("Url") &&
		it.@'type'=="application/atom+xml"
		)
		{
			if(URL_FOUND==0)
			{
				Search_URI = it.@'template';
				URL_FOUND=1;
			}
			else
			Search_URI_2 = it.@'template';
		}
		if(it.name().toString().contains("Url") &&
		it.@'type'=="text/html")
		html_search = it.@'template';
	};

if(Search_URI)
{
	Search_URI =  MakeProperURL(Search_URI);
	def id = GetContentID();
	int idx =  Search_URI.indexOf('*');
	def searchstory = "(id:\"article:"+id+"\")";
	def searchAll = "(id:\"article:"+id+"\" OR id:\"com.escenic.person:"+id+"\" OR id:\"com.escenic.section:"+id+"\")";
	def SearchByIDStoryURI = Search_URI.substring(0,idx) + searchstory + Search_URI.substring(idx+1);
	context.testCase.testSteps["SearchByIDStory"].setPropertyValue("EndPoint",SearchByIDStoryURI);

	def SearchByID = Search_URI.substring(0,idx) + searchAll + Search_URI.substring(idx+1);
	context.testCase.testSteps["SearchByID"].setPropertyValue("EndPoint",SearchByID);
}
]]></script></con:config></con:testStep><con:testStep type="httprequest" name="SearchByIDStory" id="a5881751-391a-4dad-bcd6-95ba741f7127"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4d8e21ef-20cb-434d-a896-b7dad27fa133" name="SearchByIDStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/publication/qa/search/(id:"article:1635")/?pw=&amp;c=&amp;tag=&amp;filters=&amp;start=&amp;end=</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e97b0b94-029a-4d37-a807-e6ead9f189a0" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int isEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
int IsFound(response)
{
	def xml = new XmlParser().parseText(response);
	def total;
	def header = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders;
	def url = header["Location"][0];
	int count=0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total = it.value()[0];
	};
	if(total.toInteger()!=1)
	return 0;
	def foundurl;
	xml.breadthFirst().each
	{
		if(it.@rel=="self")
		{
			foundurl = it.@href;
			if(isEqual(url,foundurl)==1)
			count+=1;
		}
	};
	return count;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${SearchByIDStory#Response}');
	int result = IsFound(response);
	def type = " Article ";
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Found one"+type+"with the same ID.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+result+type+"with the same ID.");
	if(result==1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else if(result==0)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","No"+type+"Found");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchByID" id="d48fbd31-ec4f-42f0-9bd2-17c0e2ad4aa6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4d8e21ef-20cb-434d-a896-b7dad27fa133" name="SearchByID" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/publication/qa/search/(id:"article:1635" OR id:"com.escenic.person:1635" OR id:"com.escenic.section:1635")/?pw=&amp;c=&amp;tag=&amp;filters=&amp;start=&amp;end=</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e97b0b94-029a-4d37-a807-e6ead9f189a0" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int isEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
int IsFound(response)
{
	def xml = new XmlParser().parseText(response);
	def header = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders;
	def url = header["Location"][0];
	def foundurl;
	int count=0;
	
	xml.breadthFirst().each
	{
		if(it.@rel=="self")
		{
			foundurl = it.@href;
			if(isEqual(url,foundurl)==1)
			count+=1;
		}
	};
	return count;
}

int FindTotalResult(response)
{
	def xml = new XmlParser().parseText(response);
	def total;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total = it.value()[0];
	};
	return total.toInteger();
}
/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${SearchByID#Response}');
	int result = IsFound(response);
	def type = " Article ";
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Found at least one Content with the same ID.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+result+" Content with the same ID.");
	if(result==1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+result+type);
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else if(result==0)
	{
		int res = FindTotalResult(response);
		if(res==0)
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","No Content Found");
		else
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",res+" Content Found but no"+type);
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+result+type+"with the same ID.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="11472c7e-2eed-4204-b605-653ee7828cc7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SearchByID-Person" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Description" id="ebb0c4aa-9b0a-4790-bea3-8f43a4752336"><con:settings/><con:config><script>/*

 Does not work for Engine 5.7 versions as filter in the url needs to be added 
 using hard coding for search Picture.
 If filter= *** is added in search url then the testcase can be used for 
 Engine 5.7 versions.
 
 */</script></con:config></con:testStep><con:testStep type="groovy" name="SetCredentials" id="eb1dea5e-8937-4bf2-981c-b7a663c3eabd"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="d2e6cb1b-0d1b-459e-9987-3c71887c018b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="490e665d-16b7-4aa4-be94-ee668fdcb6fd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="59f3ba6c-3fa2-46c6-b16b-7de701d8e80c" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetSearchDescriptionURI" id="c4ba5782-3528-4011-96f3-1698bc458ddc"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Tag_Search_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="search-description")
		{
			Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}

		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-search-description")
		{
			Tag_Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

context.testCase.testSteps["GetSearchDescription"].setPropertyValue("EndPoint",Search_URI);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSearchDescription" id="74dc3fc2-8449-49d3-8845-3e1b5d6b0d49"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetSearchDescription" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/open-search/content-search-description.xml</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="d5246c2a-32ae-4524-a7e4-847c8a4e276c"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}




context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
//context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info content_description_uri;
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="11c10f1d-fb52-4a9a-bab2-08511e73fe19"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="1e9136b0-ff85-4e1a-8080-0b8d43fe119b" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="2865c1c1-7a99-48ad-9c99-441512e784ee" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetPersonModelAndWebservice" id="ce823e33-451b-4b1d-997d-3113428dc9bb"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');
def content_description_uri,root_section_uri,model,tmp;
int Found=0;
def str1;
def str2;
def person_model;
def person_create_webservice;

while(Found==0)
{
	int Index_newLine = response.indexOf("\n");
	str1 = response.substring(0,Index_newLine);
	if(Index_newLine&lt;response.size())
	{
		str2 = response.substring(Index_newLine+1);
	}
	if(str1.contains("person"))
	{
		person_model = str1;
		break;
	}
	response=str2;
}
person_model = person_model.substring(person_model.indexOf("http"));
person_model = person_model.substring(0 , person_model.indexOf("person")+"person".length());

log.info person_model;

def request = context.expand('${CreatePerson#Request}');
def person_xml = new XmlParser().parseText(request);
person_xml.breadthFirst().each
{
	if(it.@model!=null)
	{
		it.@model=person_model;
		log.info it.@model+"edit";
	}
}

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(person_xml);
def newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreatePerson"].setPropertyValue("Request",newXml);

response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("person") &amp;&amp; Found==0)
		{
			person_create_webservice = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!person_create_webservice.contains(host))
{
	int index = person_create_webservice.indexOf("webservice")+"webservice".length();
	person_create_webservice = host + person_create_webservice.substring(index);
}
context.testCase.testSteps["CreatePerson"].setPropertyValue("EndPoint",person_create_webservice);
log.info person_create_webservice;</script></con:config></con:testStep><con:testStep type="groovy" name="SetPersonName" id="ffe2875f-f325-42ed-a4fd-de3440c89817"><con:settings/><con:config><script>String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+"-"+calendar.get(Calendar.MINUTE)+"-"+calendar.get(Calendar.SECOND)+"-"+calendar.get(Calendar.MILLISECOND);
	return time;
}

String surname = "QA-Admin-Test-"+GetTime();
def request = context.expand('${CreatePerson#Request}');
def person_xml = new XmlParser().parseText(request);
person_xml.breadthFirst().each
{
	if(it.@name.toString().contains("surName"))
	it.'vdf:value'[0].value=surname;
}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(person_xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["CreatePerson"].setPropertyValue("Request",newXml);

log.info GetTime();</script></con:config></con:testStep><con:testStep type="httprequest" name="CreatePerson" id="899aa558-adf5-4ef6-bbb8-214048e5247b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="b77e8f63-c621-42f3-9602-e3fbc331665a" name="CreatePerson" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/publication/qa/escenic/person</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.person">
      <vdf:field name="com.escenic.username"/>
      <vdf:field name="com.escenic.firstName">
        <vdf:value>personname</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.surName">
        <vdf:value>QA-Admin-Test-13-15-11-325</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.occupation"/>
      <vdf:field name="com.escenic.address"/>
      <vdf:field name="com.escenic.postalcode"/>
      <vdf:field name="com.escenic.city"/>
      <vdf:field name="com.escenic.phonework"/>
      <vdf:field name="com.escenic.phonemobile"/>
      <vdf:field name="com.escenic.phoneprivate"/>
      <vdf:field name="com.escenic.emailaddress"/>
    </vdf:payload>
  </content>
  <title type="text">QA-Admin-Test</title>
  <summary type="text">QA-Admin-Test</summary>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://host-ip-address/webservice/escenic/publication/qa/" title="test"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8fbdecdb-027a-46fb-a215-538958d2d1ef" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetWithSearchID" id="65313738-7b70-4b76-965a-ca0327300239"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSearchDescription#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Search_URI_2;

def html_search;
int URL_FOUND=0;

int isEqualString(String a,String b)
{
	if(a.size()!=b.size())
	return 0;
	for(int i=0;i<a.size();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
String MakeProperURL(String url)
{
	int st,ed;
	String res="";
	String SearchTerms = "searchTerms";
	String tmp="";
	int FOUND=0;
	for(int i=0;i<url.size();i++)
	{
		if(url[i]=='{')
		{
			st=i;
			for(int j=st;j<url.size();j++)
			{
				if(url[j]=='}')
				{
					ed = j;
					break;
				}
			}
			tmp = url.substring(st,ed+1);
			tmp2 = url.substring(st+1,ed);//excluding {}
			if(isEqualString(tmp2,SearchTerms))
			{
				url = url.replaceAll("searchTerms","*");
				//log.info url;
			}
			else
			{
				url = url.replaceAll(tmp2,"");
				//log.info url;
			}
		}
	}
	tmp="";
	for(int i=0;i<url.size();i++)
	{
		if(url[i]!='{' && url[i]!='}')
		tmp=tmp+url[i];
	}
	for(int i=0;i<tmp.size();i++)
	{
		if(tmp[i]=='?')
		{
			if(FOUND==0)
			{
				res=res+tmp[i];
				FOUND=1;
			}
			else
			continue;
			
		}
		else
		res=res+tmp[i];
	}
	return res;
}

int GetContentID()
{
	def header = context.testCase.testSteps["CreatePerson"].testRequest.response.responseHeaders;
	def location = header["Location"][0];
	def arr = location.findAll(/\d+/)*.toInteger();
	return arr[1].toInteger();
}
xml.breadthFirst().
each {
		if(it.name().toString().contains("Url") &&
		it.@'type'=="application/atom+xml"
		)
		{
			if(URL_FOUND==0)
			{
				Search_URI = it.@'template';
				URL_FOUND=1;
			}
			else
			Search_URI_2 = it.@'template';
		}
		if(it.name().toString().contains("Url") &&
		it.@'type'=="text/html")
		html_search = it.@'template';
	};

if(Search_URI)
{
	Search_URI =  MakeProperURL(Search_URI);
	def id = GetContentID();
	int idx =  Search_URI.indexOf('*');
	def searchperson = "(id:\"com.escenic.person:"+id+"\")";
	def searchAll = "(id:\"article:"+id+"\" OR id:\"com.escenic.person:"+id+"\" OR id:\"com.escenic.section:"+id+"\")";
	def SearchByIDStoryURI = Search_URI.substring(0,idx) + searchperson + Search_URI.substring(idx+1);
	context.testCase.testSteps["SearchByIDPerson"].setPropertyValue("EndPoint",SearchByIDStoryURI);

	def SearchByID = Search_URI.substring(0,idx) + searchAll + Search_URI.substring(idx+1);
	context.testCase.testSteps["SearchByID"].setPropertyValue("EndPoint",SearchByID);
}
]]></script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="6bc5c33f-fa1b-4a93-919c-dd0b1fa10f5a"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="httprequest" name="SearchByIDPerson" id="fa8caa80-0327-4dd5-a607-44c895e301c8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4359d5cf-e4db-471f-92b9-18c0aa142074" name="SearchByIDPerson" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/publication/qa/search/(id:"com.escenic.person:109")/?pw=&amp;c=&amp;tag=&amp;filters=&amp;start=&amp;end=</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="cf5fa933-1f96-496a-94e9-43ebd9ab3b7b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int isEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
int IsFound(response)
{
	def xml = new XmlParser().parseText(response);
	def total;
	def header = context.testCase.testSteps["CreatePerson"].testRequest.response.responseHeaders;
	def url = header["Location"][0];
	int count=0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total = it.value()[0];
	};
	if(total.toInteger()!=1)
	return 0;
	def foundurl;
	xml.breadthFirst().each
	{
		if(it.@rel=="self")
		{
			foundurl = it.@href;
			if(isEqual(url,foundurl)==1)
			count+=1;
		}
	};
	return count;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${SearchByIDPerson#Response}');
	int result = IsFound(response);
	def type = " Person ";
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Found one"+type+"with the same ID.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+result+type+"with the same ID.");
	if(result==1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else if(result==0)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","No"+type+"Found");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchByID" id="df6e2ac2-d857-4b07-9594-d348d33ea746"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4d8e21ef-20cb-434d-a896-b7dad27fa133" name="SearchByID" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/publication/qa/search/(id:"article:109" OR id:"com.escenic.person:109" OR id:"com.escenic.section:109")/?pw=&amp;c=&amp;tag=&amp;filters=&amp;start=&amp;end=</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e97b0b94-029a-4d37-a807-e6ead9f189a0" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int isEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
int IsFound(response)
{
	def xml = new XmlParser().parseText(response);
	def header = context.testCase.testSteps["CreatePerson"].testRequest.response.responseHeaders;
	def url = header["Location"][0];
	def foundurl;
	int count=0;
	
	xml.breadthFirst().each
	{
		if(it.@rel=="self")
		{
			foundurl = it.@href;
			if(isEqual(url,foundurl)==1)
			count+=1;
		}
	};
	return count;
}

int FindTotalResult(response)
{
	def xml = new XmlParser().parseText(response);
	def total;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total = it.value()[0];
	};
	return total.toInteger();
}
/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${SearchByID#Response}');
	int result = IsFound(response);
	def type = " Person ";
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Found at least one Content with the same ID.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+result+" Content with the same ID.");
	if(result==1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+result+type);
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else if(result==0)
	{
		int res = FindTotalResult(response);
		if(res==0)
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","No Content Found");
		else
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",res+" Content Found but no"+type);
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+result+type+"with the same ID.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7c7469b7-814b-4ef0-b2f6-a4af4e144a94" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SearchByID-Section" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Description" id="fad4ccdb-b1a9-48db-8ea3-34d23a4252e5"><con:settings/><con:config><script>/*

 Does not work for Engine 5.7 versions as filter in the url needs to be added 
 using hard coding for search Picture.
 If filter= *** is added in search url then the testcase can be used for 
 Engine 5.7 versions.
 
 */</script></con:config></con:testStep><con:testStep type="groovy" name="SetCredentials" id="dacc4421-d570-4cc6-963c-cdcadfbf5895"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="812c74d1-6634-4c2d-9fd3-8fb34d2e2c75"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetSearchDescriptionURI" id="ef4b282a-f6bb-4f71-8736-de274c6056b4"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Tag_Search_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="search-description")
		{
			Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}

		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-search-description")
		{
			Tag_Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

context.testCase.testSteps["GetSearchDescription"].setPropertyValue("EndPoint",Search_URI);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSearchDescription" id="8505c335-d9dc-4682-82ab-0166f9ea76c2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetSearchDescription" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/open-search/content-search-description.xml</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="5f142872-8b84-495f-8063-6aa2dc99c6f2"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri,root_section_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='content-descriptions' && FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}


FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=="sections" && it.@'href'.toString().contains("section") && FOUND==0)
		{
			root_section_uri = it.@'href';
			FOUND=1;
		}
	};


if(root_section_uri.toString().contains("webservice"))
{
	int index = root_section_uri.indexOf("webservice")+"webservice".length();
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + root_section_uri.substring(index);
}
else
{
	root_section_uri = context.expand('${GetWebservices#EndPoint}') + "/" + root_section_uri;
}

context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info root_section_uri;

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="8b0f87ab-77bf-45ba-ab64-97d2527e9f11"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String section_create_uri;

xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'content-descriptor'.toString().contains("com.escenic.section"))
		{
			section_create_uri = it.@'href';
		}
	};

if(section_create_uri.contains("webservice"))
{
	int index = section_create_uri.indexOf("webservice/")+"webservice/".length();
	String tmp = section_create_uri.substring(index);
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+tmp;
}
else
{
	section_create_uri = context.expand('${GetWebservices#EndPoint}')+"/"+section_create_uri;
}

log.info section_create_uri;
context.testCase.testSteps["CreateSection"].setPropertyValue("EndPoint",section_create_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="dec54f1b-c2fe-47a2-9b64-4704f6a07c78"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="89f3374a-4d7a-403a-8978-1be254470247" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f8ac8e37-aaee-4f4d-8c20-c147552108e5" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get_Section_URI" id="a4a8bf09-326c-48c5-a95f-cf859dbdb74a"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);

String SectionUri,SectionPage;
int FOUND=0;
xml.breadthFirst().each{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="down" &amp;&amp; FOUND==0)
	{
		SectionUri = it.@'href';
		FOUND=1;
	}
};
log.info SectionUri;
//log.info SectionPage;
context.testCase.testSteps["GetSection"].setPropertyValue("EndPoint",SectionUri);
//context.testCase.testSteps["GetSectionPage"].setPropertyValue("EndPoint",SectionPage);

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSection" id="eb4d9822-cf58-4b53-9bb9-a22bc2efff46"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0fd5647e-3818-466c-9f0a-63cd37486d32" name="GetSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section/1/subsections</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bc19ae35-57b6-4aea-a197-c9d1b0e41195" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="83b9e7b7-cf59-48d7-98a6-52420ffff390"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/content-descriptions/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfSection" id="77eadbd7-0e50-4852-a6b3-f4795848c4c1"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

int index = response.indexOf("section")+"section".length();
response = response.toString().substring(0,index);

for(int i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}

model = model.substring(model.indexOf('http'));

/*
 *Edit Section Content 
 */
def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

String sectionname = "SectionTest"+GetTime();

section_xml.'content'.'vdf:payload'.each{
	for(int i=0;i&lt;it.'field'.@'name'.size();i++)
	{
		if(it.'field'.@'name'[i]=="com.escenic.sectionName")
		it.'field'.'value'[0].value()[0]=sectionname;
	}
	};
	
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetSubSectionURI" id="15624a6c-d381-4c5a-9442-0a128ae02664"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSection#Response}');
def xml = new XmlParser().parseText(response);
def xml2 = new XmlParser().parseText(response);
def ParentSection_URI;
def SubSection_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &&
			it.@'rel'=="down" && FOUND==0 &&
			it.@'href'.toString().contains("subsections"))
		{
			SubSection_URI = it.@'href';FOUND=1;
		}
	};

FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry") && FOUND==0)
		{
			ParentSection_URI = it.'id'[0].value()[0].toString();
			FOUND=1;
		}
	};
log.info ParentSection_URI+" ; "+SubSection_URI;

def request = context.expand('${CreateSection#Request}');
def section_xml = new XmlParser().parseText(request);
section_xml.'link'.@'href'= ParentSection_URI;

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(section_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps["CreateSection"].setPropertyValue("Request",newXml);

]]></script></con:config></con:testStep><con:testStep type="httprequest" name="CreateSection" id="fa422ac3-2237-4ec4-a4c3-7bbd220601ee"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2393b9d0-ab36-4f48-9de7-c463d94d87fa" name="CreateSection" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/section</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-belinda:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section">
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionName">
        <value>SectionTest17:20:54:50</value>
      </field>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.uniqueName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.directoryName"/>
      <field xmlns="http://www.vizrt.com/types" name="com.escenic.sectionURI"/>
    </vdf:payload>
  </content>
  <reference xmlns="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2d17397e-f3d4-4149-bb1d-6a9f5fc81b9d"/>
  <link href="http://qa-belinda:8080/webservice/escenic/section/2" type="application/atom+xml; type=entry" rel="http://www.vizrt.com/types/relation/parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="9aa4c5ef-b475-4e6d-a94c-fbcb7300aadb" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetWithSearchID" id="8fd0eb20-6f64-46da-9889-3f7a95fd0b67"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSearchDescription#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Search_URI_2;

def html_search;
int URL_FOUND=0;

int isEqualString(String a,String b)
{
	if(a.size()!=b.size())
	return 0;
	for(int i=0;i<a.size();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
String MakeProperURL(String url)
{
	int st,ed;
	String res="";
	String SearchTerms = "searchTerms";
	String tmp="";
	int FOUND=0;
	for(int i=0;i<url.size();i++)
	{
		if(url[i]=='{')
		{
			st=i;
			for(int j=st;j<url.size();j++)
			{
				if(url[j]=='}')
				{
					ed = j;
					break;
				}
			}
			tmp = url.substring(st,ed+1);
			tmp2 = url.substring(st+1,ed);//excluding {}
			if(isEqualString(tmp2,SearchTerms))
			{
				url = url.replaceAll("searchTerms","*");
				//log.info url;
			}
			else
			{
				url = url.replaceAll(tmp2,"");
				//log.info url;
			}
		}
	}
	tmp="";
	for(int i=0;i<url.size();i++)
	{
		if(url[i]!='{' && url[i]!='}')
		tmp=tmp+url[i];
	}
	for(int i=0;i<tmp.size();i++)
	{
		if(tmp[i]=='?')
		{
			if(FOUND==0)
			{
				res=res+tmp[i];
				FOUND=1;
			}
			else
			continue;
			
		}
		else
		res=res+tmp[i];
	}
	return res;
}

int GetContentID()
{
	def header = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
	def location = header["Location"][0];
	def arr = location.findAll(/\d+/)*.toInteger();
	return arr[1].toInteger();
}
xml.breadthFirst().
each {
		if(it.name().toString().contains("Url") &&
		it.@'type'=="application/atom+xml"
		)
		{
			if(URL_FOUND==0)
			{
				Search_URI = it.@'template';
				URL_FOUND=1;
			}
			else
			Search_URI_2 = it.@'template';
		}
		if(it.name().toString().contains("Url") &&
		it.@'type'=="text/html")
		html_search = it.@'template';
	};

if(Search_URI)
{
	Search_URI =  MakeProperURL(Search_URI);
	def id = GetContentID();
	int idx =  Search_URI.indexOf('*');
	def searchsection = "(id:\"com.escenic.section:"+id+"\")";
	def searchAll = "(id:\"article:"+id+"\" OR id:\"com.escenic.person:"+id+"\" OR id:\"com.escenic.section:"+id+"\")";
	def SearchByIDSectionURI = Search_URI.substring(0,idx) + searchsection + Search_URI.substring(idx+1);
	context.testCase.testSteps["SearchByIDSection"].setPropertyValue("EndPoint",SearchByIDSectionURI);

	def SearchByID = Search_URI.substring(0,idx) + searchAll + Search_URI.substring(idx+1);
	context.testCase.testSteps["SearchByID"].setPropertyValue("EndPoint",SearchByID);
	
	context.testCase.testSteps["Properties"].setPropertyValue("SEARCHID",id.toString().trim());
}
]]></script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="0b179934-f8b5-44f5-876e-6722db922ad3"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>SEARCHID</con:name><con:value>473</con:value></con:property><con:property><con:name>Username</con:name><con:value>qa_admin</con:value></con:property><con:property><con:name>Password</con:name><con:value>admin</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="delay" name="Delay" id="21b0e23a-d8aa-4ec4-bfe3-e665b7bf72f2"><con:settings/><con:config><delay>60000</delay></con:config></con:testStep><con:testStep type="httprequest" name="SearchByIDSection" id="64c88ef8-4bcb-4eb7-972e-860f3f5199f7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4359d5cf-e4db-471f-92b9-18c0aa142074" name="SearchByIDSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/search/(id:"com.escenic.section:473")/?pw=&amp;c=&amp;tag=&amp;filters=&amp;start=&amp;end=</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="cf5fa933-1f96-496a-94e9-43ebd9ab3b7b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int isEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
int IsFound(response)
{
	def xml = new XmlParser().parseText(response);
	def total;
	def header = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
	def url = header["Location"][0];
	int count=0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total = it.value()[0];
	};
	if(total.toInteger()!=1)
	return 0;
	def foundurl;
	xml.breadthFirst().each
	{
		if(it.@rel=="self")
		{
			foundurl = it.@href;
			if(isEqual(url,foundurl)==1)
			count+=1;
		}
	};
	return count;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);

String SearchIDName = context.testCase.testSteps["Properties"].getPropertyValue("SEARCHID");
if(httpStatusCode=="200")
{
	def response = context.expand('${SearchByIDSection#Response}');
	int result = IsFound(response);
	def type = " Section ";
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Found one"+type+"with the same ID : "+SearchIDName.toString());
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+result+type+"with the same ID : "+SearchIDName.toString());
	if(result==1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else if(result==0)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","No"+type+"Found with ID : "+SearchIDName.toString());
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchByID" id="69b3e8c8-aee8-4026-87d8-5c0d53f1c7c4"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4d8e21ef-20cb-434d-a896-b7dad27fa133" name="SearchByID" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/publication/qa/search/(id:"article:473" OR id:"com.escenic.person:473" OR id:"com.escenic.section:473")/?pw=&amp;c=&amp;tag=&amp;filters=&amp;start=&amp;end=</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="e97b0b94-029a-4d37-a807-e6ead9f189a0" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int isEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
int IsFound(response)
{
	def xml = new XmlParser().parseText(response);
	def header = context.testCase.testSteps["CreateSection"].testRequest.response.responseHeaders;
	def url = header["Location"][0];
	def foundurl;
	int count=0;
	
	xml.breadthFirst().each
	{
		if(it.@rel=="self")
		{
			foundurl = it.@href;
			if(isEqual(url,foundurl)==1)
			count+=1;
		}
	};
	return count;
}

int FindTotalResult(response)
{
	def xml = new XmlParser().parseText(response);
	def total;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total = it.value()[0];
	};
	return total.toInteger();
}
/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);

String SearchIDName = context.testCase.testSteps["Properties"].getPropertyValue("SEARCHID");

if(httpStatusCode=="200")
{
	def response = context.expand('${SearchByID#Response}');
	int result = IsFound(response);
	def type = " Section ";
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Found at least one Content with the same ID : "+SearchIDName);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+result+" Content with the same ID : "+SearchIDName);
	if(result==1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+result+type+" with ID : "+SearchIDName);
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else if(result==0)
	{
		int res = FindTotalResult(response);
		if(res==0)
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","No Content Found with ID : "+SearchIDName);
		else
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",res+" Content Found but no"+type+" with ID : "+SearchIDName);
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+result+type+"with the same ID : "+SearchIDName);
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="38610365-dc08-4a54-a277-7278325ae6b2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AddMoreInfoToSearchResultEntry-VF-6662" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="51acc991-23c0-4daf-9be7-865771006260"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="e84c06fb-dcb3-4fa3-bf69-38f76d96456b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseWebservices" id="5f366284-9e74-467d-9aa6-e5d1130b30fa"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Tag_Search_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="search-description")
		{
			Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}

		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-search-description")
		{
			Tag_Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

context.testCase.testSteps["GetSearchDescription"].setPropertyValue("EndPoint",Search_URI);
//context.testCase.testSteps["GetTagSearchDescription"].setPropertyValue("EndPoint",Tag_Search_URI);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSearchDescription" id="e52c01fa-44fa-488d-9ab5-80562bdc87d3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetSearchDescription" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/open-search/content-search-description.xml</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetEndPoints" id="fcf1f8dd-efe5-4ef4-8e78-69631fe5ca78"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSearchDescription#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Search_URI_2;

def html_search;
int URL_FOUND=0;

int isEqualString(String a,String b)
{
	if(a.size()!=b.size())
	return 0;
	for(int i=0;i<a.size();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
String MakeProperURL(String url)
{
	int st,ed;
	String res="";
	String SearchTerms = "searchTerms";
	String tmp="";
	int FOUND=0;
	for(int i=0;i<url.size();i++)
	{
		if(url[i]=='{')
		{
			st=i;
			for(int j=st;j<url.size();j++)
			{
				if(url[j]=='}')
				{
					ed = j;
					break;
				}
			}
			tmp = url.substring(st,ed+1);
			tmp2 = url.substring(st+1,ed);//excluding {}
			if(isEqualString(tmp2,SearchTerms))
			{
				url = url.replaceAll("searchTerms","*");
			}
			else
			{
				url = url.replaceAll(tmp2,"");
			}
		}
	}
	tmp="";
	for(int i=0;i<url.size();i++)
	{
		if(url[i]!='{' && url[i]!='}')
		tmp=tmp+url[i];
	}
	for(int i=0;i<tmp.size();i++)
	{
		if(tmp[i]=='?')
		{
			if(FOUND==0)
			{
				res=res+tmp[i];
				FOUND=1;
			}
			else
			continue;
			
		}
		else
		res=res+tmp[i];
	}
	return res;
}
xml.breadthFirst().
each {
		if(it.name().toString().contains("Url") &&
		it.@'type'=="application/atom+xml"
		)
		{
			if(URL_FOUND==0)
			{
				Search_URI = it.@'template';
				URL_FOUND=1;
			}
			else
			Search_URI_2 = it.@'template';
		}
		if(it.name().toString().contains("Url") &&
		it.@'type'=="text/html")
		html_search = it.@'template';
	};

if(Search_URI)
{
	Search_URI =  MakeProperURL(Search_URI);
}

context.testCase.testSteps["SearchResultForStory"].setPropertyValue("Endpoint",Search_URI);
context.testCase.testSteps["SearchResultForPicture"].setPropertyValue("Endpoint",Search_URI);
context.testCase.testSteps["SearchResultForSection"].setPropertyValue("Endpoint",Search_URI);
context.testCase.testSteps["SearchResultForPerson"].setPropertyValue("Endpoint",Search_URI);
context.testCase.testSteps["SearchResultForVideo"].setPropertyValue("Endpoint",Search_URI);
context.testCase.testSteps["SearchResultForAudio"].setPropertyValue("Endpoint",Search_URI);
context.testCase.testSteps["SearchResultForTags"].setPropertyValue("Endpoint",Search_URI);
context.testCase.testSteps["SearchResultForGallery"].setPropertyValue("Endpoint",Search_URI);
context.testCase.testSteps["SearchResultForKeyFrame"].setPropertyValue("Endpoint",Search_URI);
context.testCase.testSteps["SearchResultForList"].setPropertyValue("Endpoint",Search_URI);
log.info Search_URI;]]></script></con:config></con:testStep><con:testStep type="groovy" name="GetModelURI" id="f9cc7a42-3b93-4c50-b985-d7700d5cfc55"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}

context.testCase.testSteps["GetModel"].setPropertyValue("Endpoint",content_description_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModel" id="7484b4a8-b794-45a2-beb0-2e77c167e2e0"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="169c2de7-955e-4c6f-ade1-e1335084c24b" name="GetModel" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5653be1f-a84f-4f1d-bc28-cadbaae1b3ac" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseModels" id="ddf6c12f-e267-41a9-a5aa-e13409a2977b"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetModel#Response}');
def models = new String [1000];
int startIndex = response.indexOf("http:");
int lastIndex = response.indexOf("\n");
int idx = 0;
def endPoint;
String tmp;
while(response.size())
{
	if(lastIndex>=0 && lastIndex>=startIndex)
	{
		models[idx]=response.substring(startIndex,lastIndex);
		//log.info models[idx];
		models[idx] = models[idx].trim();
		idx+=1;
	}
	if(lastIndex<response.size())
	{
		response = response.substring(lastIndex+1);
		startIndex = response.indexOf("http:");
		lastIndex = response.indexOf("\n");
	}
}

for(int i=0;i<idx;i++)
{
	if(models[i].contains("story"))
	{
		endPoint = context.expand('${SearchResultForStory#EndPoint}');
		if(endPoint.contains("&filters="))
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		else
		endPoint = endPoint+"&filters="+models[i];
		context.testCase.testSteps["SearchResultForStory"].setPropertyValue("EndPoint",endPoint);
	}
	if(models[i].contains("picture"))
	{
		endPoint = context.expand('${SearchResultForPicture#EndPoint}');
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["SearchResultForPicture"].setPropertyValue("EndPoint",endPoint);
	}
	if(models[i].contains("section"))
	{
		endPoint = context.expand('${SearchResultForSection#EndPoint}');
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["SearchResultForSection"].setPropertyValue("EndPoint",endPoint);
	}
	if(models[i].contains("person"))
	{
		endPoint = context.expand('${SearchResultForPerson#EndPoint}');
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["SearchResultForPerson"].setPropertyValue("EndPoint",endPoint);
	}
	if(models[i].contains("list"))
	{
		endPoint = context.expand('${SearchResultForList#EndPoint}');
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["SearchResultForList"].setPropertyValue("EndPoint",endPoint);
	}
	if(models[i].contains("tag"))
	{
		endPoint = context.expand('${SearchResultForTags#EndPoint}');
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["SearchResultForTags"].setPropertyValue("EndPoint",endPoint);
	}
	if(models[i].contains("gallery"))
	{
		endPoint = context.expand('${SearchResultForGallery#EndPoint}');
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["SearchResultForGallery"].setPropertyValue("EndPoint",endPoint);
	}
	if(models[i].contains("video") && models[i].contains("Ingest"))
	{
		endPoint = context.expand('${SearchResultForVideo#EndPoint}');
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["SearchResultForVideo"].setPropertyValue("EndPoint",endPoint);
	}
	if(models[i].contains("audio") && models[i].contains("Ingest"))
	{
		endPoint = context.expand('${SearchResultForAudio#EndPoint}');
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["SearchResultForAudio"].setPropertyValue("EndPoint",endPoint);
	}
	if(models[i].contains("keyframe"))
	{
		endPoint = context.expand('${SearchResultForKeyFrame#EndPoint}');
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["SearchResultForKeyFrame"].setPropertyValue("EndPoint",endPoint);
	}
}]]></script></con:config></con:testStep><con:testStep type="httprequest" name="SearchResultForStory" id="5fd6edde-6eaa-44b8-a688-6bb89408c017"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="SearchResultForStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-beta:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/story&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f05ae613-602d-424e-adb2-5ad80bee8f83" name="Script Assertion"><con:configuration><scriptText><![CDATA[def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;

int CheckInformation(response)
{
	def xml = new XmlParser().parseText(response);
	int PublicationFound = 0;
	int ModelFound = 0;
	int HomeFound = 0;
	int SummaryFound = 0;
	int FOUND = 0;
	def MissingLinks="";
	def TotalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("opensearch") && it.name().toString().contains("totalResults"))
		{
			TotalResult = it.value()[0];
		}
	};
	if(TotalResult.toInteger()==0)
	return -1;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry") && FOUND==0 && it.children().size()>0)
		{
			FOUND=1;
			for(s in it.children())
			{
				if(s.@rel=="http://www.vizrt.com/types/relation/publication")
				PublicationFound=1;
				if(s.@rel=="http://www.escenic.com/types/relation/model")
				ModelFound=1;
				if(s.@rel=="http://www.vizrt.com/types/relation/home-section")
				HomeFound=1;
				if(s.@rel=="http://www.escenic.com/types/relation/summary-model")
				SummaryFound=1;
			}
		}
	};

	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	
	if(FOUND==0)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries do not contain Publication, content-type, home-section and summary links.");
		return 0;
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);
		if(PublicationFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="Publication";
			else
			MissingLinks+=",Publication";
		}
		if(ModelFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="content-type";
			else
			MissingLinks+=",content-type";
		}
		if(SummaryFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="summary";
			else
			MissingLinks+=",summary";
		}
		if(HomeFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="home-section";
			else
			MissingLinks+=",home-section";
		}
		if(PublicationFound+ModelFound+SummaryFound+HomeFound<4)
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries do not contain "+MissingLinks+" links.");	
		}
		return PublicationFound+ModelFound+SummaryFound+HomeFound;
	}
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${SearchResultForStory#Response}');
	//def type="story";
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Entries contain Publication, content-type, home-section and summary links.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries contain Publication, content-type, home-section and summary links.");
	int result = CheckInformation(response);
	log.info result;
	if(result==4)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else if(result==-1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","No Contents of this type found. Add Content First.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}]]></scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchResultForPicture" id="9094f00a-5efe-44f1-9ccd-412b7656588e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="SearchResultForPicture" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-beta:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/picture&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="788e11c1-9654-4609-9c4a-f51bb7a8b0cf" name="Script Assertion"><con:configuration><scriptText><![CDATA[def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;

int CheckInformation(response)
{
	def xml = new XmlParser().parseText(response);
	int PublicationFound = 0;
	int ModelFound = 0;
	int HomeFound = 0;
	int SummaryFound = 0;
	int FOUND = 0;
	def MissingLinks="";
	def TotalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("opensearch") && it.name().toString().contains("totalResults"))
		{
			TotalResult = it.value()[0];
		}
	};
	if(TotalResult.toInteger()==0)
	return -1;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry") && FOUND==0 && it.children().size()>0)
		{
			FOUND=1;
			for(s in it.children())
			{
				if(s.@rel=="http://www.vizrt.com/types/relation/publication")
				PublicationFound=1;
				if(s.@rel=="http://www.escenic.com/types/relation/model")
				ModelFound=1;
				if(s.@rel=="http://www.vizrt.com/types/relation/home-section")
				HomeFound=1;
				if(s.@rel=="http://www.escenic.com/types/relation/summary-model")
				SummaryFound=1;
			}
		}
	};

	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	
	if(FOUND==0)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries do not contain Publication, content-type, home-section and summary links.");
		return 0;
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);
		if(PublicationFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="Publication";
			else
			MissingLinks+=",Publication";
		}
		if(ModelFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="content-type";
			else
			MissingLinks+=",content-type";
		}
		if(SummaryFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="summary";
			else
			MissingLinks+=",summary";
		}
		if(HomeFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="home-section";
			else
			MissingLinks+=",home-section";
		}
		if(PublicationFound+ModelFound+SummaryFound+HomeFound<4)
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries do not contain "+MissingLinks+" links.");	
		}
		return PublicationFound+ModelFound+SummaryFound+HomeFound;
	}
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${SearchResultForPicture#Response}');
	//def type="story";
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Entries contain Publication, content-type, home-section and summary links.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries contain Publication, content-type, home-section and summary links.");
	int result = CheckInformation(response);
	log.info result;
	if(result==4)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else if(result==-1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","No Contents of this type found. Add Content First.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}]]></scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchResultForSection" id="3ddc89f7-f010-46fd-891a-89e509b1158e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="SearchResultForSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-beta:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.section&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="65c12735-9227-47ae-bbdc-e2fd7cd258cd" name="Script Assertion"><con:configuration><scriptText><![CDATA[def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;

int CheckInformation(response)
{
	def xml = new XmlParser().parseText(response);
	int PublicationFound = 0;
	int ModelFound = 0;
	int HomeFound = 0;
	int SummaryFound = 0;
	int FOUND = 0;
	def MissingLinks="";
	def TotalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("opensearch") && it.name().toString().contains("totalResults"))
		{
			TotalResult = it.value()[0];
		}
	};
	if(TotalResult.toInteger()==0)
	return -1;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry") && FOUND==0 && it.children().size()>0)
		{
			FOUND=1;
			for(s in it.children())
			{
				if(s.@rel=="http://www.vizrt.com/types/relation/publication")
				PublicationFound=1;
				if(s.@rel=="http://www.escenic.com/types/relation/model")
				ModelFound=1;
				if(s.@rel=="http://www.escenic.com/types/relation/summary-model")
				SummaryFound=1;
			}
		}
	};

	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	
	if(FOUND==0)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries do not contain Publication, content-type and summary links.");
		return 0;
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);
		if(PublicationFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="Publication";
			else
			MissingLinks+=",Publication";
		}
		if(ModelFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="content-type";
			else
			MissingLinks+=",content-type";
		}
		if(SummaryFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="summary";
			else
			MissingLinks+=",summary";
		}
		
		if(PublicationFound+ModelFound+SummaryFound+HomeFound<3)
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries do not contain "+MissingLinks+" links.");	
		}
		return PublicationFound+ModelFound+SummaryFound;
	}
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${SearchResultForSection#Response}');
	//def type="story";
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Entries contain Publication, content-type and summary links.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries contain Publication, content-type and summary links.");
	int result = CheckInformation(response);
	log.info result;
	if(result==3)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else if(result==-1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","No Contents of this type found. Add Content First.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}]]></scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchResultForPerson" id="bff9cd99-269d-4258-ba24-1ec44454a4e3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="SearchResultForPerson" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-beta:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.person&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9f084d54-8d1f-4007-8930-7866d20d3700" name="Script Assertion"><con:configuration><scriptText><![CDATA[def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;

int CheckInformation(response)
{
	def xml = new XmlParser().parseText(response);
	int PublicationFound = 0;
	int ModelFound = 0;
	int HomeFound = 0;
	int SummaryFound = 0;
	int FOUND = 0;
	def MissingLinks="";
	def TotalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("opensearch") && it.name().toString().contains("totalResults"))
		{
			TotalResult = it.value()[0];
		}
	};
	log.info TotalResult;
	if(TotalResult.toInteger()==0)
	return -1;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry") && FOUND==0 && it.children().size()>0)
		{
			FOUND=1;
			for(s in it.children())
			{
				if(s.@rel=="http://www.vizrt.com/types/relation/publication")
				PublicationFound=1;
				if(s.@rel=="http://www.escenic.com/types/relation/model")
				ModelFound=1;
				if(s.@rel=="http://www.escenic.com/types/relation/summary-model")
				SummaryFound=1;
			}
		}
	};

	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	
	if(FOUND==0)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries do not contain Publication, content-type, home-section and summary links.");
		return 0;
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);
		if(PublicationFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="Publication";
			else
			MissingLinks+=",Publication";
		}
		if(ModelFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="content-type";
			else
			MissingLinks+=",content-type";
		}
		if(SummaryFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="summary";
			else
			MissingLinks+=",summary";
		}
		
		if(PublicationFound+ModelFound+SummaryFound<3)
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries do not contain "+MissingLinks+" links.");	
		}
		return PublicationFound+ModelFound+SummaryFound;
	}
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${SearchResultForPerson#Response}');
	//def type="story";
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Entries contain Publication, content-type and summary links.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries contain Publication, content-type and summary links.");
	int result = CheckInformation(response);
	log.info result;
	if(result==3)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else if(result==-1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","No Contents of this type found. Add Content First.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}]]></scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchResultForVideo" id="1b2f199f-9154-441b-9c41-b343bfb21387" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="SearchResultForVideo" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-beta:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/videoIngest&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="094ec307-7844-4846-a510-2e2eebd7ea36" name="Script Assertion"><con:configuration><scriptText><![CDATA[def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;

int CheckInformation(response)
{
	def xml = new XmlParser().parseText(response);
	int PublicationFound = 0;
	int ModelFound = 0;
	int HomeFound = 0;
	int SummaryFound = 0;
	int FOUND = 0;
	def MissingLinks="";
	def TotalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("opensearch") && it.name().toString().contains("totalResults"))
		{
			TotalResult = it.value()[0];
		}
	};
	if(TotalResult.toInteger()==0)
	return -1;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry") && FOUND==0 && it.children().size()>0)
		{
			FOUND=1;
			for(s in it.children())
			{
				if(s.@rel=="http://www.vizrt.com/types/relation/publication")
				PublicationFound=1;
				if(s.@rel=="http://www.escenic.com/types/relation/model")
				ModelFound=1;
				if(s.@rel=="http://www.vizrt.com/types/relation/home-section")
				HomeFound=1;
				if(s.@rel=="http://www.escenic.com/types/relation/summary-model")
				SummaryFound=1;
			}
		}
	};

	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	
	if(FOUND==0)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries do not contain Publication, content-type, home-section and summary links.");
		return 0;
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);
		if(PublicationFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="Publication";
			else
			MissingLinks+=",Publication";
		}
		if(ModelFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="content-type";
			else
			MissingLinks+=",content-type";
		}
		if(SummaryFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="summary";
			else
			MissingLinks+=",summary";
		}
		if(HomeFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="home-section";
			else
			MissingLinks+=",home-section";
		}
		if(PublicationFound+ModelFound+SummaryFound+HomeFound<4)
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries do not contain "+MissingLinks+" links.");	
		}
		return PublicationFound+ModelFound+SummaryFound+HomeFound;
	}
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${SearchResultForVideo#Response}');
	//def type="story";
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Entries contain Publication, content-type, home-section and summary links.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries contain Publication, content-type, home-section and summary links.");
	int result = CheckInformation(response);
	log.info result;
	if(result==4)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else if(result==-1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","No Contents of this type found. Add Content First.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}]]></scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchResultForAudio" id="5612028a-1a3b-4df0-b9c4-b4ae4d4c7345" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="SearchResultForAudio" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-beta:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/audioIngest&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="561c40de-84a7-407f-b792-2018d52951e2" name="Script Assertion"><con:configuration><scriptText><![CDATA[def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;

int CheckInformation(response)
{
	def xml = new XmlParser().parseText(response);
	int PublicationFound = 0;
	int ModelFound = 0;
	int HomeFound = 0;
	int SummaryFound = 0;
	int FOUND = 0;
	def MissingLinks="";
	def TotalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("opensearch") && it.name().toString().contains("totalResults"))
		{
			TotalResult = it.value()[0];
		}
	};
	if(TotalResult.toInteger()==0)
	return -1;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry") && FOUND==0 && it.children().size()>0)
		{
			FOUND=1;
			for(s in it.children())
			{
				if(s.@rel=="http://www.vizrt.com/types/relation/publication")
				PublicationFound=1;
				if(s.@rel=="http://www.escenic.com/types/relation/model")
				ModelFound=1;
				if(s.@rel=="http://www.vizrt.com/types/relation/home-section")
				HomeFound=1;
				if(s.@rel=="http://www.escenic.com/types/relation/summary-model")
				SummaryFound=1;
			}
		}
	};

	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	
	if(FOUND==0)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries do not contain Publication, content-type, home-section and summary links.");
		return 0;
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);
		if(PublicationFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="Publication";
			else
			MissingLinks+=",Publication";
		}
		if(ModelFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="content-type";
			else
			MissingLinks+=",content-type";
		}
		if(SummaryFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="summary";
			else
			MissingLinks+=",summary";
		}
		if(HomeFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="home-section";
			else
			MissingLinks+=",home-section";
		}
		if(PublicationFound+ModelFound+SummaryFound+HomeFound<4)
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries do not contain "+MissingLinks+" links.");	
		}
		return PublicationFound+ModelFound+SummaryFound+HomeFound;
	}
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${SearchResultForAudio#Response}');
	//def type="story";
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Entries contain Publication, content-type, home-section and summary links.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries contain Publication, content-type, home-section and summary links.");
	int result = CheckInformation(response);
	log.info result;
	if(result==4)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else if(result==-1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","No Contents of this type found. Add Content First.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}]]></scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchResultForTags" id="6c2b17f9-70a0-4cf4-ae6a-8729a6781522"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="SearchResultForTags" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-beta:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/widget_tags&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="12b41d0b-1155-4e7d-b157-eed7a98a5a4e" name="Script Assertion"><con:configuration><scriptText><![CDATA[def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;

int CheckInformation(response)
{
	def xml = new XmlParser().parseText(response);
	int PublicationFound = 0;
	int ModelFound = 0;
	int HomeFound = 0;
	int SummaryFound = 0;
	int FOUND = 0;
	def MissingLinks="";
	def TotalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("opensearch") && it.name().toString().contains("totalResults"))
		{
			TotalResult = it.value()[0];
		}
	};
	if(TotalResult.toInteger()==0)
	return -1;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry") && FOUND==0 && it.children().size()>0)
		{
			FOUND=1;
			for(s in it.children())
			{
				if(s.@rel=="http://www.vizrt.com/types/relation/publication")
				PublicationFound=1;
				if(s.@rel=="http://www.escenic.com/types/relation/model")
				ModelFound=1;
				if(s.@rel=="http://www.vizrt.com/types/relation/home-section")
				HomeFound=1;
				if(s.@rel=="http://www.escenic.com/types/relation/summary-model")
				SummaryFound=1;
			}
		}
	};

	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	
	if(FOUND==0)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries do not contain Publication, content-type, home-section and summary links.");
		return 0;
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);
		if(PublicationFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="Publication";
			else
			MissingLinks+=",Publication";
		}
		if(ModelFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="content-type";
			else
			MissingLinks+=",content-type";
		}
		if(SummaryFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="summary";
			else
			MissingLinks+=",summary";
		}
		if(HomeFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="home-section";
			else
			MissingLinks+=",home-section";
		}
		if(PublicationFound+ModelFound+SummaryFound+HomeFound<4)
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries do not contain "+MissingLinks+" links.");	
		}
		return PublicationFound+ModelFound+SummaryFound+HomeFound;
	}
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${SearchResultForTags#Response}');
	//def type="story";
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Entries contain Publication, content-type, home-section and summary links.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries contain Publication, content-type, home-section and summary links.");
	int result = CheckInformation(response);
	log.info result;
	if(result==4)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else if(result==-1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","No Contents of this type found. Add Content First.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}]]></scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchResultForGallery" id="5a26bf40-0063-4469-a333-661a584d31ce"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="SearchResultForGallery" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-beta:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/gallery&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="98d12ee6-3b09-46cb-b7ad-22376d9cba73" name="Script Assertion"><con:configuration><scriptText><![CDATA[def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;

int CheckInformation(response)
{
	def xml = new XmlParser().parseText(response);
	int PublicationFound = 0;
	int ModelFound = 0;
	int HomeFound = 0;
	int SummaryFound = 0;
	int FOUND = 0;
	def MissingLinks="";
	def TotalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("opensearch") && it.name().toString().contains("totalResults"))
		{
			TotalResult = it.value()[0];
		}
	};
	if(TotalResult.toInteger()==0)
	return -1;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry") && FOUND==0 && it.children().size()>0)
		{
			FOUND=1;
			for(s in it.children())
			{
				if(s.@rel=="http://www.vizrt.com/types/relation/publication")
				PublicationFound=1;
				if(s.@rel=="http://www.escenic.com/types/relation/model")
				ModelFound=1;
				if(s.@rel=="http://www.vizrt.com/types/relation/home-section")
				HomeFound=1;
				if(s.@rel=="http://www.escenic.com/types/relation/summary-model")
				SummaryFound=1;
			}
		}
	};

	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	
	if(FOUND==0)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries do not contain Publication, content-type, home-section and summary links.");
		return 0;
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);
		if(PublicationFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="Publication";
			else
			MissingLinks+=",Publication";
		}
		if(ModelFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="content-type";
			else
			MissingLinks+=",content-type";
		}
		if(SummaryFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="summary";
			else
			MissingLinks+=",summary";
		}
		if(HomeFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="home-section";
			else
			MissingLinks+=",home-section";
		}
		if(PublicationFound+ModelFound+SummaryFound+HomeFound<4)
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries do not contain "+MissingLinks+" links.");	
		}
		return PublicationFound+ModelFound+SummaryFound+HomeFound;
	}
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${SearchResultForGallery#Response}');
	//def type="story";
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Entries contain Publication, content-type, home-section and summary links.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries contain Publication, content-type, home-section and summary links.");
	int result = CheckInformation(response);
	log.info result;
	if(result==4)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else if(result==-1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","No Contents of this type found. Add Content First.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}]]></scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchResultForKeyFrame" id="2caa68ae-c50d-4e7a-a3b1-0bd1469ad442" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="SearchResultForKeyFrame" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-beta:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/keyframe&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="56b40a2e-ea26-4118-8518-a3f6cd57ea29" name="Script Assertion"><con:configuration><scriptText><![CDATA[def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;

int CheckInformation(response)
{
	def xml = new XmlParser().parseText(response);
	int PublicationFound = 0;
	int ModelFound = 0;
	int HomeFound = 0;
	int SummaryFound = 0;
	int FOUND = 0;
	def MissingLinks="";
	def TotalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("opensearch") && it.name().toString().contains("totalResults"))
		{
			TotalResult = it.value()[0];
		}
	};
	if(TotalResult.toInteger()==0)
	return -1;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry") && FOUND==0 && it.children().size()>0)
		{
			FOUND=1;
			for(s in it.children())
			{
				if(s.@rel=="http://www.vizrt.com/types/relation/publication")
				PublicationFound=1;
				if(s.@rel=="http://www.escenic.com/types/relation/model")
				ModelFound=1;
				if(s.@rel=="http://www.vizrt.com/types/relation/home-section")
				HomeFound=1;
				if(s.@rel=="http://www.escenic.com/types/relation/summary-model")
				SummaryFound=1;
			}
		}
	};

	def testCase =context.testCase;
	def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
	def project = testRunner.testCase.testSuite.project
	
	if(FOUND==0)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries do not contain Publication, content-type, home-section and summary links.");
		return 0;
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration']);
		if(PublicationFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="Publication";
			else
			MissingLinks+=",Publication";
		}
		if(ModelFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="content-type";
			else
			MissingLinks+=",content-type";
		}
		if(SummaryFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="summary";
			else
			MissingLinks+=",summary";
		}
		if(HomeFound==0)
		{
			if(MissingLinks.size()==0)
			MissingLinks+="home-section";
			else
			MissingLinks+=",home-section";
		}
		if(PublicationFound+ModelFound+SummaryFound+HomeFound<4)
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries do not contain "+MissingLinks+" links.");	
		}
		return PublicationFound+ModelFound+SummaryFound+HomeFound;
	}
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${SearchResultForKeyFrame#Response}');
	//def type="story";
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Entries contain Publication, content-type, home-section and summary links.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Entries contain Publication, content-type, home-section and summary links.");
	int result = CheckInformation(response);
	log.info result;
	if(result==4)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else if(result==-1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","No Contents of this type found. Add Content First.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}]]></scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchResultForList" id="cc63e1be-ba16-4909-92b3-585a0a329fc6" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="SearchResultForList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-beta:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.list&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9e7780c0-e817-4931-8917-ec07a96ac10b" name="Script Assertion" disabled="true"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;
int maxItemPerPage(response)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	return itemsPerPage.toInteger();
}
int GetTotalResult(response)
{
	def xml = new XmlParser().parseText(response);
	def totalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		totalResult=it.value()[0];
	};
	return totalResult.toInteger();
}
int checkResult(response,String type)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage = 0;
	int count = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total=it.value()[0];
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	xml.breadthFirst().each
	{
		if(it.@rel=="http://www.escenic.com/types/relation/model" &amp;&amp; it.@title.toString().contains(type))
		count+=1;
	};
	return count;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${FilterSearchList#Response}');
	def type="list";
	int totalResult = GetTotalResult(response);
	int result = checkResult(response,type);
	int itemsPerPage = maxItemPerPage(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked "+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked"+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+(itemsPerPage-result).toString()+" results found are not "+type+" type.");
	log.info itemsPerPage;
	log.info result;
	if(result==itemsPerPage)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="85f7a00a-c6f8-48aa-8ff9-f9b707dd33fc" name="TagTest"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="3c207483-af49-4974-8395-0a8377128ae9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TagFeedTestCase" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="fad166a7-8ae1-44c4-96e1-059f2c1bc446"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="57208773-0952-417b-b795-3c730be1fc27"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseWebservices" id="54371443-47cd-406d-aed3-4fe2d79e1b43"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Feed_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-feed")
		{
			Tag_Feed_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

log.info Tag_Feed_URI;
context.testCase.testSteps["GetTagFeed"].setPropertyValue("EndPoint",Tag_Feed_URI);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetTagFeed" id="ebb138c3-94d4-4f1c-a77f-fda17be63724"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetTagFeed" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetTagURIs" id="79da8a48-ed46-4ca3-8466-46cee8338222"><con:settings/><con:config><script>def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Title=new String[20];
def Tag_URI=new String[20];
def testStepname;
int idx=0;
def MAX_TEST_STEP=8;

xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			Tag_URI[idx] = it.'link'.@'href'[0];
			Tag_Title[idx] = it.'title'[0].value()[0];
			idx++;
		}
	};
for(int i=0;i&lt;idx;i++)
{
	testStepname = "RetriveTag"+(i%MAX_TEST_STEP).toString();
	context.testCase.testSteps[testStepname].setPropertyValue("EndPoint",Tag_URI[i]);
}


//context.testCase.testSteps["GetTagFeed"].setPropertyValue("EndPoint",Tag_Feed_URI);
</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveTag0" id="d3ecf915-fe92-47a3-a40c-1faed2b241e4"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b5f21f3c-9a06-4cf6-b2f2-0869ddc3fa96" name="RetriveTag0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:places.ewf,2014</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7fe2809d-d7c7-41af-971d-26f8646345f1" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveTag1" id="cfb03fcd-c98b-4e87-8b8e-4889072d3193"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e4638647-70c1-4a30-abb2-9d3150ecca1a" name="RetriveTag1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:entity@example.com,2011</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="36127a9e-0fc6-4790-be97-cdf6e16d1800" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveTag2" id="701448f0-aaf1-491f-85c5-176d9febe50e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="98b39131-92cb-445d-9a67-819685c22816" name="RetriveTag2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:location@example.com,2011</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8e02761e-d391-451d-a1fe-3055b69558b4" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveTag3" id="a52209b1-68d9-42d7-8584-616d417c4822"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="706fecc2-bfa6-4c1b-9039-697df47830ee" name="RetriveTag3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:organization@example.com,2011</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="138a44d4-8830-47bd-b0e3-ea7415690cd4" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveTag4" id="d4d8c59e-6cfc-48b2-87a6-4a9500a6f0c1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="260957b0-e118-4b68-8f95-0a91a390b38d" name="RetriveTag4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:person@example.com,2011</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5b2d7cac-e5d1-4296-b9f7-f05240812976" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveTag5" id="a4776cc2-0493-44e8-948b-e7e4586ebcbd"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="21101562-3d28-4541-b4be-3e5c4df3b069" name="RetriveTag5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:unknown@example.com,2011</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="cfa8d92f-a975-43f4-beda-e269c5f6831a" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveTag6" id="dfc45690-81d4-41f6-ae08-897e7866f4d2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="91d29678-70b8-474c-ab51-192952a67de6" name="RetriveTag6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:topic.ewf,2011</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="39ab592b-ac2c-4854-89f8-feea2ab7dc01" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveTag7" id="9abbbd2c-db92-4e4c-9f8e-52d617bdd0d4"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="53acd13a-9d4d-4f52-82b4-f06cf7c12ebd" name="RetriveTag7" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:livelabels@escenic.com,2015</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="efb21938-8922-41a5-ad29-d9c873323b47" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="93f6e2c3-bb39-4994-b065-e24924a91640" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TagCreateRetriveDelete" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="bcb9b9f3-ff73-4d8c-805e-5ed0035474fc"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="2ce4260c-5d89-409d-879d-ca2e16f441d7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseWebservices" id="e501d6de-9f92-455c-b7a7-522018228416"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Feed_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-feed")
		{
			Tag_Feed_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

log.info Tag_Feed_URI;
context.testCase.testSteps["GetTagFeed"].setPropertyValue("EndPoint",Tag_Feed_URI);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetTagFeed" id="40bd2a48-79b6-47f4-8134-a990d305a259"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetTagFeed" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetTagURIs" id="934579ac-f431-4ce8-8fee-07863c144264"><con:settings/><con:config><script>def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Title=new String[20];
def Tag_URI=new String[20];
def testStepname;
def testStepname2;
int idx=0;
def MAX_TEST_STEP=8;
def request;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+""+calendar.get(Calendar.MINUTE)+""+calendar.get(Calendar.SECOND)+""+calendar.get(Calendar.MILLISECOND);
	return time;
}

xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			Tag_URI[idx] = it.'link'.@'href'[0];
			idx++;
		}
	};
for(int i=0;i&lt;idx;i++)
{
	testStepname = "CreateTag"+(i%MAX_TEST_STEP).toString();
	//testStepname2 = "RetriveCreatedTag"+i.toString();
	context.testCase.testSteps[testStepname].setPropertyValue("EndPoint",Tag_URI[i]);
	//context.testCase.testSteps[testStepname2].setPropertyValue("EndPoint",Tag_URI[i]);

	request = context.testCase.testSteps[testStepname].getPropertyValue("Request");
	def tag_xml = new XmlParser().parseText(request);
	tag_xml.'title'[0].value="TestTag"+GetTime();
	def stringWriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
	printer.preserveWhitespace=true;
	printer.print(tag_xml);
	String newXml = stringWriter.toString();
	context.testCase.testSteps[testStepname].setPropertyValue("Request",newXml);
		
}


//context.testCase.testSteps["GetTagFeed"].setPropertyValue("EndPoint",Tag_Feed_URI);
</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag0" id="cf92b40e-7a69-414a-9704-528bea5f610d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag0" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:places.ewf,2014</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag122026394&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag1" id="b8ab8abe-0117-4f92-9017-12b56b6f2893"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag1" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:entity@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag122026387&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="09abfaac-b3ca-4509-9dc6-ec57e3f1bb5d" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag2" id="54592445-a021-4ac3-9b7b-1969e149b2f6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag2" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:location@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag122026388&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="57424fdb-7926-4e8a-8e1f-f2ed89c79cce" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag3" id="2c5eebb8-6035-4a66-a458-51b7c3e6d8db"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag3" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:organization@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag122026389&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="57424fdb-7926-4e8a-8e1f-f2ed89c79cce" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag4" id="3b2af89a-e1ab-49ea-8eff-542953a51094"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag4" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:person@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag122026391&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="57424fdb-7926-4e8a-8e1f-f2ed89c79cce" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag5" id="b4a36b12-bf62-4721-adfa-84068b1b45a0"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag5" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:unknown@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag122026392&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="57424fdb-7926-4e8a-8e1f-f2ed89c79cce" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag6" id="9a5f72af-2450-4899-9808-517fbd9916ca"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag6" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:topic.ewf,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag122026393&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="57424fdb-7926-4e8a-8e1f-f2ed89c79cce" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag7" id="8baaf8bf-06c7-4140-b6d4-f1d543a25eb8"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag7" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:livelabels@escenic.com,2015</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag122026393&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="57424fdb-7926-4e8a-8e1f-f2ed89c79cce" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetRetriveTagURIs" id="fa2b03c0-0980-498e-8b3b-6439b8c71c0c"><con:settings/><con:config><script>def testStepname;
def createdtestStepname;
def deleteTagStep;
def RetriveTagURI;
int idx=0;
def MAX_TEST_STEP=8;
def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			idx++;
		}
	};
for(int i=0;i&lt;idx;i++)
{
	testStepname = "RetriveCreatedTag"+(i%MAX_TEST_STEP).toString();
	createdtestStepname = "CreateTag"+(i%MAX_TEST_STEP).toString();
	def testCase =context.testCase;
	def httpResponseHeaders = context.testCase.testSteps[createdtestStepname].testRequest.response.responseHeaders;
	RetriveTagURI = httpResponseHeaders["Location"][0];
	context.testCase.testSteps[testStepname].setPropertyValue("EndPoint",RetriveTagURI);
	
	deleteTagStep = "DeleteTag"+(i%MAX_TEST_STEP).toString();
	context.testCase.testSteps[deleteTagStep].setPropertyValue("EndPoint",RetriveTagURI);
	//log.info RetriveTagURI;
}</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag0" id="52fb142e-3e1c-4f18-b663-a46ef0d1f1fe"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e761876a-9a9d-42bf-8b74-4a0e84721923" name="RetriveCreatedTag0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:places.ewf,2014:TestTag122026394</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9b0ece32-73f5-493a-8ad4-60f0ff6f7d98" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag1" id="45bf13a0-205a-4297-92b5-34d23beb9d99"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e761876a-9a9d-42bf-8b74-4a0e84721923" name="RetriveCreatedTag1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:entity@example.com,2011:TestTag122026387</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="0631e555-93e2-4aab-843b-5e2ac025d8c6" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag2" id="feb127e9-bd4d-4709-9767-e8372d4bdce7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e761876a-9a9d-42bf-8b74-4a0e84721923" name="RetriveCreatedTag2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:location@example.com,2011:TestTag122026388</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="0631e555-93e2-4aab-843b-5e2ac025d8c6" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag3" id="846df11d-20af-4db8-8fb2-ba5d2738ed87"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e761876a-9a9d-42bf-8b74-4a0e84721923" name="RetriveCreatedTag3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:organization@example.com,2011:TestTag122026389</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="0631e555-93e2-4aab-843b-5e2ac025d8c6" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag4" id="37968cac-d47f-4fc7-86b0-a3d58bc76ce6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e761876a-9a9d-42bf-8b74-4a0e84721923" name="RetriveCreatedTag4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:person@example.com,2011:TestTag122026391</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="0631e555-93e2-4aab-843b-5e2ac025d8c6" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag5" id="58d833d0-05b9-4af7-a577-71aad433f86f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e761876a-9a9d-42bf-8b74-4a0e84721923" name="RetriveCreatedTag5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:unknown@example.com,2011:TestTag122026392</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="0631e555-93e2-4aab-843b-5e2ac025d8c6" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag6" id="b4311727-74f4-4e8a-b8a1-ee71f7711806"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e761876a-9a9d-42bf-8b74-4a0e84721923" name="RetriveCreatedTag6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:topic.ewf,2011:TestTag122026393</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="0631e555-93e2-4aab-843b-5e2ac025d8c6" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag7" id="0b0f95bf-f322-4f8d-b9cc-19712386ece7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e761876a-9a9d-42bf-8b74-4a0e84721923" name="RetriveCreatedTag7" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:livelabels@escenic.com,2015:TestTag122026393</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="0631e555-93e2-4aab-843b-5e2ac025d8c6" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTag0" id="4b08a499-5947-459c-b230-87f453d5bc8b"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTag0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:places.ewf,2014:TestTag122026394</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTag1" id="024fc0ab-58ae-4067-b277-1db954fe12ed"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTag1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:entity@example.com,2011:TestTag122026387</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTag2" id="e08ee4ea-0dc3-4e40-aabe-9e2b695ba1a8"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTag2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:location@example.com,2011:TestTag122026388</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTag3" id="275380bc-1c70-4277-b30d-30263705ffcc"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTag3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:organization@example.com,2011:TestTag122026389</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTag4" id="aa6530f5-dab6-4308-b194-7126350c6be6"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTag4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:person@example.com,2011:TestTag122026391</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTag5" id="127c0e5e-25aa-4acd-ab2d-434d96e9bf6a"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTag5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:unknown@example.com,2011:TestTag122026392</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTag6" id="182a3dc7-7a23-483c-adb2-3e2f8546b720"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTag6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:topic.ewf,2011:TestTag122026393</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTag7" id="d05192f1-8956-4d02-ac00-96ded57793bf"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTag7" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:livelabels@escenic.com,2015:TestTag122026393</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="97bce09f-78a5-4729-9ca7-00e666500a51" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TagCreateWithSameName" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="d5c9a2c0-15c9-43c2-a3bd-bfe17b443586"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="4c882f0b-2e4c-4f4d-9bfe-bb12004c3e74"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseWebservices" id="fe073c7d-e71a-4aa7-9d5e-3c8b2f7cb29b"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Feed_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-feed")
		{
			Tag_Feed_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

log.info Tag_Feed_URI;
context.testCase.testSteps["GetTagFeed"].setPropertyValue("EndPoint",Tag_Feed_URI);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetTagFeed" id="5db5dde0-7d4d-45ec-a189-0d6844312990"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetTagFeed" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetTagURIs" id="eaed0864-2086-4c69-b870-2106f287b9b2"><con:settings/><con:config><script>def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
def Tag_URI=new String[20];
def testStepname;
def testStepname2;
int idx=0;

def request;
def MAX_TEST_STEP=8;
String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+""+calendar.get(Calendar.MINUTE)+""+calendar.get(Calendar.SECOND)+""+calendar.get(Calendar.MILLISECOND);
	return time;
}

xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			Tag_URI[idx] = it.'link'.@'href'[0];
			idx++;
		}
	};
for(int i=0;i&lt;idx;i++)
{
	testStepname = "CreateTag"+(i%MAX_TEST_STEP).toString();
	context.testCase.testSteps[testStepname].setPropertyValue("EndPoint",Tag_URI[i]);
	testStepname2 = "CreateTagWithSameName"+(i%MAX_TEST_STEP).toString();
	context.testCase.testSteps[testStepname2].setPropertyValue("EndPoint",Tag_URI[i]);

	request = context.testCase.testSteps[testStepname].getPropertyValue("Request");
	def tag_xml = new XmlParser().parseText(request);
	tag_xml.'title'[0].value="TestTag"+GetTime();
	def stringWriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
	printer.preserveWhitespace=true;
	printer.print(tag_xml);
	String newXml = stringWriter.toString();
	context.testCase.testSteps[testStepname].setPropertyValue("Request",newXml);
	context.testCase.testSteps[testStepname2].setPropertyValue("Request",newXml);
}

</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag0" id="93d312fa-b2a6-43b2-beaf-a2ee7904ad5a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag0" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:places.ewf,2014</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114740425&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTagWithSameName0" id="41b2dab2-d180-431c-8d0e-db761a30a2a7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTagWithSameName0" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:places.ewf,2014</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114740425&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","409");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="409")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag1" id="26ad1c81-e845-4a48-898c-bb9a19e7af51"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag1" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:entity@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114740412&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTagWithSameName1" id="35a23541-f847-40fe-a732-0941be3dfaf2"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTagWithSameName1" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:entity@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114740412&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","409");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="409")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag2" id="d83ab7df-59b2-44b7-8cdd-20662f79931a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag2" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:location@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114740414&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTagWithSameName2" id="f711c965-9361-422c-abfd-d465cfdad330"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTagWithSameName2" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:location@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114740414&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","409");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="409")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag3" id="fa0f5973-c6d2-4a6a-b4b3-1bd0bc756db3"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag3" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:organization@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114740416&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTagWithSameName3" id="e6bcd7cf-09e6-4af7-84a5-8eb5fabfc13c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTagWithSameName3" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:organization@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114740416&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","409");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="409")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag4" id="6ca333a6-bb82-4485-98a9-3a170ab8d5f6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag4" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:person@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114740418&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTagWithSameName4" id="07f5cc05-adb5-4814-8d6b-9dde4fcc280d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTagWithSameName4" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:person@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114740418&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","409");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="409")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag5" id="fbbcd21f-4245-4173-8a87-fb76e70c5555"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag5" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:unknown@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114740420&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTagWithSameName5" id="3513beb6-08f3-434c-879b-8d98ed1232a9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTagWithSameName5" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:unknown@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114740420&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","409");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="409")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag6" id="a460c838-4c39-4e8f-a354-63367e9fdc25"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag6" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:topic.ewf,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114740422&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTagWithSameName6" id="977a2448-2082-4845-a08d-a1565dd26e1c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTagWithSameName6" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:topic.ewf,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114740422&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","409");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="409")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag7" id="5fb2f50c-23f5-4f6d-bb9d-a1fe2374360e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag7" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:livelabels@escenic.com,2015</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114740424&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTagWithSameName7" id="86409272-750a-4c51-951e-e96273358416"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTagWithSameName7" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:livelabels@escenic.com,2015</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114740424&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","409");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="409")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="723d20cd-97d0-4ffa-b3a1-99b1f8f4f92f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DeleteADeletedTag" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="826cd2fe-708a-4049-b94b-af341df916b2"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="7b7bbcd0-42c5-4a73-9670-e155814b8653"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseWebservices" id="77f29c7c-af86-4ddb-93f2-ab56202ff07e"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Feed_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-feed")
		{
			Tag_Feed_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

log.info Tag_Feed_URI;
context.testCase.testSteps["GetTagFeed"].setPropertyValue("EndPoint",Tag_Feed_URI);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetTagFeed" id="b901a9b5-5c26-48ec-981e-03ed98b3c17f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetTagFeed" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetTagURIs" id="21ce3382-475e-49ff-92d5-130b44f03864"><con:settings/><con:config><script>def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Title=new String[20];
def Tag_URI=new String[20];
def testStepname;
def testStepname2;
int idx=0;

def request;
def MAX_TEST_STEP=8;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+""+calendar.get(Calendar.MINUTE)+""+calendar.get(Calendar.SECOND)+""+calendar.get(Calendar.MILLISECOND);
	return time;
}

xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			Tag_URI[idx] = it.'link'.@'href'[0];
			idx++;
		}
	};
log.info idx;
for(int i=0;i&lt;idx;i++)
{
	testStepname = "CreateTag"+(i%MAX_TEST_STEP).toString();
	//testStepname2 = "RetriveCreatedTag"+i.toString();
	context.testCase.testSteps[testStepname].setPropertyValue("EndPoint",Tag_URI[i]);
	//context.testCase.testSteps[testStepname2].setPropertyValue("EndPoint",Tag_URI[i]);

	request = context.testCase.testSteps[testStepname].getPropertyValue("Request");
	def tag_xml = new XmlParser().parseText(request);
	tag_xml.'title'[0].value="TestTag"+GetTime();
	def stringWriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
	printer.preserveWhitespace=true;
	printer.print(tag_xml);
	String newXml = stringWriter.toString();
	context.testCase.testSteps[testStepname].setPropertyValue("Request",newXml);
		
}


//context.testCase.testSteps["GetTagFeed"].setPropertyValue("EndPoint",Tag_Feed_URI);
</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag0" id="fe2b53f4-2d65-4ac2-be75-9fad34988732"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag0" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:places.ewf,2014</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114755792&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag1" id="b712fa77-ee07-45b2-922f-03f7ffedc85c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag1" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:entity@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114755782&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="09abfaac-b3ca-4509-9dc6-ec57e3f1bb5d" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag2" id="3ec67e35-e292-44a1-b11f-9c8d25c8d347"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag2" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:location@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114755784&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="09abfaac-b3ca-4509-9dc6-ec57e3f1bb5d" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag3" id="279a6d13-d364-4101-b7a8-ae71bab05de0"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag3" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:organization@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114755785&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="09abfaac-b3ca-4509-9dc6-ec57e3f1bb5d" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag4" id="ae29b582-9d83-4917-b600-875de816dd7e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag4" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:person@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114755786&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="09abfaac-b3ca-4509-9dc6-ec57e3f1bb5d" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag5" id="e0d53afc-4a69-45e2-9c92-bf7ab6e4edcf"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag5" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:unknown@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114755788&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="09abfaac-b3ca-4509-9dc6-ec57e3f1bb5d" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag6" id="0d1b7fc8-9e0f-4e78-a3ad-fc3d2e06eeca"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag6" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:topic.ewf,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114755789&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="09abfaac-b3ca-4509-9dc6-ec57e3f1bb5d" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag7" id="4324c506-37d8-4118-9e57-2928e46a3528"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag7" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:livelabels@escenic.com,2015</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114755790&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="09abfaac-b3ca-4509-9dc6-ec57e3f1bb5d" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetDeleteTagURIs" id="e8f9bd60-8cfa-4af2-8b4e-8dccbce486a9"><con:settings/><con:config><script>def testStepname;
def createdtestStepname;
def deleteTagStep;
def DeleteTagURI;
int idx=0;
def MAX_TEST_STEP=8;
def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			idx++;
		}
	};
for(int i=0;i&lt;(idx>7 ? 7:idx);i++)
{
	createdtestStepname = "CreateTag"+(i%MAX_TEST_STEP).toString();
	def testCase =context.testCase;
	def httpResponseHeaders = context.testCase.testSteps[createdtestStepname].testRequest.response.responseHeaders;
	DeleteTagURI = httpResponseHeaders["Location"][0];
	//context.testCase.testSteps[testStepname].setPropertyValue("EndPoint",DeleteTagURI);
	
	deleteTagStep = "DeleteTag"+(i%MAX_TEST_STEP).toString();
	context.testCase.testSteps[deleteTagStep].setPropertyValue("EndPoint",DeleteTagURI);
	deleteTagStep = "DeleteTagAgain"+(i%MAX_TEST_STEP).toString();
	context.testCase.testSteps[deleteTagStep].setPropertyValue("EndPoint",DeleteTagURI);
}</script></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTag0" id="5055d6d5-d4f1-4ca8-80d1-c611bbe3df8a"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTag0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:places.ewf,2014:TestTag114755792</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="204")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTagAgain0" id="d4868776-a412-4495-8444-84a6a3fa24fe"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTagAgain0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:places.ewf,2014:TestTag114755792</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTag1" id="ea202544-a680-45f8-9861-1a4cfaa0b3b1"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTag1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:entity@example.com,2011:TestTag114755782</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="204")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTagAgain1" id="a1fbca6b-fd36-41f7-97c5-87de530ff399"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTagAgain1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:entity@example.com,2011:TestTag114755782</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTag2" id="e7efdb8e-4d50-43a2-ba8f-2a21c74dc532"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTag2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:location@example.com,2011:TestTag114755784</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="204")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTagAgain2" id="5a673de3-8b0b-4672-b369-ef2bf0496304"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTagAgain2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:location@example.com,2011:TestTag114755784</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTag3" id="3d3f716a-3761-4c9c-aeee-8368bcd1c963"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTag3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:organization@example.com,2011:TestTag114755785</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="204")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTagAgain3" id="20d77ff7-2ea3-4ccd-a291-ab38b98720c8"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTagAgain3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:organization@example.com,2011:TestTag114755785</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTag4" id="d189ae70-48b4-4b66-83d7-b92743509525"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTag4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:person@example.com,2011:TestTag114755786</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="204")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTagAgain4" id="0d3cb016-2170-4557-b2c8-d075f4feca1e"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTagAgain4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:person@example.com,2011:TestTag114755786</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTag5" id="38dd8ddd-04e5-438e-a34d-79149ea1d1bb"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTag5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:unknown@example.com,2011:TestTag114755788</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="204")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTagAgain5" id="22dbe35a-8459-4b71-86fd-000263587eac"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTagAgain5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:unknown@example.com,2011:TestTag114755788</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTag6" id="c3ba9422-759c-4c41-a7f9-c91196ed885d"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTag6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:topic.ewf,2011:TestTag114755789</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="204")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTagAgain6" id="eb920fbd-3b80-420c-aa2b-c707d09ba346"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTagAgain6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:topic.ewf,2011:TestTag114755789</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTag7" id="92fb9cbb-9238-4739-afe3-349dc3314985"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTag7" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-oberon:8080/webservice/escenic/classification/tag/tag:topic.ewf,2011:TestTag14588427</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="204")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteTagAgain7" id="7542ce40-564d-48fc-9470-b781679f9ad3"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="6bb01d68-f72e-4f90-9950-0e78dc77f267" name="DeleteTagAgain7" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-oberon:8080/webservice/escenic/classification/tag/tag:topic.ewf,2011:TestTag14588427</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="190c7d18-1774-4d28-83f1-8e7defacd79b" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="09f9b121-5ecc-4dd8-b843-5a33b39d226a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TagUpdate" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="5bb67e02-9320-4d14-a461-6d7abc6cb1ad"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="deab731c-74a7-48a9-94fc-a47c6f1e76c7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseWebservices" id="4334cc50-d1d1-44a4-a0bd-9a5879374c7b"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Feed_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-feed")
		{
			Tag_Feed_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

log.info Tag_Feed_URI;
context.testCase.testSteps["GetTagFeed"].setPropertyValue("EndPoint",Tag_Feed_URI);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetTagFeed" id="ff933421-8c58-4434-9d6c-f135f4140ac3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetTagFeed" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetTagURIs" id="63e327db-a820-4d07-8ba9-3365e3c51fb7"><con:settings/><con:config><script>def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Title=new String[20];
def Tag_URI=new String[20];
def testStepname;
def testStepname2;
int idx=0;

def request;
def MAX_TEST_STEP=8;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+""+calendar.get(Calendar.MINUTE)+""+calendar.get(Calendar.SECOND)+""+calendar.get(Calendar.MILLISECOND);
	return time;
}

xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			Tag_URI[idx] = it.'link'.@'href'[0];
			idx++;
		}
	};
log.info idx;
for(int i=0;i&lt;idx;i++)
{
	testStepname = "CreateTag"+(i%MAX_TEST_STEP).toString();
	//testStepname2 = "RetriveCreatedTag"+i.toString();
	context.testCase.testSteps[testStepname].setPropertyValue("EndPoint",Tag_URI[i]);
	//context.testCase.testSteps[testStepname2].setPropertyValue("EndPoint",Tag_URI[i]);

	request = context.testCase.testSteps[testStepname].getPropertyValue("Request");
	def tag_xml = new XmlParser().parseText(request);
	tag_xml.'title'[0].value="TestTag"+GetTime();
	def stringWriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
	printer.preserveWhitespace=true;
	printer.print(tag_xml);
	String newXml = stringWriter.toString();
	context.testCase.testSteps[testStepname].setPropertyValue("Request",newXml);
		
}
</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag0" id="e4fa6a53-a0c9-44a4-a260-92cff957f529"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag0" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:places.ewf,2014</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag1148217&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag1" id="1376a767-7532-4312-a9e8-646daae7221c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag1" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:entity@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag1148210&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag2" id="f949563c-3fe0-477e-9cdf-a02b56a226f6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag2" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:location@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag1148211&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag3" id="add2a347-85aa-4cd5-a259-d7f0a8f07d2d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag3" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:organization@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag1148213&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag4" id="df14434a-a4e9-4c19-9101-47a4a8a0cb37"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag4" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:person@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag1148214&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag5" id="37b27862-19c9-49ef-a124-b7f56efa3f3f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag5" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:unknown@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag1148215&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag6" id="0a21665b-5efe-4775-941f-5fd5c02b6b6d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag6" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:topic.ewf,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag1148215&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag7" id="ecdd3eba-5ac4-4f8c-80c3-715ca9f0340a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag7" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:livelabels@escenic.com,2015</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag1148216&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetRetriveTagURIs" id="7688ad63-3578-4a69-9e8e-d5c9a766fcd0"><con:settings/><con:config><script>def testStepname;
def createdtestStepname;
def deleteTagStep;
def RetriveTagURI;
int idx=0;
def MAX_TEST_STEP=8;
def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			idx++;
		}
	};
for(int i=0;i&lt;idx;i++)
{
	testStepname = "RetriveCreatedTag"+(i%MAX_TEST_STEP).toString();
	createdtestStepname = "CreateTag"+(i%MAX_TEST_STEP).toString();
	def testCase =context.testCase;
	def httpResponseHeaders = context.testCase.testSteps[createdtestStepname].testRequest.response.responseHeaders;
	RetriveTagURI = httpResponseHeaders["Location"][0];
	context.testCase.testSteps[testStepname].setPropertyValue("EndPoint",RetriveTagURI);
	
	UpdateTagStep = "UpdateTag"+(i%MAX_TEST_STEP).toString();
	context.testCase.testSteps[UpdateTagStep].setPropertyValue("EndPoint",RetriveTagURI);
	//log.info RetriveTagURI;
}</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag0" id="82c78d2f-dd1a-4c9e-8f7c-5f3fed35a8a3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:places.ewf,2014:TestTag1148217</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag1" id="89de03f2-57ad-4df3-a4b3-aa1f5d7eca22"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:entity@example.com,2011:TestTag1148210</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bfb5d953-5abd-4405-9461-e3dec9f91207" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag2" id="39b676c7-591c-410e-8a60-19efa162e867"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:location@example.com,2011:TestTag1148211</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bfb5d953-5abd-4405-9461-e3dec9f91207" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag3" id="bfe13140-7461-4004-9ce8-39afc968dfba"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:organization@example.com,2011:TestTag1148213</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bfb5d953-5abd-4405-9461-e3dec9f91207" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag4" id="88e503a6-250b-4dd8-872b-46c53165df19"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:person@example.com,2011:TestTag1148214</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bfb5d953-5abd-4405-9461-e3dec9f91207" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag5" id="eac07513-3c01-4ced-bdd3-6fa41dc7a907"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:unknown@example.com,2011:TestTag1148215</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bfb5d953-5abd-4405-9461-e3dec9f91207" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag6" id="b280dc1c-ecda-45b6-adac-3c4b880cddf1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:topic.ewf,2011:TestTag1148215</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bfb5d953-5abd-4405-9461-e3dec9f91207" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag7" id="a8dca3fa-3ba5-4556-9c0a-7463574394ba"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag7" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:livelabels@escenic.com,2015:TestTag1148216</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bfb5d953-5abd-4405-9461-e3dec9f91207" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="UpdateTagContent" id="8073a029-8e2f-4b2c-b9e8-6b0e34d46aa9"><con:settings/><con:config><script><![CDATA[def testStepname;
def createdtestStepname;
def deleteTagStep;
def RetriveTagURI;
int idx=0;
def MAX_TEST_STEP=8;
def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			idx++;
		}
	};

def EditTagResponse(tag_response)
{
	def tag_xml = new XmlParser().parseText(tag_response);
	tag_xml.breadthFirst().each
	{
		//if(it.@'name'.toString().contains("description"))
		if(it.name().toString().contains("title"))
		it.value=it.value()+" - EditedTitle";
	};
	def stringWriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
	printer.preserveWhitespace=true;
	printer.print(tag_xml);
	/*def newXml = stringWriter.toString();
	def s=newXml.substring(newXml.indexOf("<id>"),newXml.indexOf("</id>")+"</id>".length());
	def tmp="";
	for(int i=0;i<s.size();i++)
	{
		if(s[i]!=' ' && s[i]!='\n')
		tmp=tmp+s[i];
	}
	log.info tmp;
	int x = newXml.indexOf("</id>")+"</id>".length();
	int y=newXml.indexOf("<id>");
	log.info x;
	def res = newXml.substring(0,y)+tmp+ newXml.substring(x);*/
	return stringWriter.toString();
}
for(int i=0;i<idx;i++)
{
	testStepname = "RetriveCreatedTag"+(i%MAX_TEST_STEP).toString();
	createdtestStepname = "CreateTag"+(i%MAX_TEST_STEP).toString();
	def testCase =context.testCase;
	def tag_response = context.testCase.testSteps[testStepname].getPropertyValue("Response");	
	//log.info tag_response;
	tag_response = EditTagResponse(tag_response);
	UpdateTagStep = "UpdateTag"+(i%MAX_TEST_STEP).toString();
	context.testCase.testSteps[UpdateTagStep].setPropertyValue("Request",tag_response);
}]]></script></con:config></con:testStep><con:testStep type="httprequest" name="UpdateTag0" id="25d4ab75-27c2-4169-981c-f8c7a0f773b3"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="880289ec-5d81-4ae6-a541-07f9bdd05c36" name="UpdateTag0" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:places.ewf,2014:TestTag1148217</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>tag:places.ewf,2014:TestTag1148217</id>
  <title type="text">TestTag1148217 - EditedTitle</title>
  <updated>2018-02-01T05:57:35.000Z</updated>
  <summary type="html" axis2ns341:align="right" xmlns:axis2ns341="http://xmlns.escenic.com/2008/interface-hints">TestTag1148217</summary>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-beta:8080/webservice/escenic/classification/model/tag">
      <vdf:field name="description"/>
      <vdf:field name="aliases">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag/tag:places.ewf,2014:TestTag1148217" rel="self" title="TestTag1148217"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag:places.ewf,2014" rel="http://www.vizrt.com/types/relation/top" title="places"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag/children/tag:places.ewf,2014:TestTag1148217" rel="down" title="TestTag1148217" thr:count="0" xmlns:thr="http://purl.org/syndication/thread/1.0"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/merge" rel="http://www.vizrt.com/types/relation/merge"/>
  <opensearch:Url xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1" template="http://qa-beta:8080/webservice/search/{sectionPath}/{searchTerms}/?pw={startPage?}&amp;c={count?}&amp;tag=tag%3Aplaces.ewf%2C2014%3ATestTag1148217" type="application/atom+xml"/>
  <opensearch:Url xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/" template="http://qa-beta:8080/webservice/escenic/classification/tag/search?searchTerms={searchTerms}&amp;parent=tag%3Aplaces.ewf%2C2014%3ATestTag1148217" type="application/atom+xml" rel="parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="88b96925-229a-4b53-a683-019787336956" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="UpdateTag1" id="47d24104-5024-44b2-8bb1-9b3f3d1e3220"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="880289ec-5d81-4ae6-a541-07f9bdd05c36" name="UpdateTag1" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:entity@example.com,2011:TestTag1148210</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>tag:entity@example.com,2011:TestTag1148210</id>
  <title type="text">TestTag1148210 - EditedTitle</title>
  <updated>2018-02-01T05:57:35.000Z</updated>
  <summary type="html" axis2ns342:align="right" xmlns:axis2ns342="http://xmlns.escenic.com/2008/interface-hints">TestTag1148210</summary>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-beta:8080/webservice/escenic/classification/model/tag">
      <vdf:field name="description"/>
      <vdf:field name="aliases">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag/tag:entity@example.com,2011:TestTag1148210" rel="self" title="TestTag1148210"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag:entity@example.com,2011" rel="http://www.vizrt.com/types/relation/top" title="Entity"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag/children/tag:entity@example.com,2011:TestTag1148210" rel="down" title="TestTag1148210" thr:count="0" xmlns:thr="http://purl.org/syndication/thread/1.0"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/merge" rel="http://www.vizrt.com/types/relation/merge"/>
  <opensearch:Url xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1" template="http://qa-beta:8080/webservice/search/{sectionPath}/{searchTerms}/?pw={startPage?}&amp;c={count?}&amp;tag=tag%3Aentity%40example.com%2C2011%3ATestTag1148210" type="application/atom+xml"/>
  <opensearch:Url xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/" template="http://qa-beta:8080/webservice/escenic/classification/tag/search?searchTerms={searchTerms}&amp;parent=tag%3Aentity%40example.com%2C2011%3ATestTag1148210" type="application/atom+xml" rel="parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8d24aac9-f496-40a2-a55b-ee5d474536c5" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="UpdateTag2" id="f4397b4c-4312-4327-a806-1a3d83c17d6c"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="880289ec-5d81-4ae6-a541-07f9bdd05c36" name="UpdateTag2" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:location@example.com,2011:TestTag1148211</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>tag:location@example.com,2011:TestTag1148211</id>
  <title type="text">TestTag1148211 - EditedTitle</title>
  <updated>2018-02-01T05:57:36.000Z</updated>
  <summary type="html" axis2ns343:align="right" xmlns:axis2ns343="http://xmlns.escenic.com/2008/interface-hints">TestTag1148211</summary>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-beta:8080/webservice/escenic/classification/model/tag">
      <vdf:field name="description"/>
      <vdf:field name="aliases">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag/tag:location@example.com,2011:TestTag1148211" rel="self" title="TestTag1148211"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag:location@example.com,2011" rel="http://www.vizrt.com/types/relation/top" title="Location"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag/children/tag:location@example.com,2011:TestTag1148211" rel="down" title="TestTag1148211" thr:count="0" xmlns:thr="http://purl.org/syndication/thread/1.0"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/merge" rel="http://www.vizrt.com/types/relation/merge"/>
  <opensearch:Url xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1" template="http://qa-beta:8080/webservice/search/{sectionPath}/{searchTerms}/?pw={startPage?}&amp;c={count?}&amp;tag=tag%3Alocation%40example.com%2C2011%3ATestTag1148211" type="application/atom+xml"/>
  <opensearch:Url xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/" template="http://qa-beta:8080/webservice/escenic/classification/tag/search?searchTerms={searchTerms}&amp;parent=tag%3Alocation%40example.com%2C2011%3ATestTag1148211" type="application/atom+xml" rel="parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8d24aac9-f496-40a2-a55b-ee5d474536c5" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="UpdateTag3" id="8ae6bdac-9df3-4a7a-995f-7998c138f043"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="880289ec-5d81-4ae6-a541-07f9bdd05c36" name="UpdateTag3" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:organization@example.com,2011:TestTag1148213</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>tag:organization@example.com,2011:TestTag1148213</id>
  <title type="text">TestTag1148213 - EditedTitle</title>
  <updated>2018-02-01T05:57:36.000Z</updated>
  <summary type="html" axis2ns344:align="right" xmlns:axis2ns344="http://xmlns.escenic.com/2008/interface-hints">TestTag1148213</summary>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-beta:8080/webservice/escenic/classification/model/tag">
      <vdf:field name="description"/>
      <vdf:field name="aliases">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag/tag:organization@example.com,2011:TestTag1148213" rel="self" title="TestTag1148213"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag:organization@example.com,2011" rel="http://www.vizrt.com/types/relation/top" title="Organization"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag/children/tag:organization@example.com,2011:TestTag1148213" rel="down" title="TestTag1148213" thr:count="0" xmlns:thr="http://purl.org/syndication/thread/1.0"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/merge" rel="http://www.vizrt.com/types/relation/merge"/>
  <opensearch:Url xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1" template="http://qa-beta:8080/webservice/search/{sectionPath}/{searchTerms}/?pw={startPage?}&amp;c={count?}&amp;tag=tag%3Aorganization%40example.com%2C2011%3ATestTag1148213" type="application/atom+xml"/>
  <opensearch:Url xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/" template="http://qa-beta:8080/webservice/escenic/classification/tag/search?searchTerms={searchTerms}&amp;parent=tag%3Aorganization%40example.com%2C2011%3ATestTag1148213" type="application/atom+xml" rel="parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8d24aac9-f496-40a2-a55b-ee5d474536c5" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="UpdateTag4" id="120d2c53-7186-437c-869b-645646e5dbca"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="880289ec-5d81-4ae6-a541-07f9bdd05c36" name="UpdateTag4" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:person@example.com,2011:TestTag1148214</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>tag:person@example.com,2011:TestTag1148214</id>
  <title type="text">TestTag1148214 - EditedTitle</title>
  <updated>2018-02-01T05:57:37.000Z</updated>
  <summary type="html" axis2ns345:align="right" xmlns:axis2ns345="http://xmlns.escenic.com/2008/interface-hints">TestTag1148214</summary>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-beta:8080/webservice/escenic/classification/model/tag">
      <vdf:field name="description"/>
      <vdf:field name="aliases">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag/tag:person@example.com,2011:TestTag1148214" rel="self" title="TestTag1148214"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag:person@example.com,2011" rel="http://www.vizrt.com/types/relation/top" title="Person"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag/children/tag:person@example.com,2011:TestTag1148214" rel="down" title="TestTag1148214" thr:count="0" xmlns:thr="http://purl.org/syndication/thread/1.0"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/merge" rel="http://www.vizrt.com/types/relation/merge"/>
  <opensearch:Url xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1" template="http://qa-beta:8080/webservice/search/{sectionPath}/{searchTerms}/?pw={startPage?}&amp;c={count?}&amp;tag=tag%3Aperson%40example.com%2C2011%3ATestTag1148214" type="application/atom+xml"/>
  <opensearch:Url xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/" template="http://qa-beta:8080/webservice/escenic/classification/tag/search?searchTerms={searchTerms}&amp;parent=tag%3Aperson%40example.com%2C2011%3ATestTag1148214" type="application/atom+xml" rel="parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8d24aac9-f496-40a2-a55b-ee5d474536c5" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="UpdateTag5" id="2d27124a-5ba5-4424-a3ae-d02865c9e0c7"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="880289ec-5d81-4ae6-a541-07f9bdd05c36" name="UpdateTag5" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:unknown@example.com,2011:TestTag1148215</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>tag:unknown@example.com,2011:TestTag1148215</id>
  <title type="text">TestTag1148215 - EditedTitle</title>
  <updated>2018-02-01T05:57:37.000Z</updated>
  <summary type="html" axis2ns346:align="right" xmlns:axis2ns346="http://xmlns.escenic.com/2008/interface-hints">TestTag1148215</summary>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-beta:8080/webservice/escenic/classification/model/tag">
      <vdf:field name="description"/>
      <vdf:field name="aliases">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag/tag:unknown@example.com,2011:TestTag1148215" rel="self" title="TestTag1148215"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag:unknown@example.com,2011" rel="http://www.vizrt.com/types/relation/top" title="Unknown"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag/children/tag:unknown@example.com,2011:TestTag1148215" rel="down" title="TestTag1148215" thr:count="0" xmlns:thr="http://purl.org/syndication/thread/1.0"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/merge" rel="http://www.vizrt.com/types/relation/merge"/>
  <opensearch:Url xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1" template="http://qa-beta:8080/webservice/search/{sectionPath}/{searchTerms}/?pw={startPage?}&amp;c={count?}&amp;tag=tag%3Aunknown%40example.com%2C2011%3ATestTag1148215" type="application/atom+xml"/>
  <opensearch:Url xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/" template="http://qa-beta:8080/webservice/escenic/classification/tag/search?searchTerms={searchTerms}&amp;parent=tag%3Aunknown%40example.com%2C2011%3ATestTag1148215" type="application/atom+xml" rel="parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8d24aac9-f496-40a2-a55b-ee5d474536c5" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="UpdateTag6" id="b970097f-841d-4a24-a472-545baf52c90c"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="880289ec-5d81-4ae6-a541-07f9bdd05c36" name="UpdateTag6" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:topic.ewf,2011:TestTag1148215</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>tag:topic.ewf,2011:TestTag1148215</id>
  <title type="text">TestTag1148215 - EditedTitle</title>
  <updated>2018-02-01T05:57:38.000Z</updated>
  <summary type="html" axis2ns347:align="right" xmlns:axis2ns347="http://xmlns.escenic.com/2008/interface-hints">TestTag1148215</summary>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-beta:8080/webservice/escenic/classification/model/tag">
      <vdf:field name="description"/>
      <vdf:field name="aliases">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag/tag:topic.ewf,2011:TestTag1148215" rel="self" title="TestTag1148215"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag:topic.ewf,2011" rel="http://www.vizrt.com/types/relation/top" title="Widget"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag/children/tag:topic.ewf,2011:TestTag1148215" rel="down" title="TestTag1148215" thr:count="0" xmlns:thr="http://purl.org/syndication/thread/1.0"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/merge" rel="http://www.vizrt.com/types/relation/merge"/>
  <opensearch:Url xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1" template="http://qa-beta:8080/webservice/search/{sectionPath}/{searchTerms}/?pw={startPage?}&amp;c={count?}&amp;tag=tag%3Atopic.ewf%2C2011%3ATestTag1148215" type="application/atom+xml"/>
  <opensearch:Url xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/" template="http://qa-beta:8080/webservice/escenic/classification/tag/search?searchTerms={searchTerms}&amp;parent=tag%3Atopic.ewf%2C2011%3ATestTag1148215" type="application/atom+xml" rel="parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8d24aac9-f496-40a2-a55b-ee5d474536c5" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="UpdateTag7" id="91ae6e1b-650b-4407-ad3f-afd712f06805"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="880289ec-5d81-4ae6-a541-07f9bdd05c36" name="UpdateTag7" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:livelabels@escenic.com,2015:TestTag1148216</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>tag:livelabels@escenic.com,2015:TestTag1148216</id>
  <title type="text">TestTag1148216 - EditedTitle</title>
  <updated>2018-02-01T05:57:38.000Z</updated>
  <summary type="html" axis2ns348:align="right" xmlns:axis2ns348="http://xmlns.escenic.com/2008/interface-hints">TestTag1148216</summary>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-beta:8080/webservice/escenic/classification/model/tag">
      <vdf:field name="description"/>
      <vdf:field name="aliases">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag/tag:livelabels@escenic.com,2015:TestTag1148216" rel="self" title="TestTag1148216"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag:livelabels@escenic.com,2015" rel="http://www.vizrt.com/types/relation/top" title="livelabels"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag/children/tag:livelabels@escenic.com,2015:TestTag1148216" rel="down" title="TestTag1148216" thr:count="0" xmlns:thr="http://purl.org/syndication/thread/1.0"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/merge" rel="http://www.vizrt.com/types/relation/merge"/>
  <opensearch:Url xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1" template="http://qa-beta:8080/webservice/search/{sectionPath}/{searchTerms}/?pw={startPage?}&amp;c={count?}&amp;tag=tag%3Alivelabels%40escenic.com%2C2015%3ATestTag1148216" type="application/atom+xml"/>
  <opensearch:Url xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/" template="http://qa-beta:8080/webservice/escenic/classification/tag/search?searchTerms={searchTerms}&amp;parent=tag%3Alivelabels%40escenic.com%2C2015%3ATestTag1148216" type="application/atom+xml" rel="parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8d24aac9-f496-40a2-a55b-ee5d474536c5" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel()+" - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="CheckTagsUpdated" id="07d2b245-b33e-4696-a911-6167890f18d1"><con:settings/><con:config><script>def testStepname;
def createdtestStepname;
def deleteTagStep;
def RetriveTagURI;
int idx=0;
def MAX_TEST_STEP=8;
def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			idx++;
		}
	};
for(int i=0;i&lt;idx;i++)
{
	testStepname = "RetriveCreatedTag"+(i%MAX_TEST_STEP).toString();
	createdtestStepname = "CreateTag"+(i%MAX_TEST_STEP).toString();
	def testCase =context.testCase;
	def httpResponseHeaders = context.testCase.testSteps[createdtestStepname].testRequest.response.responseHeaders;
	RetriveTagURI = httpResponseHeaders["Location"][0];
	context.testCase.testSteps[testStepname].setPropertyValue("EndPoint",RetriveTagURI);
	
	RetriveUpdatedTagStep = "RetriveUpdatedTag"+(i%MAX_TEST_STEP).toString();
	context.testCase.testSteps[RetriveUpdatedTagStep].setPropertyValue("EndPoint",RetriveTagURI);
	//log.info RetriveTagURI;
}</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveUpdatedTag0" id="ea90ff0c-66cf-433b-8be1-3d6ec33724ac"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3015d5e8-2ca5-48bb-a37c-77181b8f7b44" name="RetriveUpdatedTag0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:places.ewf,2014:TestTag1148217</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="fd4f516d-db00-45a4-8250-6457e1cbedbe" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${RetriveUpdatedTag0#Response}');
	def xml = new XmlParser().parseText(response);
	def title;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("title"))
		title = it.value()[0];
	};
	log.info title;
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Tag Title is updated.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Tag Title is updated.");
	if(title.indexOf("EditedTitle")!=-1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Tag Title is not updated.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveUpdatedTag1" id="b3898c36-5c63-483c-b731-998bb76497da"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3015d5e8-2ca5-48bb-a37c-77181b8f7b44" name="RetriveUpdatedTag1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:entity@example.com,2011:TestTag1148210</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="fd4f516d-db00-45a4-8250-6457e1cbedbe" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${RetriveUpdatedTag1#Response}');
	def xml = new XmlParser().parseText(response);
	def title;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("title"))
		title = it.value()[0];
	};
	log.info title;
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Tag Title is updated.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Tag Title is updated.");
	if(title.indexOf("EditedTitle")!=-1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Tag Title is not updated.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveUpdatedTag2" id="72f13cbe-e284-4b54-835e-ca338e3d8df6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3015d5e8-2ca5-48bb-a37c-77181b8f7b44" name="RetriveUpdatedTag2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:location@example.com,2011:TestTag1148211</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="fd4f516d-db00-45a4-8250-6457e1cbedbe" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${RetriveUpdatedTag2#Response}');
	def xml = new XmlParser().parseText(response);
	def title;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("title"))
		title = it.value()[0];
	};
	log.info title;
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Tag Title is updated.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Tag Title is updated.");
	if(title.indexOf("EditedTitle")!=-1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Tag Title is not updated.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveUpdatedTag3" id="fde74c20-5198-485c-933e-804922b6e390"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3015d5e8-2ca5-48bb-a37c-77181b8f7b44" name="RetriveUpdatedTag3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:organization@example.com,2011:TestTag1148213</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="fd4f516d-db00-45a4-8250-6457e1cbedbe" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${RetriveUpdatedTag3#Response}');
	def xml = new XmlParser().parseText(response);
	def title;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("title"))
		title = it.value()[0];
	};
	log.info title;
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Tag Title is updated.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Tag Title is updated.");
	if(title.indexOf("EditedTitle")!=-1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Tag Title is not updated.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveUpdatedTag4" id="b0d58a5f-7613-4916-8ce8-22534ed6f097"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3015d5e8-2ca5-48bb-a37c-77181b8f7b44" name="RetriveUpdatedTag4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:person@example.com,2011:TestTag1148214</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="fd4f516d-db00-45a4-8250-6457e1cbedbe" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${RetriveUpdatedTag4#Response}');
	def xml = new XmlParser().parseText(response);
	def title;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("title"))
		title = it.value()[0];
	};
	log.info title;
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Tag Title is updated.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Tag Title is updated.");
	if(title.indexOf("EditedTitle")!=-1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Tag Title is not updated.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveUpdatedTag5" id="a85bdc47-cb67-42ee-83f1-bd85e33b78a5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3015d5e8-2ca5-48bb-a37c-77181b8f7b44" name="RetriveUpdatedTag5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:unknown@example.com,2011:TestTag1148215</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="fd4f516d-db00-45a4-8250-6457e1cbedbe" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${RetriveUpdatedTag5#Response}');
	def xml = new XmlParser().parseText(response);
	def title;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("title"))
		title = it.value()[0];
	};
	log.info title;
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Tag Title is updated.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Tag Title is updated.");
	if(title.indexOf("EditedTitle")!=-1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Tag Title is not updated.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveUpdatedTag6" id="692c053d-c2f0-4322-a2c2-be6a368963f9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3015d5e8-2ca5-48bb-a37c-77181b8f7b44" name="RetriveUpdatedTag6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:topic.ewf,2011:TestTag1148215</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="fd4f516d-db00-45a4-8250-6457e1cbedbe" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${RetriveUpdatedTag6#Response}');
	def xml = new XmlParser().parseText(response);
	def title;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("title"))
		title = it.value()[0];
	};
	log.info title;
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Tag Title is updated.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Tag Title is updated.");
	if(title.indexOf("EditedTitle")!=-1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Tag Title is not updated.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveUpdatedTag7" id="113231a9-6fea-4b64-b1ff-13af409ff3ca"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3015d5e8-2ca5-48bb-a37c-77181b8f7b44" name="RetriveUpdatedTag7" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:livelabels@escenic.com,2015:TestTag1148216</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="fd4f516d-db00-45a4-8250-6457e1cbedbe" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${RetriveUpdatedTag7#Response}');
	def xml = new XmlParser().parseText(response);
	def title;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("title"))
		title = it.value()[0];
	};
	log.info title;
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Tag Title is updated.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Tag Title is updated.");
	if(title.indexOf("EditedTitle")!=-1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Tag Title is not updated.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1930981c-a476-469b-ac7e-deaf15d4c1f5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TagSearchTest" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="1217d022-3187-4d64-8193-b3217ea87226"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="81c9d017-aabd-493e-93ec-3ca476df3d0e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseWebservices" id="f0930c88-4d3d-4622-9fe7-08cc742b17a8"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Search_Description_URI;
def Tag_Feed_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-search-description")
		{
			Tag_Search_Description_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-feed")
		{
			Tag_Feed_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

log.info Tag_Search_Description_URI;
context.testCase.testSteps["GetTagFeed"].setPropertyValue("EndPoint",Tag_Feed_URI);
context.testCase.testSteps["TagSearchDesc"].setPropertyValue("EndPoint",Tag_Search_Description_URI);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetTagFeed" id="979ffd5d-536f-4f1d-b4a8-455151c5f584"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetTagFeed" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetTagURIs" id="16ddd6d6-bbb1-4f18-ad35-b7cc62a540cd"><con:settings/><con:config><script>def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Title=new String[20];
def Tag_URI=new String[20];
def testStepname;
def testStepname2;
int idx=0;

def request;
def MAX_TEST_STEP=8;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+""+calendar.get(Calendar.MINUTE)+""+calendar.get(Calendar.SECOND)+""+calendar.get(Calendar.MILLISECOND);
	return time;
}

xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			Tag_URI[idx] = it.'link'.@'href'[0];
			idx++;
		}
	};
log.info idx;
for(int i=0;i&lt;idx;i++)
{
	testStepname = "CreateTag"+(i%MAX_TEST_STEP).toString();
	context.testCase.testSteps[testStepname].setPropertyValue("EndPoint",Tag_URI[i]);

	request = context.testCase.testSteps[testStepname].getPropertyValue("Request");
	def tag_xml = new XmlParser().parseText(request);
	def tagtitle = "TestTag"+GetTime();
	tag_xml.'title'[0].value = tagtitle;
	def stringWriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
	printer.preserveWhitespace=true;
	printer.print(tag_xml);
	String newXml = stringWriter.toString();
	context.testCase.testSteps[testStepname].setPropertyValue("Request",newXml);
		
}
</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag0" id="ba1cfaf0-b979-47a8-bfc9-6995405c4afb"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag0" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag:places.ewf,2014</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag131827708&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag1" id="bed84964-0e04-4279-97f6-bf60d1f3ab93"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag1" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag:entity@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag131827697&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag2" id="7dc7586c-0a76-41ae-ad0b-5fe063898127"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag2" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag:location@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag131827699&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag3" id="14cb0cd6-c83e-4356-9023-5ad3e30a7214"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag3" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag:organization@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag131827701&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag4" id="d4d8bdf9-8017-4e1f-b049-75d6ba116a1a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag4" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag:person@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag131827702&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag5" id="5b6ded52-ba9f-491c-8971-f0acf930e9f8"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag5" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag:unknown@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag131827703&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag6" id="a2c12149-79f5-426f-b1e0-95edf3947bef"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag6" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag:topic.ewf,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag131827705&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag7" id="a3cfbbe7-545b-4c6b-a3c0-80bc8f7d51b0"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag7" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag:livelabels@escenic.com,2015</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag131827707&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetRetriveTagURIs" id="ecf864c7-297c-4f3c-843e-e5ac188f9f75"><con:settings/><con:config><script>def testStepname;
def createdtestStepname;
def deleteTagStep;
def RetriveTagURI;
int idx=0;
def MAX_TEST_STEP=8;
def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			idx++;
		}
	};
for(int i=0;i&lt;idx;i++)
{
	testStepname = "RetriveCreatedTag"+(i%MAX_TEST_STEP).toString();
	createdtestStepname = "CreateTag"+(i%MAX_TEST_STEP).toString();
	def testCase =context.testCase;
	def httpResponseHeaders = context.testCase.testSteps[createdtestStepname].testRequest.response.responseHeaders;
	RetriveTagURI = httpResponseHeaders["Location"][0];
	context.testCase.testSteps[testStepname].setPropertyValue("EndPoint",RetriveTagURI);
	
}</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag0" id="2d207915-d517-44d4-8a6d-179ab16c3d42"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag/tag:places.ewf,2014:TestTag131827708</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag1" id="84c1274f-3e9b-4cb5-9065-e1846de46cff"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag/tag:entity@example.com,2011:TestTag131827697</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bfb5d953-5abd-4405-9461-e3dec9f91207" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag2" id="5b297535-b23f-41e6-b631-1b885882e186"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag/tag:location@example.com,2011:TestTag131827699</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bfb5d953-5abd-4405-9461-e3dec9f91207" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag3" id="8d50ae4a-dd2e-43ed-a4a6-c3273aa07588"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag/tag:organization@example.com,2011:TestTag131827701</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bfb5d953-5abd-4405-9461-e3dec9f91207" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag4" id="d478cebf-c641-4e7c-bedf-df0940f10854"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag/tag:person@example.com,2011:TestTag131827702</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bfb5d953-5abd-4405-9461-e3dec9f91207" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag5" id="82d30a68-ec55-4b3b-9a90-7c686579e32c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag/tag:unknown@example.com,2011:TestTag131827703</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bfb5d953-5abd-4405-9461-e3dec9f91207" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag6" id="59771ca3-dcbc-46dd-ad9e-33b2debdb63a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag/tag:topic.ewf,2011:TestTag131827705</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bfb5d953-5abd-4405-9461-e3dec9f91207" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag7" id="07b413c0-318e-496b-933f-5ffd3dac13c4"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag7" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag/tag:livelabels@escenic.com,2015:TestTag131827707</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="bfb5d953-5abd-4405-9461-e3dec9f91207" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="TagSearchDesc" id="04a42307-f98b-434e-b72d-8bb5c9f698b7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="97bfa3c5-2780-4073-a84d-53a4546c39f1" name="TagSearchDesc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/open-search/tag-search-description.xml</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="caec310f-37dc-4c51-b6a5-28e980ec765e" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetTagSearchURIs" id="fa1f7e7c-57ea-4c0f-8601-13bf6774678f"><con:settings/><con:config><script><![CDATA[def response = context.expand('${TagSearchDesc#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Search_URI;
def tagSearch;

def html_search;
int URL_FOUND=0;
int MAX_TEST_STEP=7;
int idx=0;

def TagFeedResponse = context.expand('${GetTagFeed#Response}');
def TagFeedxml = new XmlParser().parseText(TagFeedResponse);
TagFeedxml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			idx++;
		}
	};

xml.breadthFirst().
each {
		if(it.name().toString().contains("Url") && URL_FOUND==0 && it.@'type'=="application/atom+xml")
		{
			Tag_Search_URI = it.@'template';
			URL_FOUND=1;
		}
	};

if(Tag_Search_URI)
{
	Tag_Search_URI = Tag_Search_URI.substring(0, Tag_Search_URI.indexOf("{searchTerms}"));
	for(int i=0;i<idx;i++)
	{
		
		testStepname = "RetriveCreatedTag"+(i%MAX_TEST_STEP).toString();
		response = context.testCase.testSteps[testStepname].getPropertyValue("Response");
		def tag_xml = new XmlParser().parseText(response);
		tag_xml.breadthFirst().each {
			if(it.@'rel'!=null && it.@'rel'=="self")
			{
				if(it.@'title'.toString().contains("TestTag"))
				{
					tagSearch = it.@'title'.toString();
				}
			}
		};

		//project.testSuites['TagTest'].testCases['TagSearchTest'].testSteps["Properties"].
		context.testCase.testSteps["Properties"].setPropertyValue("TAG-"+(i%MAX_TEST_STEP).toString(),tagSearch);
		TestSearchTag = "SearchTag"+(i%MAX_TEST_STEP).toString();
		context.testCase.testSteps[TestSearchTag].setPropertyValue("EndPoint",Tag_Search_URI + tagSearch);
		if(i==0 || i==1)
		{
			TestSearchTag = "SearchTag"+(i%MAX_TEST_STEP).toString()+"-dummy";
			context.testCase.testSteps[TestSearchTag].setPropertyValue("EndPoint",Tag_Search_URI + tagSearch);
		}
	}
	
}
]]></script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="dcbb9abf-1e76-4820-8ebb-4e567a6913be"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>TAG-0</con:name><con:value>TestTag131827708</con:value></con:property><con:property><con:name>TAG-1</con:name><con:value>TestTag131827697</con:value></con:property><con:property><con:name>TAG-2</con:name><con:value>TestTag131827699</con:value></con:property><con:property><con:name>TAG-3</con:name><con:value>TestTag131827701</con:value></con:property><con:property><con:name>TAG-4</con:name><con:value>TestTag131827702</con:value></con:property><con:property><con:name>TAG-5</con:name><con:value>TestTag131827703</con:value></con:property><con:property><con:name>TAG-6</con:name><con:value>TestTag131827705</con:value></con:property><con:property><con:name>TAG-7</con:name><con:value>TestTag11473916</con:value></con:property><con:property><con:name>Username</con:name><con:value>qa_admin</con:value></con:property><con:property><con:name>Password</con:name><con:value>admin</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="SearchTag0-dummy" id="6e96ee84-1e8b-47ab-9aee-fb1829089c71"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2c540ccd-2620-40b0-938f-eca113ff01fb" name="SearchTag0-dummy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag/search?searchTerms=TestTag131827708</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8184d1c8-a49f-4421-8758-a090c953c816" name="Script Assertion"><con:configuration><scriptText>import groovy.xml.*

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
//testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
//String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
//String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
//project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
//project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
//project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	log.info "PASS";
}
else
{
	log.info "FAIL";
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchTag1-dummy" id="a60146f6-0b1f-4a62-bb0b-0fa705e0d0dc"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2c540ccd-2620-40b0-938f-eca113ff01fb" name="SearchTag1-dummy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag/search?searchTerms=TestTag131827697</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8184d1c8-a49f-4421-8758-a090c953c816" name="Script Assertion"><con:configuration><scriptText>import groovy.xml.*

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
//testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
//String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
//String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
//project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
//project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
//project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	log.info "PASS";
}
else
{
	log.info "FAIL";
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="delay" name="10000" id="9e751231-5bf3-48f7-8844-90a2dcb20465"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="httprequest" name="SearchTag0" id="92c2afc5-94cb-4e15-a65f-3abc60269dd6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2c540ccd-2620-40b0-938f-eca113ff01fb" name="SearchTag0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag/search?searchTerms=TestTag131827708</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8184d1c8-a49f-4421-8758-a090c953c816" name="Script Assertion"><con:configuration><scriptText>import groovy.xml.*

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);


boolean CheckTagID(response)
{
	def tmpxml = new XmlParser().parseText(response);
	def title;
	String testNum = context.getCurrentStep().getLabel();
	testNum = testNum.replace("SearchTag","");
	def createdTagTitle=context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum);
	boolean res = false;
	tmpxml.breadthFirst().each
	{
		if(it.name().toString().contains("title"))
		{
			title = it.value()[0];
			title = title.trim();
			log.info title;
			if(title.toString().size()==createdTagTitle.toString().size())
			res = true;
		}
	}
	return res;
}
if(httpStatusCode=="200")
{
	def Response = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("Response");
	
	def xml = new XmlParser().parseText(Response);
	String testNum = context.getCurrentStep().getLabel();
	testNum = testNum.replace("SearchTag","");
	int totalResult=0;
	xml.breadthFirst().each{
		if(it.name().toString().contains("totalResults"))
		totalResult = it.value()[0].toInteger();
		}

		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+totalResult.toString()+" tag result.");
		if(totalResult>=1)
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
			if(CheckTagID(Response)==true)
			{
				testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
			}	
			else
			{
				testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
				project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Not Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
			}
				
		}
		else
		{
			testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
		}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchTag1" id="804a1d03-f8fc-4452-ac29-ae0a095fab23"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2c540ccd-2620-40b0-938f-eca113ff01fb" name="SearchTag1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag/search?searchTerms=TestTag131827697</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8184d1c8-a49f-4421-8758-a090c953c816" name="Script Assertion"><con:configuration><scriptText>import groovy.xml.*

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);


boolean CheckTagID(response)
{
	def tmpxml = new XmlParser().parseText(response);
	def title;
	String testNum = context.getCurrentStep().getLabel();
	testNum = testNum.replace("SearchTag","");
	def createdTagTitle=context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum);
	boolean res = false;
	tmpxml.breadthFirst().each
	{
		if(it.name().toString().contains("title"))
		{
			title = it.value()[0];
			title = title.trim();
			log.info title;
			if(title.toString().size()==createdTagTitle.toString().size())
			res = true;
		}
	}
	return res;
}
if(httpStatusCode=="200")
{
	def Response = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("Response");
	
	def xml = new XmlParser().parseText(Response);
	String testNum = context.getCurrentStep().getLabel();
	testNum = testNum.replace("SearchTag","");
	int totalResult=0;
	xml.breadthFirst().each{
		if(it.name().toString().contains("totalResults"))
		totalResult = it.value()[0].toInteger();
		}

		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+totalResult.toString()+" tag result.");
		if(totalResult>=1)
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
			if(CheckTagID(Response)==true)
			{
				testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
			}	
			else
			{
				testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
				project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Not Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
			}
				
		}
		else
		{
			testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
		}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchTag2" id="0ebf4926-d47f-4da6-9dbd-69d1d20e2fe0"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2c540ccd-2620-40b0-938f-eca113ff01fb" name="SearchTag2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag/search?searchTerms=TestTag131827699</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8184d1c8-a49f-4421-8758-a090c953c816" name="Script Assertion"><con:configuration><scriptText>import groovy.xml.*

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);


boolean CheckTagID(response)
{
	def tmpxml = new XmlParser().parseText(response);
	def title;
	String testNum = context.getCurrentStep().getLabel();
	testNum = testNum.replace("SearchTag","");
	def createdTagTitle=context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum);
	boolean res = false;
	tmpxml.breadthFirst().each
	{
		if(it.name().toString().contains("title"))
		{
			title = it.value()[0];
			title = title.trim();
			log.info title;
			if(title.toString().size()==createdTagTitle.toString().size())
			res = true;
		}
	}
	return res;
}
if(httpStatusCode=="200")
{
	def Response = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("Response");
	
	def xml = new XmlParser().parseText(Response);
	String testNum = context.getCurrentStep().getLabel();
	testNum = testNum.replace("SearchTag","");
	int totalResult=0;
	xml.breadthFirst().each{
		if(it.name().toString().contains("totalResults"))
		totalResult = it.value()[0].toInteger();
		}

		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+totalResult.toString()+" tag result.");
		if(totalResult>=1)
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
			if(CheckTagID(Response)==true)
			{
				testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
			}	
			else
			{
				testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
				project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Not Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
			}
				
		}
		else
		{
			testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
		}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchTag3" id="06ff47b0-df93-4fcb-8613-7ac1badcc791"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2c540ccd-2620-40b0-938f-eca113ff01fb" name="SearchTag3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag/search?searchTerms=TestTag131827701</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8184d1c8-a49f-4421-8758-a090c953c816" name="Script Assertion"><con:configuration><scriptText>import groovy.xml.*

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);


boolean CheckTagID(response)
{
	def tmpxml = new XmlParser().parseText(response);
	def title;
	String testNum = context.getCurrentStep().getLabel();
	testNum = testNum.replace("SearchTag","");
	def createdTagTitle=context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum);
	boolean res = false;
	tmpxml.breadthFirst().each
	{
		if(it.name().toString().contains("title"))
		{
			title = it.value()[0];
			title = title.trim();
			log.info title;
			if(title.toString().size()==createdTagTitle.toString().size())
			res = true;
		}
	}
	return res;
}
if(httpStatusCode=="200")
{
	def Response = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("Response");
	
	def xml = new XmlParser().parseText(Response);
	String testNum = context.getCurrentStep().getLabel();
	testNum = testNum.replace("SearchTag","");
	int totalResult=0;
	xml.breadthFirst().each{
		if(it.name().toString().contains("totalResults"))
		totalResult = it.value()[0].toInteger();
		}

		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+totalResult.toString()+" tag result.");
		if(totalResult>=1)
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
			if(CheckTagID(Response)==true)
			{
				testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
			}	
			else
			{
				testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
				project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Not Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
			}
				
		}
		else
		{
			testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
		}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchTag4" id="7a8b7cdd-7c6d-465b-89bb-9c93a60cabbe"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2c540ccd-2620-40b0-938f-eca113ff01fb" name="SearchTag4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag/search?searchTerms=TestTag131827702</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8184d1c8-a49f-4421-8758-a090c953c816" name="Script Assertion"><con:configuration><scriptText>import groovy.xml.*

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);


boolean CheckTagID(response)
{
	def tmpxml = new XmlParser().parseText(response);
	def title;
	String testNum = context.getCurrentStep().getLabel();
	testNum = testNum.replace("SearchTag","");
	def createdTagTitle=context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum);
	boolean res = false;
	tmpxml.breadthFirst().each
	{
		if(it.name().toString().contains("title"))
		{
			title = it.value()[0];
			title = title.trim();
			log.info title;
			if(title.toString().size()==createdTagTitle.toString().size())
			res = true;
		}
	}
	return res;
}
if(httpStatusCode=="200")
{
	def Response = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("Response");
	
	def xml = new XmlParser().parseText(Response);
	String testNum = context.getCurrentStep().getLabel();
	testNum = testNum.replace("SearchTag","");
	int totalResult=0;
	xml.breadthFirst().each{
		if(it.name().toString().contains("totalResults"))
		totalResult = it.value()[0].toInteger();
		}

		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+totalResult.toString()+" tag result.");
		if(totalResult>=1)
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
			if(CheckTagID(Response)==true)
			{
				testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
			}	
			else
			{
				testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
				project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Not Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
			}
				
		}
		else
		{
			testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
		}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchTag5" id="f32170ff-d452-4213-8ff4-ff55ffb1648e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2c540ccd-2620-40b0-938f-eca113ff01fb" name="SearchTag5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag/search?searchTerms=TestTag131827703</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8184d1c8-a49f-4421-8758-a090c953c816" name="Script Assertion"><con:configuration><scriptText>import groovy.xml.*

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);


boolean CheckTagID(response)
{
	def tmpxml = new XmlParser().parseText(response);
	def title;
	String testNum = context.getCurrentStep().getLabel();
	testNum = testNum.replace("SearchTag","");
	def createdTagTitle=context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum);
	boolean res = false;
	tmpxml.breadthFirst().each
	{
		if(it.name().toString().contains("title"))
		{
			title = it.value()[0];
			title = title.trim();
			log.info title;
			if(title.toString().size()==createdTagTitle.toString().size())
			res = true;
		}
	}
	return res;
}
if(httpStatusCode=="200")
{
	def Response = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("Response");
	
	def xml = new XmlParser().parseText(Response);
	String testNum = context.getCurrentStep().getLabel();
	testNum = testNum.replace("SearchTag","");
	int totalResult=0;
	xml.breadthFirst().each{
		if(it.name().toString().contains("totalResults"))
		totalResult = it.value()[0].toInteger();
		}

		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+totalResult.toString()+" tag result.");
		if(totalResult>=1)
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
			if(CheckTagID(Response)==true)
			{
				testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
			}	
			else
			{
				testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
				project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Not Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
			}
				
		}
		else
		{
			testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
		}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchTag6" id="8a3d72b2-811a-4639-b75b-3a3aa21fbdc8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2c540ccd-2620-40b0-938f-eca113ff01fb" name="SearchTag6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag/search?searchTerms=TestTag131827705</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8184d1c8-a49f-4421-8758-a090c953c816" name="Script Assertion"><con:configuration><scriptText>import groovy.xml.*

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);


boolean CheckTagID(response)
{
	def tmpxml = new XmlParser().parseText(response);
	def title;
	String testNum = context.getCurrentStep().getLabel();
	testNum = testNum.replace("SearchTag","");
	def createdTagTitle=context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum);
	boolean res = false;
	tmpxml.breadthFirst().each
	{
		if(it.name().toString().contains("title"))
		{
			title = it.value()[0];
			title = title.trim();
			log.info title;
			if(title.toString().size()==createdTagTitle.toString().size())
			res = true;
		}
	}
	return res;
}
if(httpStatusCode=="200")
{
	def Response = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("Response");
	
	def xml = new XmlParser().parseText(Response);
	String testNum = context.getCurrentStep().getLabel();
	testNum = testNum.replace("SearchTag","");
	int totalResult=0;
	xml.breadthFirst().each{
		if(it.name().toString().contains("totalResults"))
		totalResult = it.value()[0].toInteger();
		}

		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+totalResult.toString()+" tag result.");
		if(totalResult>=1)
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
			if(CheckTagID(Response)==true)
			{
				testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
			}	
			else
			{
				testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
				project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Not Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
			}
				
		}
		else
		{
			testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
		}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SearchTag7" id="f2a2f8d7-86fb-41df-b542-9d7ffc17072b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2c540ccd-2620-40b0-938f-eca113ff01fb" name="SearchTag7" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-belinda:8080/webservice/escenic/classification/tag/search?searchTerms=TestTag11473916</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="8184d1c8-a49f-4421-8758-a090c953c816" name="Script Assertion"><con:configuration><scriptText>import groovy.xml.*

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);


boolean CheckTagID(response)
{
	def tmpxml = new XmlParser().parseText(response);
	def title;
	String testNum = context.getCurrentStep().getLabel();
	testNum = testNum.replace("SearchTag","");
	def createdTagTitle=context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum);
	boolean res = false;
	tmpxml.breadthFirst().each
	{
		if(it.name().toString().contains("title"))
		{
			title = it.value()[0];
			title = title.trim();
			log.info title;
			if(title.toString().size()==createdTagTitle.toString().size())
			res = true;
		}
	}
	return res;
}
if(httpStatusCode=="200")
{
	def Response = context.testCase.testSteps[context.getCurrentStep().getLabel()].getPropertyValue("Response");
	
	def xml = new XmlParser().parseText(Response);
	String testNum = context.getCurrentStep().getLabel();
	testNum = testNum.replace("SearchTag","");
	int totalResult=0;
	xml.breadthFirst().each{
		if(it.name().toString().contains("totalResults"))
		totalResult = it.value()[0].toInteger();
		}

		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found "+totalResult.toString()+" tag result.");
		if(totalResult>=1)
		{
			project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
			if(CheckTagID(Response)==true)
			{
				testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
			}	
			else
			{
				testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
				project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Not Found tag : "+context.testCase.testSteps["Properties"].getPropertyValue("TAG-"+testNum).toString());
			}
				
		}
		else
		{
			testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
		}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="fcb240c7-c3bc-4237-b8b6-3efef604350b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TagMergeTest" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="d0b0ab30-60e7-4f77-a7b9-2d1ed579ebb7"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="acaeab0e-1a70-4a2c-a432-1388bb03e994"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseWebservices" id="b8bc6eee-5522-4e7b-a52a-d01eb8d88425"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Search_Description_URI;
def Tag_Feed_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-search-description")
		{
			Tag_Search_Description_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-feed")
		{
			Tag_Feed_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

log.info Tag_Search_Description_URI;
context.testCase.testSteps["GetTagFeed"].setPropertyValue("EndPoint",Tag_Feed_URI);
context.testCase.testSteps["TagSearchDesc"].setPropertyValue("EndPoint",Tag_Search_Description_URI);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetTagFeed" id="3447005b-b2ba-4df2-82fb-65988c00eaeb"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetTagFeed" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="TagSearchDesc" id="f6c765d2-13d4-4e94-b51f-23a362c82356"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="97bfa3c5-2780-4073-a84d-53a4546c39f1" name="TagSearchDesc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/open-search/tag-search-description.xml</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="caec310f-37dc-4c51-b6a5-28e980ec765e" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetTagURIs" id="53da5692-7424-43ba-bd82-c93bb013a54a"><con:settings/><con:config><script>def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Title=new String[20];
def Tag_URI=new String[20];
def testStepname;
def testStepname2;
int idx=0;
def tagtitle;
def request;
def MAX_TEST_STEP=8;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+""+calendar.get(Calendar.MINUTE)+""+calendar.get(Calendar.SECOND)+""+calendar.get(Calendar.MILLISECOND);
	return time;
}

xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			Tag_URI[idx] = it.'link'.@'href'[0];
			idx++;
		}
	};
log.info idx;
for(int i=0;i&lt;idx;i++)
{
	testStepname = "CreateTag"+(i%MAX_TEST_STEP).toString();
	testStepname2 = "CreateAnotherTag"+(i%MAX_TEST_STEP).toString();
	
	context.testCase.testSteps[testStepname].setPropertyValue("EndPoint",Tag_URI[i]);
	context.testCase.testSteps[testStepname2].setPropertyValue("EndPoint",Tag_URI[i]);
	
	request = context.testCase.testSteps[testStepname].getPropertyValue("Request");
	for(int j=0;j&lt;2;j++)
	{
		def tag_xml = new XmlParser().parseText(request);
		if(j==0)
		tagtitle = "TestTag"+GetTime();
		else
		tagtitle = "TestTagAnother"+GetTime();
		tag_xml.'title'[0].value = tagtitle;
		def stringWriter = new StringWriter();
		def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
		printer.preserveWhitespace=true;
		printer.print(tag_xml);
		String newXml = stringWriter.toString();
		if(j==0)
		context.testCase.testSteps[testStepname].setPropertyValue("Request",newXml);
		else
		context.testCase.testSteps[testStepname2].setPropertyValue("Request",newXml);
	}
}
</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag0" id="5bbafe57-9b22-4c83-be2e-a84e13decc3a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag0" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:places.ewf,2014</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag11497968&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateAnotherTag0" id="319fd3d1-ef20-4f1b-9970-90bf6851ff88"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateAnotherTag0" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:places.ewf,2014</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTagAnother11497969&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag1" id="d147f0f5-8f45-43f6-973a-59b01f9f5c34"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag1" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:entity@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag11497948&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateAnotherTag1" id="f24671f2-5065-4e83-a98b-0fc8a97224d0"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateAnotherTag1" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:entity@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTagAnother11497949&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag2" id="9e9497b3-1fba-4a84-b3f7-91ec6966b5cc"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag2" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:location@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag11497951&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateAnotherTag2" id="1e2d795c-267f-467b-9d44-5860d2f96f26"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateAnotherTag2" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:location@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTagAnother11497952&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag3" id="5a095e46-bd82-428d-97b9-25d5f398f3dc"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag3" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:organization@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag11497954&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateAnotherTag3" id="b13bcc2d-7882-4ab6-9487-28a8a369ff16"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateAnotherTag3" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:organization@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTagAnother11497955&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag4" id="a97587b0-2b04-4335-8576-f6522da25b53"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag4" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:person@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag11497957&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateAnotherTag4" id="4119f88e-e40c-4cc9-bcfd-9e5bb2ceee1b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateAnotherTag4" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:person@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTagAnother11497958&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag5" id="d028727a-2604-4aa1-ae41-7b0d2ab5b9c8"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag5" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:unknown@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag11497960&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateAnotherTag5" id="e6cb44cf-8073-4cbd-8697-1b2167d44f82"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateAnotherTag5" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:unknown@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTagAnother11497961&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag6" id="e8b086bb-f0da-45ac-9cf5-ea052c9a066b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag6" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:topic.ewf,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag11497962&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateAnotherTag6" id="98fda2a3-7088-4c91-884f-3bbb9a3ba87a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateAnotherTag6" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:topic.ewf,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTagAnother11497964&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag7" id="6a6e51f8-5005-4535-b3eb-5dc4530ce3e5"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag7" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:livelabels@escenic.com,2015</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag11497965&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateAnotherTag7" id="318a326d-acf5-49e0-9227-f7aba23e6fc5"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateAnotherTag7" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:livelabels@escenic.com,2015</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTagAnother11497966&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetRetriveTagURIs" id="be947998-6ca1-4383-b123-28e897ff7a58"><con:settings/><con:config><script>def testStepname;
def createdtestStepname;
def deleteTagStep;
def RetriveTagURI;
int idx=0;
def MAX_TEST_STEP=8;
def testCase;
def httpResponseHeaders;
def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			idx++;
		}
	};
for(int i=0;i&lt;idx;i++)
{
	testStepname = "RetriveCreatedTag"+(i%MAX_TEST_STEP).toString();
	createdtestStepname = "CreateTag"+(i%MAX_TEST_STEP).toString();
	testCase =context.testCase;
	httpResponseHeaders = context.testCase.testSteps[createdtestStepname].testRequest.response.responseHeaders;
	RetriveTagURI = httpResponseHeaders["Location"][0];
	context.testCase.testSteps[testStepname].setPropertyValue("EndPoint",RetriveTagURI);

	testStepname = "RetriveAnotherCreatedTag"+(i%MAX_TEST_STEP).toString();
	createdtestStepname = "CreateAnotherTag"+(i%MAX_TEST_STEP).toString();
	testCase =context.testCase;
	//log.info createdtestStepname;
	httpResponseHeaders = context.testCase.testSteps[createdtestStepname].testRequest.response.responseHeaders;
	log.info createdtestStepname+ " : " +httpResponseHeaders;
	RetriveTagURI = httpResponseHeaders["Location"][0];
	context.testCase.testSteps[testStepname].setPropertyValue("EndPoint",RetriveTagURI);
}</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag0" id="01ef778a-a812-4da7-9ef8-f7047c5efd0e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:places.ewf,2014:TestTag11497968</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveAnotherCreatedTag0" id="8dbdc59f-0a52-4676-8526-f66bdbf247c1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveAnotherCreatedTag0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:places.ewf,2014:TestTagAnother11497969</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag1" id="dedb2f31-1428-40bf-9434-6623be53f31f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:entity@example.com,2011:TestTag11497948</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveAnotherCreatedTag1" id="21a76f28-9dfe-49da-8ad6-eb3cabb96bc7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveAnotherCreatedTag1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:entity@example.com,2011:TestTagAnother11497949</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag2" id="4a21ce80-2eaf-4487-b8bf-de828ba68fc9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:location@example.com,2011:TestTag11497951</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveAnotherCreatedTag2" id="65dff85d-a296-40ec-b1be-475ecb3def33"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveAnotherCreatedTag2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:location@example.com,2011:TestTagAnother11497952</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag3" id="7a7bbebf-c7db-48ac-954d-3b9bf2f7914a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:organization@example.com,2011:TestTag11497954</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveAnotherCreatedTag3" id="e558728b-f047-4198-be98-9f90b0e74a6c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveAnotherCreatedTag3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:organization@example.com,2011:TestTagAnother11497955</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag4" id="70112f60-3461-483d-b7c5-11596d2fca84"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:person@example.com,2011:TestTag11497957</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveAnotherCreatedTag4" id="d6299208-1371-44f6-931b-307ddbf5ec28"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveAnotherCreatedTag4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:person@example.com,2011:TestTagAnother11497958</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag5" id="aa0075e1-4a03-4f72-a8a3-e306605d2217"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:unknown@example.com,2011:TestTag11497960</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveAnotherCreatedTag5" id="8e5b076c-8ae3-40bc-8f38-c16c5abf6ec5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveAnotherCreatedTag5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:unknown@example.com,2011:TestTagAnother11497961</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag6" id="5f312373-7a23-4232-92f1-f6aab3573746"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:topic.ewf,2011:TestTag11497962</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveAnotherCreatedTag6" id="d143c87d-c86f-470c-8e8e-b59670387bc3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveAnotherCreatedTag6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:topic.ewf,2011:TestTagAnother11497964</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag7" id="2521ab8c-0d99-48b1-a5fd-d5f127f856be"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag7" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:livelabels@escenic.com,2015:TestTag11497965</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveAnotherCreatedTag7" id="aa254a7c-c441-49f0-a41b-3e3e94d31c44"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveAnotherCreatedTag7" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:livelabels@escenic.com,2015:TestTagAnother11497966</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="EditMergeTags" id="ba5b2176-304b-4857-b9bb-f0fd0b5a1035"><con:settings/><con:config><script>def testStepname;
def createdtestStepname;
def deleteTagStep;
def RetriveTagURI;
int idx=0;
def MAX_TEST_STEP=8;
def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			idx++;
		}
	};

def GetTagID(response_)
{
	def tmp=new XmlParser().parseText(response_);
	def id;
	tmp.breadthFirst().each
	{
		if(it.name().toString().contains("id"))
		id = it.value()[0];
	}
	return id;
}
for(int i=0;i&lt;idx;i++)
{
	RetriveTag = "RetriveCreatedTag"+(i%MAX_TEST_STEP).toString();
	RetriveAnotherTag = "RetriveAnotherCreatedTag"+(i%MAX_TEST_STEP).toString();

	def RetriveTagResponse = context.testCase.testSteps[RetriveTag].getPropertyValue("Response");
	def RetriveAnotherTagResponse = context.testCase.testSteps[RetriveAnotherTag].getPropertyValue("Response");

	href_val = GetTagID(RetriveTagResponse);
	href_val2 = GetTagID(RetriveAnotherTagResponse);
	log.info "val = "+ href_val;
	log.info "val2 = "+ href_val2;
	
	MergeTagStep = "MergeTag"+(i%MAX_TEST_STEP).toString();
	tag_response = context.testCase.testSteps[MergeTagStep].getPropertyValue("Request");
	def tag_xml = new XmlParser().parseText(tag_response);
	int FOUND=0;
	tag_xml.breadthFirst().each
	{
		if(it.@'name'=="tag")
		{
			it.'origin'.@'href'=href_val;//GetTagID(RetriveTagResponse);
		}
		else if(it.@'name'=="with")
		{
			it.'origin'.@'href'=href_val2;//GetTagID(RetriveAnotherTagResponse);;
		}
	};
	def stringWriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
	printer.preserveWhitespace=true;
	printer.print(tag_xml);
	def newXml = stringWriter.toString();
	
	context.testCase.testSteps[MergeTagStep].setPropertyValue("Request",newXml);
}</script></con:config></con:testStep><con:testStep type="groovy" name="SetMergeURI" id="c71f998b-c6c3-44a1-908d-f65b3fdc88b3"><con:settings/><con:config><script>def testStepname;
def createdtestStepname;
def deleteTagStep;
def RetriveTagURI;
int idx=0;
def MAX_TEST_STEP=8;
def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			idx++;
		}
	};

for(int i=0;i&lt;idx;i++)
{
	RetriveTag = "RetriveCreatedTag"+(i%MAX_TEST_STEP).toString();
	MergeTagStep = "MergeTag"+(i%MAX_TEST_STEP).toString();

	def RetriveTagResponse = context.testCase.testSteps[RetriveTag].getPropertyValue("Response");
	def tmp=new XmlParser().parseText(RetriveTagResponse);
	
	tmp.breadthFirst().each
	{
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="http://www.vizrt.com/types/relation/merge")
		{
			context.testCase.testSteps[MergeTagStep].setPropertyValue("EndPoint",it.@'href');
		}
	}
}
</script></con:config></con:testStep><con:testStep type="httprequest" name="MergeTag0" id="5a94961c-5457-4974-bd08-de8116b1f6ee"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="3d84683d-09e6-4496-be0d-6c20ae54b282" name="MergeTag0" postQueryString="false" mediaType="application/vnd.vizrt.payload+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/merge</con:endpoint><con:request><![CDATA[<payload xmlns="http://www.vizrt.com/types">
  <field name="merge">
    <list>
      <payload>
        <field name="tag">
          <origin href="tag:places.ewf,2014:TestTag11497968"/>
        </field>
      </payload>
    </list>
  </field>
  <field name="with">
    <origin href="tag:places.ewf,2014:TestTagAnother11497969"/>
  </field>
</payload>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8ed36fd3-132f-46be-ad68-eb595f8c5a4a" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="MergeTag1" id="c97d1d0f-dfa8-46b5-b675-f95ebbbdf798"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="3d84683d-09e6-4496-be0d-6c20ae54b282" name="MergeTag1" postQueryString="false" mediaType="application/vnd.vizrt.payload+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/merge</con:endpoint><con:request><![CDATA[<payload xmlns="http://www.vizrt.com/types">
  <field name="merge">
    <list>
      <payload>
        <field name="tag">
          <origin href="tag:entity@example.com,2011:TestTag11497948"/>
        </field>
      </payload>
    </list>
  </field>
  <field name="with">
    <origin href="tag:entity@example.com,2011:TestTagAnother11497949"/>
  </field>
</payload>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="588a06a4-0cf1-47e2-b211-5f17ecf45ab1" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="MergeTag2" id="be52aef7-b12e-4ece-9026-8c166d88ddd2"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="3d84683d-09e6-4496-be0d-6c20ae54b282" name="MergeTag2" postQueryString="false" mediaType="application/vnd.vizrt.payload+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/merge</con:endpoint><con:request><![CDATA[<payload xmlns="http://www.vizrt.com/types">
  <field name="merge">
    <list>
      <payload>
        <field name="tag">
          <origin href="tag:location@example.com,2011:TestTag11497951"/>
        </field>
      </payload>
    </list>
  </field>
  <field name="with">
    <origin href="tag:location@example.com,2011:TestTagAnother11497952"/>
  </field>
</payload>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="588a06a4-0cf1-47e2-b211-5f17ecf45ab1" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="MergeTag3" id="aa6b9f38-e88e-44f0-9b29-55b6412050ef"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="3d84683d-09e6-4496-be0d-6c20ae54b282" name="MergeTag3" postQueryString="false" mediaType="application/vnd.vizrt.payload+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/merge</con:endpoint><con:request><![CDATA[<payload xmlns="http://www.vizrt.com/types">
  <field name="merge">
    <list>
      <payload>
        <field name="tag">
          <origin href="tag:organization@example.com,2011:TestTag11497954"/>
        </field>
      </payload>
    </list>
  </field>
  <field name="with">
    <origin href="tag:organization@example.com,2011:TestTagAnother11497955"/>
  </field>
</payload>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="588a06a4-0cf1-47e2-b211-5f17ecf45ab1" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="MergeTag4" id="72270032-9185-4c2d-83c7-456951ae062c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="3d84683d-09e6-4496-be0d-6c20ae54b282" name="MergeTag4" postQueryString="false" mediaType="application/vnd.vizrt.payload+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/merge</con:endpoint><con:request><![CDATA[<payload xmlns="http://www.vizrt.com/types">
  <field name="merge">
    <list>
      <payload>
        <field name="tag">
          <origin href="tag:person@example.com,2011:TestTag11497957"/>
        </field>
      </payload>
    </list>
  </field>
  <field name="with">
    <origin href="tag:person@example.com,2011:TestTagAnother11497958"/>
  </field>
</payload>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="588a06a4-0cf1-47e2-b211-5f17ecf45ab1" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="MergeTag5" id="54bf20ce-8ccb-49fb-a6ff-6625355588b3"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="3d84683d-09e6-4496-be0d-6c20ae54b282" name="MergeTag5" postQueryString="false" mediaType="application/vnd.vizrt.payload+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/merge</con:endpoint><con:request><![CDATA[<payload xmlns="http://www.vizrt.com/types">
  <field name="merge">
    <list>
      <payload>
        <field name="tag">
          <origin href="tag:unknown@example.com,2011:TestTag11497960"/>
        </field>
      </payload>
    </list>
  </field>
  <field name="with">
    <origin href="tag:unknown@example.com,2011:TestTagAnother11497961"/>
  </field>
</payload>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="588a06a4-0cf1-47e2-b211-5f17ecf45ab1" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="MergeTag6" id="a7e461e3-1529-4b10-85b8-18ce25d4bccc"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="3d84683d-09e6-4496-be0d-6c20ae54b282" name="MergeTag6" postQueryString="false" mediaType="application/vnd.vizrt.payload+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/merge</con:endpoint><con:request><![CDATA[<payload xmlns="http://www.vizrt.com/types">
  <field name="merge">
    <list>
      <payload>
        <field name="tag">
          <origin href="tag:topic.ewf,2011:TestTag11497962"/>
        </field>
      </payload>
    </list>
  </field>
  <field name="with">
    <origin href="tag:topic.ewf,2011:TestTagAnother11497964"/>
  </field>
</payload>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="588a06a4-0cf1-47e2-b211-5f17ecf45ab1" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="MergeTag7" id="1438f386-3b42-4562-bba3-84b08561627f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="3d84683d-09e6-4496-be0d-6c20ae54b282" name="MergeTag7" postQueryString="false" mediaType="application/vnd.vizrt.payload+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/merge</con:endpoint><con:request><![CDATA[<payload xmlns="http://www.vizrt.com/types">
  <field name="merge">
    <list>
      <payload>
        <field name="tag">
          <origin href="tag:livelabels@escenic.com,2015:TestTag11497965"/>
        </field>
      </payload>
    </list>
  </field>
  <field name="with">
    <origin href="tag:livelabels@escenic.com,2015:TestTagAnother11497966"/>
  </field>
</payload>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="588a06a4-0cf1-47e2-b211-5f17ecf45ab1" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="CheckMergedTags_NonExist" id="353fa31e-c68c-4a27-a1dc-162c8e4d285f"><con:settings/><con:config><script>int idx=0;
def MAX_TEST_STEP=8;

def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);

xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			idx++;
		}
	};

for(int i=0;i&lt;idx;i++)
{
	MergedTag = "RetriveCreatedTag"+(i%MAX_TEST_STEP).toString();
	MergedTagURI = context.testCase.testSteps[MergedTag].getPropertyValue("EndPoint");

	RetriveMergedTag = "RetriveMergedTag"+(i%MAX_TEST_STEP).toString();
	context.testCase.testSteps[RetriveMergedTag].setPropertyValue("EndPoint",MergedTagURI);
	log.info MergedTagURI;
	
}</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveMergedTag0" id="a1fd3a84-c460-4e9e-aeca-4de2aea6255c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="83904896-4835-443e-b97e-b15c72d8b67b" name="RetriveMergedTag0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:places.ewf,2014:TestTag11497968</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="248fbe98-4d2d-4ed2-b160-0bcca61e187f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveMergedTag1" id="49885d67-e0f6-41c0-b589-24700917d4dc"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="83904896-4835-443e-b97e-b15c72d8b67b" name="RetriveMergedTag1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:entity@example.com,2011:TestTag11497948</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="248fbe98-4d2d-4ed2-b160-0bcca61e187f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveMergedTag2" id="8d2f8dbd-6988-459e-b3e2-a684e702a337"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="83904896-4835-443e-b97e-b15c72d8b67b" name="RetriveMergedTag2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:location@example.com,2011:TestTag11497951</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="248fbe98-4d2d-4ed2-b160-0bcca61e187f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveMergedTag3" id="417f41b6-2a40-4f39-973f-da95ffbb5d39"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="83904896-4835-443e-b97e-b15c72d8b67b" name="RetriveMergedTag3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:organization@example.com,2011:TestTag11497954</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="248fbe98-4d2d-4ed2-b160-0bcca61e187f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveMergedTag4" id="408e3468-dd1f-447d-93fe-cff88193646a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="83904896-4835-443e-b97e-b15c72d8b67b" name="RetriveMergedTag4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:person@example.com,2011:TestTag11497957</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="248fbe98-4d2d-4ed2-b160-0bcca61e187f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveMergedTag5" id="aa02fca5-5473-4ca9-a980-bf865f826450"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="83904896-4835-443e-b97e-b15c72d8b67b" name="RetriveMergedTag5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:unknown@example.com,2011:TestTag11497960</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="248fbe98-4d2d-4ed2-b160-0bcca61e187f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveMergedTag6" id="e3f6401b-0903-49e2-9180-53de46b5637a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="83904896-4835-443e-b97e-b15c72d8b67b" name="RetriveMergedTag6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:topic.ewf,2011:TestTag11497962</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="248fbe98-4d2d-4ed2-b160-0bcca61e187f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveMergedTag7" id="c74ef8b9-65cd-426a-b5b7-977c8229b51b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="83904896-4835-443e-b97e-b15c72d8b67b" name="RetriveMergedTag7" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:livelabels@escenic.com,2015:TestTag11497965</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="248fbe98-4d2d-4ed2-b160-0bcca61e187f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1d41e8ef-01e8-4d91-bc09-a24846edb9af" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MergeMultipleTagsWithDiffStruct" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="594943be-f41a-4c5d-b3d3-b9835e646784"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="579160d3-43f5-4d31-92b6-2210ae6abef4"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseWebservices" id="8347c658-6027-43b7-8721-9f9d0aa74808"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Search_Description_URI;
def Tag_Feed_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-search-description")
		{
			Tag_Search_Description_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-feed")
		{
			Tag_Feed_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

log.info Tag_Search_Description_URI;
context.testCase.testSteps["GetTagFeed"].setPropertyValue("EndPoint",Tag_Feed_URI);
context.testCase.testSteps["TagSearchDesc"].setPropertyValue("EndPoint",Tag_Search_Description_URI);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetTagFeed" id="689a0048-345c-40e2-bc20-d08749ec92a3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetTagFeed" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="TagSearchDesc" id="71834eb3-5e55-479e-b369-737ff1fa5ba3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="97bfa3c5-2780-4073-a84d-53a4546c39f1" name="TagSearchDesc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/open-search/tag-search-description.xml</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="caec310f-37dc-4c51-b6a5-28e980ec765e" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetTagURIs" id="b26487cd-c93a-42b7-b3c8-4adcb0706f9e"><con:settings/><con:config><script>def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Title=new String[20];
def Tag_URI=new String[20];
def testStepname;
def testStepname2;
int idx=0;
def tagtitle;
def request;
def MAX_TEST_STEP=8;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+""+calendar.get(Calendar.MINUTE)+""+calendar.get(Calendar.SECOND)+""+calendar.get(Calendar.MILLISECOND);
	return time;
}

xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			Tag_URI[idx] = it.'link'.@'href'[0];
			idx++;
		}
	};
log.info idx;
for(int i=0;i&lt;idx;i++)
{
	testStepname = "CreateTag"+(i%MAX_TEST_STEP).toString();
	context.testCase.testSteps[testStepname].setPropertyValue("EndPoint",Tag_URI[i]);
	//context.testCase.testSteps[testStepname2].setPropertyValue("EndPoint",Tag_URI[i]);
	
	request = context.testCase.testSteps[testStepname].getPropertyValue("Request");
	def tag_xml = new XmlParser().parseText(request);
	tagtitle = "TestTag"+GetTime();
	
	tag_xml.'title'[0].value = tagtitle;
	def stringWriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
	printer.preserveWhitespace=true;
	printer.print(tag_xml);
	String newXml = stringWriter.toString();
	context.testCase.testSteps[testStepname].setPropertyValue("Request",newXml);
}
</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag0" id="594098b9-df9f-4878-833d-0de6de0aa3ab"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag0" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:places.ewf,2014</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114944650&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag1" id="22f892a8-a1f0-476a-bff3-9285d5434509"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag1" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:entity@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114944644&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag2" id="682ce2a6-f84d-4da6-8a33-e5cfce820b6c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag2" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:location@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114944645&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag3" id="3a2abe17-7eb5-4fc1-886a-2862cdabf08b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag3" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:organization@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114944646&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag4" id="0a86139f-ab0b-401b-b312-d318c2d8e666"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag4" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:person@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114944647&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag5" id="544c5086-562d-46bf-818d-d6c621e3fc17"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag5" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:unknown@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114944648&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag6" id="ac3e49f2-421c-4fad-bcc7-b3c9f48ef39a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag6" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:topic.ewf,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114944648&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag7" id="4084ef6c-0275-4c66-b36c-7dad61681796"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag7" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:livelabels@escenic.com,2015</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag114944649&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="EditMergeTags" id="f7e23569-5dde-4e1c-9df7-36220accf835"><con:settings/><con:config><script>def testStepname;
def createdtestStepname;
def deleteTagStep;
def RetriveTagURI;
int idx=0;
def MAX_TEST_STEP=8;
def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);

def TagID = new String[20];

xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			idx++;
		}
	};

def GetTagID(response_)
{
	def tmp=new XmlParser().parseText(response_);
	def id;
	tmp.breadthFirst().each
	{
		if(it.name().toString().contains("id"))
		id = it.value()[0];
	}
	return id;
}
for(int i=0;i&lt;idx;i++)
{
	CreatedTag = "CreateTag"+(i%MAX_TEST_STEP).toString();
	//RetriveAnotherTag = "RetriveAnotherCreatedTag"+(i%MAX_TEST_STEP).toString();

	def CreatedTagResponse = context.testCase.testSteps[CreatedTag].getPropertyValue("Response");
	//def RetriveAnotherTagResponse = context.testCase.testSteps[RetriveAnotherTag].getPropertyValue("Response");

	href_val = GetTagID(CreatedTagResponse);
	//href_val2 = GetTagID(RetriveAnotherTagResponse);
	log.info "val = "+ href_val;
	TagID[i] = href_val;
	//log.info "val2 = "+ href_val2;
	/*
	MergeTagStep = "MergeTag"+(i%MAX_TEST_STEP).toString();
	tag_response = context.testCase.testSteps[MergeTagStep].getPropertyValue("Request");
	def tag_xml = new XmlParser().parseText(tag_response);
	int FOUND=0;
	tag_xml.breadthFirst().each
	{
		if(it.@'name'=="tag")
		{
			it.'origin'.@'href'=href_val;//GetTagID(RetriveTagResponse);
		}
		else if(it.@'name'=="with")
		{
			it.'origin'.@'href'=href_val2;//GetTagID(RetriveAnotherTagResponse);;
		}
	};
	def stringWriter = new StringWriter();
	new XmlNodePrinter(new PrintWriter(stringWriter)).print(tag_xml);
	def newXml = stringWriter.toString();
	
	context.testCase.testSteps[MergeTagStep].setPropertyValue("Request",newXml);
	*/
}

MergeTagStep = "MergeTag";
tag_response = context.testCase.testSteps[MergeTagStep].getPropertyValue("Request");
def tag_xml = new XmlParser().parseText(tag_response);
int count=0;
tag_xml.breadthFirst().each
{
	if(it.@'name'.toString().contains("tag"))
	{
		it.'origin'.@'href'=TagID[count++];
	}
	else if(it.@'name'=="with")
	{
		it.'origin'.@'href'=TagID[count++];//GetTagID(RetriveAnotherTagResponse);;
	}
};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(tag_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps[MergeTagStep].setPropertyValue("Request",newXml);
</script></con:config></con:testStep><con:testStep type="groovy" name="GetRetriveTagURI" id="6404173a-32f2-4760-b38f-85f6884215b8"><con:settings/><con:config><script>CreatedTagStepName = "CreateTag0";
RetriveTagStep = "RetriveCreatedTag";
httpResponseHeaders = context.testCase.testSteps[CreatedTagStepName].testRequest.response.responseHeaders;
RetriveTagURI = httpResponseHeaders["Location"][0];
context.testCase.testSteps[RetriveTagStep].setPropertyValue("EndPoint",RetriveTagURI);</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag" id="d17918c9-92f7-43ba-bb46-23ca720e407f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="1349e3e5-2209-4c65-9045-3f37bbafd327" name="RetriveCreatedTag" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:places.ewf,2014:TestTag114944650</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="b129c259-4509-48b6-9d40-a34f175c893e" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetMergeURI" id="7e7cfc60-61b8-4fe5-b1e4-92340aa34f6d"><con:settings/><con:config><script>def RetriveTagURI;

RetriveTagStep = "RetriveCreatedTag";
MergeTagStep = "MergeTag";

def RetriveTagResponse = context.testCase.testSteps[RetriveTagStep].getPropertyValue("Response");
def tmp=new XmlParser().parseText(RetriveTagResponse);

tmp.breadthFirst().each
{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="http://www.vizrt.com/types/relation/merge")
	{
		context.testCase.testSteps[MergeTagStep].setPropertyValue("EndPoint",it.@'href');
	}
}
</script></con:config></con:testStep><con:testStep type="httprequest" name="MergeTag" id="6c5771fd-226e-40c8-a57b-475ed0156970"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="3d84683d-09e6-4496-be0d-6c20ae54b282" name="MergeTag" postQueryString="false" mediaType="application/vnd.vizrt.payload+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/merge</con:endpoint><con:request><![CDATA[<payload xmlns="http://www.vizrt.com/types">
  <field name="merge">
    <list>
      <payload>
        <field name="tag">
          <origin href="tag:entity@example.com,2011:TestTag114944644"/>
        </field>
        <field name="tag1">
          <origin href="tag:location@example.com,2011:TestTag114944645"/>
        </field>
        <field name="tag2">
          <origin href="tag:organization@example.com,2011:TestTag114944646"/>
        </field>
        <field name="tag3">
          <origin href="tag:person@example.com,2011:TestTag114944647"/>
        </field>
        <field name="tag4">
          <origin href="tag:unknown@example.com,2011:TestTag114944648"/>
        </field>
        <field name="tag5">
          <origin href="tag:topic.ewf,2011:TestTag114944648"/>
        </field>
        <field name="tag6">
          <origin href="tag:livelabels@escenic.com,2015:TestTag114944649"/>
        </field>
      </payload>
    </list>
  </field>
  <field name="with">
    <origin href="tag:places.ewf,2014:TestTag114944650"/>
  </field>
</payload>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8ed36fd3-132f-46be-ad68-eb595f8c5a4a" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","400-Tags must be from same structure.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="400")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="15876e8e-6513-41fb-8eb4-0e0f47e08864" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MergeMultipleTagsWithSameStruct" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="c8d0feda-5b99-4d60-962d-ffcbc938dfc0"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="51810e3d-74a1-40d7-a2df-134e42720e47"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseWebservices" id="94ed556b-01c2-481b-b1a9-997d5c64ddbb"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Search_Description_URI;
def Tag_Feed_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-search-description")
		{
			Tag_Search_Description_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-feed")
		{
			Tag_Feed_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

log.info Tag_Search_Description_URI;
context.testCase.testSteps["GetTagFeed"].setPropertyValue("EndPoint",Tag_Feed_URI);
context.testCase.testSteps["TagSearchDesc"].setPropertyValue("EndPoint",Tag_Search_Description_URI);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetTagFeed" id="ea642847-ed93-4e3b-a189-3272ba80d078"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetTagFeed" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="TagSearchDesc" id="fb96b029-523e-492c-aa23-07e143fdd1db"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="97bfa3c5-2780-4073-a84d-53a4546c39f1" name="TagSearchDesc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/open-search/tag-search-description.xml</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="caec310f-37dc-4c51-b6a5-28e980ec765e" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetTagURIs" id="e36da7f1-1ce0-4984-a845-4537c2e2e664"><con:settings/><con:config><script>def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Title=new String[20];
def Tag_URI=new String[20];
def testStepname;
def testStepname2;
int idx=0;
def tagtitle;
def request;
def MAX_TEST_STEP=8;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+""+calendar.get(Calendar.MINUTE)+""+calendar.get(Calendar.SECOND)+""+calendar.get(Calendar.MILLISECOND);
	return time;
}

xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			Tag_URI[idx] = it.'link'.@'href'[0];
			idx++;
		}
	};
log.info idx;
//for(int i=0;i&lt;idx;i++)
//{
	//context.testCase.testSteps[testStepname2].setPropertyValue("EndPoint",Tag_URI[i]);
	for(int j=0;j&lt;MAX_TEST_STEP;j++)
	{
		testStepname = "CreateTag"+(j).toString();
		context.testCase.testSteps[testStepname].setPropertyValue("EndPoint",Tag_URI[0]);
		request = context.testCase.testSteps[testStepname].getPropertyValue("Request");
		def tag_xml = new XmlParser().parseText(request);
		tagtitle = "TestTag"+(j+1).toString()+GetTime();
		
		tag_xml.'title'[0].value = tagtitle;
		def stringWriter = new StringWriter();
		def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
		printer.preserveWhitespace=true;
		printer.print(tag_xml);
		String newXml = stringWriter.toString();
		context.testCase.testSteps[testStepname].setPropertyValue("Request",newXml);
	}
//}
</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag0" id="b304c901-255e-4b35-9f88-65098773a987"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag0" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:concept@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag111495380&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag1" id="b6db92e6-c9b7-41aa-822e-38fb3e360dae"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag1" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:concept@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag211495382&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag2" id="00c69f33-f4f0-435a-b93d-1e49d63d61ff"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag2" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:concept@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag311495383&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag3" id="8fc018f3-2e39-4090-bb3b-589cf30de3fb"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag3" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:concept@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag411495385&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag4" id="c2859811-4bc2-4dd0-b4d7-3a973ad5f6bc"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag4" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:concept@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag511495386&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag5" id="6b05665d-be77-44f8-9d0a-20d0c8c6cc93"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag5" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:concept@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag611495387&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag6" id="ffe391b5-5289-4e79-9326-ea399283e59f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag6" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:concept@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag711495388&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag7" id="24e4acc0-a316-4256-9b62-71ffdd762e2f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag7" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:concept@example.com,2011</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag811495389&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="EditMergeTags" id="eb7c9537-1be0-4ace-9871-74fe909b345e"><con:settings/><con:config><script>def testStepname;
def createdtestStepname;
def deleteTagStep;
def RetriveTagURI;
int idx=0;
def MAX_TEST_STEP=8;
def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);

def TagID = new String[20];


def GetTagID(response_)
{
	def tmp=new XmlParser().parseText(response_);
	def id;
	tmp.breadthFirst().each
	{
		if(it.name().toString().contains("id"))
		id = it.value()[0];
	}
	return id;
}
for(int i=0;i&lt;MAX_TEST_STEP;i++)
{
	CreatedTag = "CreateTag"+(i%MAX_TEST_STEP).toString();
	def CreatedTagResponse = context.testCase.testSteps[CreatedTag].getPropertyValue("Response");
	href_val = GetTagID(CreatedTagResponse);
	log.info "val = "+ href_val;
	TagID[i] = href_val;
}

MergeTagStep = "MergeTag";
MergeTagAgainStep = "MergeTagAgain";
tag_response = context.testCase.testSteps[MergeTagStep].getPropertyValue("Request");
def tag_xml = new XmlParser().parseText(tag_response);
int count=0;
tag_xml.breadthFirst().each
{
	if(it.@'name'.toString().contains("tag"))
	{
		it.'origin'.@'href'=TagID[count%MAX_TEST_STEP];
		count+=1;
	}
	else if(it.@'name'=="with")
	{
		it.'origin'.@'href'=TagID[count%MAX_TEST_STEP];
		count+=1;
	}
};

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(tag_xml);
def newXml = stringWriter.toString();
context.testCase.testSteps[MergeTagStep].setPropertyValue("Request",newXml);
context.testCase.testSteps[MergeTagAgainStep].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="GetRetriveTagURI" id="b08f87cd-634d-4b2d-b6ca-1e8570c201d7"><con:settings/><con:config><script>CreatedTagStepName = "CreateTag0";
RetriveTagStep = "RetriveCreatedTag";
httpResponseHeaders = context.testCase.testSteps[CreatedTagStepName].testRequest.response.responseHeaders;
RetriveTagURI = httpResponseHeaders["Location"][0];
context.testCase.testSteps[RetriveTagStep].setPropertyValue("EndPoint",RetriveTagURI);</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag" id="628ed7bf-7ed5-4244-a959-e67b8f1452de"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="1349e3e5-2209-4c65-9045-3f37bbafd327" name="RetriveCreatedTag" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:concept@example.com,2011:TestTag111495380</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="b129c259-4509-48b6-9d40-a34f175c893e" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetMergeURI" id="4f74101a-75b9-4b32-8b14-a8ba7d1096fe"><con:settings/><con:config><script>def RetriveTagURI;

RetriveTagStep = "RetriveCreatedTag";
MergeTagStep = "MergeTag";
MergeTagAgainStep = "MergeTagAgain";

def RetriveTagResponse = context.testCase.testSteps[RetriveTagStep].getPropertyValue("Response");
def tmp=new XmlParser().parseText(RetriveTagResponse);

tmp.breadthFirst().each
{
	if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="http://www.vizrt.com/types/relation/merge")
	{
		context.testCase.testSteps[MergeTagStep].setPropertyValue("EndPoint",it.@'href');
		context.testCase.testSteps[MergeTagAgainStep].setPropertyValue("EndPoint",it.@'href');
	}
}
</script></con:config></con:testStep><con:testStep type="httprequest" name="MergeTag" id="09d8e379-6e22-4d2f-938c-3c044e22e2ef"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="3d84683d-09e6-4496-be0d-6c20ae54b282" name="MergeTag" postQueryString="false" mediaType="application/vnd.vizrt.payload+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/merge</con:endpoint><con:request><![CDATA[<payload xmlns="http://www.vizrt.com/types">
  <field name="merge">
    <list>
      <payload>
        <field name="tag">
          <origin href="tag:concept@example.com,2011:TestTag211495382"/>
        </field>
      </payload>
      <payload>
        <field name="tag">
          <origin href="tag:concept@example.com,2011:TestTag311495383"/>
        </field>
      </payload>
      <payload>
        <field name="tag">
          <origin href="tag:concept@example.com,2011:TestTag411495385"/>
        </field>
      </payload>
      <payload>
        <field name="tag">
          <origin href="tag:concept@example.com,2011:TestTag511495386"/>
        </field>
      </payload>
      <payload>
        <field name="tag">
          <origin href="tag:concept@example.com,2011:TestTag611495387"/>
        </field>
      </payload>
      <payload>
        <field name="tag">
          <origin href="tag:concept@example.com,2011:TestTag711495388"/>
        </field>
      </payload>
      <payload>
        <field name="tag">
          <origin href="tag:concept@example.com,2011:TestTag811495389"/>
        </field>
      </payload>
    </list>
  </field>
  <field name="with">
    <origin href="tag:concept@example.com,2011:TestTag111495380"/>
  </field>
</payload>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8ed36fd3-132f-46be-ad68-eb595f8c5a4a" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200-Multiple Tags are merged.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="MergeTagAgain" id="6842c273-1388-4484-92c7-b41071d2fe30"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="3d84683d-09e6-4496-be0d-6c20ae54b282" name="MergeTagAgain" postQueryString="false" mediaType="application/vnd.vizrt.payload+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/merge</con:endpoint><con:request><![CDATA[<payload xmlns="http://www.vizrt.com/types">
  <field name="merge">
    <list>
      <payload>
        <field name="tag">
          <origin href="tag:concept@example.com,2011:TestTag211495382"/>
        </field>
      </payload>
      <payload>
        <field name="tag">
          <origin href="tag:concept@example.com,2011:TestTag311495383"/>
        </field>
      </payload>
      <payload>
        <field name="tag">
          <origin href="tag:concept@example.com,2011:TestTag411495385"/>
        </field>
      </payload>
      <payload>
        <field name="tag">
          <origin href="tag:concept@example.com,2011:TestTag511495386"/>
        </field>
      </payload>
      <payload>
        <field name="tag">
          <origin href="tag:concept@example.com,2011:TestTag611495387"/>
        </field>
      </payload>
      <payload>
        <field name="tag">
          <origin href="tag:concept@example.com,2011:TestTag711495388"/>
        </field>
      </payload>
      <payload>
        <field name="tag">
          <origin href="tag:concept@example.com,2011:TestTag811495389"/>
        </field>
      </payload>
    </list>
  </field>
  <field name="with">
    <origin href="tag:concept@example.com,2011:TestTag111495380"/>
  </field>
</payload>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8ed36fd3-132f-46be-ad68-eb595f8c5a4a" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","400-Merged tags are not found.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="400")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="CheckMergedTags" id="8cfaa38b-c781-45b8-a147-bde864210abb"><con:settings/><con:config><script>int idx=0;
def MAX_TEST_STEP=8;

def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);

def CheckMergedToTag = "CheckMergedToTag";

for(int i=0;i&lt;MAX_TEST_STEP;i++)
{
	CreatedTagStepName = "CreateTag"+(i%MAX_TEST_STEP).toString();
	httpResponseHeaders = context.testCase.testSteps[CreatedTagStepName].testRequest.response.responseHeaders;
	TagURI = httpResponseHeaders["Location"][0];
	
	RetriveMergedTag = "CheckMergedTag"+(i%MAX_TEST_STEP).toString();
	if(i)
	context.testCase.testSteps[RetriveMergedTag].setPropertyValue("EndPoint",TagURI);
	else
	context.testCase.testSteps[CheckMergedToTag].setPropertyValue("EndPoint",TagURI);
	log.info TagURI;
	
}</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckMergedTag1" id="d014afa4-ec92-4e56-b1fb-2467d5e9b21a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c5c69449-95a4-48a5-aa0b-b79786c0b0af" name="CheckMergedTag1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:concept@example.com,2011:TestTag211495382</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="25f67098-70bb-44e0-876e-17d23c16134f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404-Tag not found.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckMergedTag2" id="311f2c77-aea1-4746-93cc-a4a4269b6204"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c5c69449-95a4-48a5-aa0b-b79786c0b0af" name="CheckMergedTag2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:concept@example.com,2011:TestTag311495383</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="25f67098-70bb-44e0-876e-17d23c16134f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404-Tag not found.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckMergedTag3" id="6200fd7f-5d7b-447f-92c5-d07611175d61"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c5c69449-95a4-48a5-aa0b-b79786c0b0af" name="CheckMergedTag3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:concept@example.com,2011:TestTag411495385</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="25f67098-70bb-44e0-876e-17d23c16134f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404-Tag not found.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckMergedTag4" id="dc31dae5-b158-49e4-96f3-90832bfc8bc9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c5c69449-95a4-48a5-aa0b-b79786c0b0af" name="CheckMergedTag4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:concept@example.com,2011:TestTag511495386</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="25f67098-70bb-44e0-876e-17d23c16134f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404-Tag not found.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckMergedTag5" id="0daae318-9ca5-4e8d-b3fa-032cb2b7d46a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c5c69449-95a4-48a5-aa0b-b79786c0b0af" name="CheckMergedTag5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:concept@example.com,2011:TestTag611495387</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="25f67098-70bb-44e0-876e-17d23c16134f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404-Tag not found.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckMergedTag6" id="df45240c-ad87-4bdd-b441-f3c31fe77c86"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c5c69449-95a4-48a5-aa0b-b79786c0b0af" name="CheckMergedTag6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:concept@example.com,2011:TestTag711495388</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="25f67098-70bb-44e0-876e-17d23c16134f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404-Tag not found.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckMergedTag7" id="3a8034f2-1af0-484a-a3b8-5406b8c894cb"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c5c69449-95a4-48a5-aa0b-b79786c0b0af" name="CheckMergedTag7" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:concept@example.com,2011:TestTag811495389</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="25f67098-70bb-44e0-876e-17d23c16134f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404-Tag not found.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckMergedToTag" id="2127c38d-8a6b-49ca-b220-370f7b861b51"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c5c69449-95a4-48a5-aa0b-b79786c0b0af" name="CheckMergedToTag" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:concept@example.com,2011:TestTag111495380</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="25f67098-70bb-44e0-876e-17d23c16134f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */

project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200-Merged Tag found.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6b85f371-77be-46f6-b4c5-566e676888c4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="EditTagNameWithNullValue-VF-4023" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="5e59cb15-7758-454e-833c-9d6fb216c88d"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="0def7679-b284-443e-b71e-0311112fc547"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseWebservices" id="d8138cf4-e1d8-417d-aff5-6869be79802c"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Feed_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-feed")
		{
			Tag_Feed_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

log.info Tag_Feed_URI;
context.testCase.testSteps["GetTagFeed"].setPropertyValue("EndPoint",Tag_Feed_URI);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetTagFeed" id="2ff34d28-061a-4724-8501-def504f6b7ea"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetTagFeed" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetTagURIs" id="20ea7ae3-0787-457d-8a4b-1716f527e5e9"><con:settings/><con:config><script>def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

def response = context.expand('${GetTagFeed#Response}');
def xml = new XmlParser().parseText(response);
def Tag_Title=new String[20];
def Tag_URI=new String[20];
def testStepname="CreateTag";
def retiveTestStepname="RetriveCreatedTag";
def updateTestStepname="UpdateTag";
def testStepname2;
int idx=0;

def request;
def MAX_TEST_STEP=8;

def httpResponseHeaders;
def Location;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+""+calendar.get(Calendar.MINUTE)+""+calendar.get(Calendar.SECOND)+""+calendar.get(Calendar.MILLISECOND);
	return time;
}

def EditTagName()
{
	
	request = context.testCase.testSteps["CreateTag"].getPropertyValue("Request");
	def tag_xml = new XmlParser().parseText(request);
	tag_xml.'title'[0].value="TestTag"+GetTime();
	def stringWriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
	printer.preserveWhitespace=true;
	printer.print(tag_xml);
	String newXml = stringWriter.toString();
	context.testCase.testSteps["CreateTag"].setPropertyValue("Request",newXml);
}

def EditResponse(tagResponse)
{
	def tagResponseXml = new XmlParser().parseText(tagResponse);
	tagResponseXml.breadthFirst().each
	{
		if(it.name().toString().contains("title"))
		it.value="";
	};
	def stringWriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
	printer.preserveWhitespace=true;
	printer.print(tagResponseXml);
	String newXml = stringWriter.toString();
	context.testCase.testSteps["UpdateTag"].setPropertyValue("Request",newXml);
}
xml.breadthFirst().
each {
		if(it.name().toString().contains("entry"))
		{
			Tag_URI[idx] = it.'link'.@'href'[0];
			idx++;
		}
	};
log.info idx;
for(int i=0;i&lt;idx;i++)
{
	context.testCase.testSteps["CreateTag"].setPropertyValue("EndPoint",Tag_URI[i]);
	EditTagName();
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps["CreateTag"]);

	httpResponseHeaders = context.testCase.testSteps["CreateTag"].testRequest.response.responseHeaders
	Location = httpResponseHeaders["Location"][0];
	context.testCase.testSteps["RetriveCreatedTag"].setPropertyValue("EndPoint",Location);
	context.testCase.testSteps["UpdateTag"].setPropertyValue("EndPoint",Location);
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps["RetriveCreatedTag"]);

	tagResponse = context.expand('${RetriveCreatedTag#Response}');
	EditResponse(tagResponse);
	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps["UpdateTag"]);
}
</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateTag" id="4a617d17-8aa5-4d26-a40c-2396df2aaf27"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="78e485e4-3c05-4c20-90a3-80400cab91d2" name="CreateTag" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag:places.ewf,2014</con:endpoint><con:request>&lt;entry xmlns="http://www.w3.org/2005/Atom">
  &lt;title type="text">TestTag115031958&lt;/title>
&lt;/entry>
</con:request><con:assertion type="GroovyScriptAssertion" id="5eb578c9-d292-400e-b215-7534732e295a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["CreateTag"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveCreatedTag" id="0f9448cf-5b60-408e-b8b9-1864800ff727"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b1731c96-5646-4e1d-9f0a-d0c67b5f7d28" name="RetriveCreatedTag" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:places.ewf,2014:TestTag115031958</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4312b34f-90e0-499f-8d31-faaad62fcdc0" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps["RetriveCreatedTag"].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="UpdateTag" id="13a4ce5a-3f35-460a-84d9-e22d557d84c1"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="880289ec-5d81-4ae6-a541-07f9bdd05c36" name="UpdateTag" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/classification/tag/tag:places.ewf,2014:TestTag115031958</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>tag:places.ewf,2014:TestTag115031958</id>
  <title type="text"></title>
  <updated>2018-02-01T05:59:46.000Z</updated>
  <summary type="html" axis2ns392:align="right" xmlns:axis2ns392="http://xmlns.escenic.com/2008/interface-hints">TestTag115031958</summary>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-beta:8080/webservice/escenic/classification/model/tag">
      <vdf:field name="description"/>
      <vdf:field name="aliases">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag/tag:places.ewf,2014:TestTag115031958" rel="self" title="TestTag115031958"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag:places.ewf,2014" rel="http://www.vizrt.com/types/relation/top" title="places"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/tag/children/tag:places.ewf,2014:TestTag115031958" rel="down" title="TestTag115031958" thr:count="0" xmlns:thr="http://purl.org/syndication/thread/1.0"/>
  <link href="http://qa-beta:8080/webservice/escenic/classification/merge" rel="http://www.vizrt.com/types/relation/merge"/>
  <opensearch:Url xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1" template="http://qa-beta:8080/webservice/search/{sectionPath}/{searchTerms}/?pw={startPage?}&amp;c={count?}&amp;tag=tag%3Aplaces.ewf%2C2014%3ATestTag115031958" type="application/atom+xml"/>
  <opensearch:Url xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/" template="http://qa-beta:8080/webservice/escenic/classification/tag/search?searchTerms={searchTerms}&amp;parent=tag%3Aplaces.ewf%2C2014%3ATestTag115031958" type="application/atom+xml" rel="parent"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="88b96925-229a-4b53-a683-019787336956" name="Script Assertion"><con:configuration><scriptText>
def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps["UpdateTag"].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);



/* ****ASSERT STATUS CODE   ******** */
String testStepUrl = context.testCase.testSteps["UpdateTag"].getPropertyValue("EndPoint");
String tagname = testStepUrl.substring(testStepUrl.indexOf("tag:")+"tag:".length());
//tagname = tagname.substring(0,tagname.indexOf("@"));
log.info tagname;
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name","UpdateTag - "+tagname);
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","400 - Tag name can not be Null");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="400")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="95ffe258-10d0-4606-aff5-069d3298cc73" name="PersonTest"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="d9108f15-0cf9-4a6b-aa74-93d4cb8f4e5e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PersonCreateGetDeleteTest" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="9f148e87-ec5b-4434-b4a8-b5659ae44fd3"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="e97ba1ff-25dd-4069-bc92-818b0b74a7f1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="490e665d-16b7-4aa4-be94-ee668fdcb6fd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="59f3ba6c-3fa2-46c6-b16b-7de701d8e80c" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="852b7be2-2862-481c-9b4b-97c7fe003e9c"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}




context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
//context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info content_description_uri;
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="87217d00-686e-4fa1-ad2c-8015d30d0916"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="1e9136b0-ff85-4e1a-8080-0b8d43fe119b" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="2865c1c1-7a99-48ad-9c99-441512e784ee" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetPersonModelAndWebservice" id="a3c19336-80cd-40c3-962d-2381584ac3b1"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');
def content_description_uri,root_section_uri,model,tmp;
int Found=0;
def str1;
def str2;
def person_model;
def person_create_webservice;

while(Found==0)
{
	int Index_newLine = response.indexOf("\n");
	str1 = response.substring(0,Index_newLine);
	if(Index_newLine&lt;response.size())
	{
		str2 = response.substring(Index_newLine+1);
	}
	if(str1.contains("person"))
	{
		person_model = str1;
		break;
	}
	response=str2;
}
person_model = person_model.substring(person_model.indexOf("http"));
person_model = person_model.substring(0 , person_model.indexOf("person")+"person".length());

log.info person_model;

def request = context.expand('${CreatePerson#Request}');
def person_xml = new XmlParser().parseText(request);
person_xml.breadthFirst().each
{
	if(it.@model!=null)
	{
		it.@model=person_model;
		log.info it.@model+"edit";
	}
}

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(person_xml);
def newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreatePerson"].setPropertyValue("Request",newXml);

response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("person") &amp;&amp; Found==0)
		{
			person_create_webservice = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!person_create_webservice.contains(host))
{
	int index = person_create_webservice.indexOf("webservice")+"webservice".length();
	person_create_webservice = host + person_create_webservice.substring(index);
}
context.testCase.testSteps["CreatePerson"].setPropertyValue("EndPoint",person_create_webservice);
log.info person_create_webservice;</script></con:config></con:testStep><con:testStep type="groovy" name="SetPersonName" id="92cf68c8-bf41-4822-8b59-7111bcd162ae"><con:settings/><con:config><script>String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

String surname = "QA-Admin-Test-"+GetTime();
def request = context.expand('${CreatePerson#Request}');
def person_xml = new XmlParser().parseText(request);
person_xml.breadthFirst().each
{
	if(it.@name.toString().contains("surName"))
	it.'vdf:value'[0].value=surname;
}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(person_xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["CreatePerson"].setPropertyValue("Request",newXml);

log.info GetTime();</script></con:config></con:testStep><con:testStep type="httprequest" name="CreatePerson" id="061c126f-ebbd-4269-b14d-a6c9c18effff"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="b77e8f63-c621-42f3-9602-e3fbc331665a" name="CreatePerson" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/publication/qa/escenic/person</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.person">
      <vdf:field name="com.escenic.username"/>
      <vdf:field name="com.escenic.firstName">
        <vdf:value>personname</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.surName">
        <vdf:value>QA-Admin-Test-12:22:34:121</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.occupation"/>
      <vdf:field name="com.escenic.address"/>
      <vdf:field name="com.escenic.postalcode"/>
      <vdf:field name="com.escenic.city"/>
      <vdf:field name="com.escenic.phonework"/>
      <vdf:field name="com.escenic.phonemobile"/>
      <vdf:field name="com.escenic.phoneprivate"/>
      <vdf:field name="com.escenic.emailaddress"/>
    </vdf:payload>
  </content>
  <title type="text">QA-Admin-Test</title>
  <summary type="text">QA-Admin-Test</summary>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://host-ip-address/webservice/escenic/publication/qa/" title="test"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8fbdecdb-027a-46fb-a215-538958d2d1ef" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetPersonURI" id="74eec81a-8f02-4c6d-953a-47191503cfdb"><con:settings/><con:config><script>def httpResponseHeaders = context.testCase.testSteps["CreatePerson"].testRequest.response.responseHeaders
def location = httpResponseHeaders["Location"][0];
context.testCase.testSteps["RetrivePerson"].setPropertyValue("EndPoint",location);
context.testCase.testSteps["DeletePerson"].setPropertyValue("EndPoint",location);
context.testCase.testSteps["DeleteADeletedPerson"].setPropertyValue("EndPoint",location);
context.testCase.testSteps["AttemptToRetriveDeletedPerson"].setPropertyValue("EndPoint",location);

</script></con:config></con:testStep><con:testStep type="httprequest" name="RetrivePerson" id="6a1ed718-71a9-48b0-95e7-41943a5a6ef4"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b7e18899-2c27-46a1-84ff-28e097ab8245" name="RetrivePerson" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/person/10</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="16056121-ba19-4189-8b5f-88f16a83139d" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeletePerson" id="2b902bd9-ab88-4278-90d6-31bc8e309f51"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="dbe50302-c5d5-4cec-9189-8b44f93ddd2d" name="DeletePerson" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/person/10</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7a2fff24-0135-4c31-915e-8b03458ca55d" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DeleteADeletedPerson" id="bc56e4ed-73df-4dbd-9457-244ce197f1cc"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="dbe50302-c5d5-4cec-9189-8b44f93ddd2d" name="DeleteADeletedPerson" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/person/10</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="ba5d732e-0214-4bae-a540-430eb87320b1" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="AttemptToRetriveDeletedPerson" id="13984a54-33ed-4962-8f8d-51f31b993d1b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b7e18899-2c27-46a1-84ff-28e097ab8245" name="AttemptToRetriveDeletedPerson" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/person/10</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="16056121-ba19-4189-8b5f-88f16a83139d" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5ac7357a-f4cf-4170-91f2-c5bb24e90685" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PersonUpdateTest" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="9be7a964-457d-4134-9caa-1f6cb053c657"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="3494d16a-be05-4db5-a194-d721b2125acc"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="490e665d-16b7-4aa4-be94-ee668fdcb6fd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="59f3ba6c-3fa2-46c6-b16b-7de701d8e80c" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDesc_RootSection" id="0632a43a-3cf7-4b7a-9e49-27ac266f0a18"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}




context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
//context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",root_section_uri);
log.info content_description_uri;
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="faa7fb8a-3d1a-409d-bab1-4d5f6e832f68"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="1e9136b0-ff85-4e1a-8080-0b8d43fe119b" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="2865c1c1-7a99-48ad-9c99-441512e784ee" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetPersonModelAndWebservice" id="8535b986-629a-4be4-b939-cea061f5c9c5"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');
def content_description_uri,root_section_uri,model,tmp;
int Found=0;
def str1;
def str2;
def person_model;
def person_create_webservice;

while(Found==0)
{
	int Index_newLine = response.indexOf("\n");
	str1 = response.substring(0,Index_newLine);
	if(Index_newLine&lt;response.size())
	{
		str2 = response.substring(Index_newLine+1);
	}
	if(str1.contains("person"))
	{
		person_model = str1;
		break;
	}
	response=str2;
}
person_model = person_model.substring(person_model.indexOf("http"));
person_model = person_model.substring(0 , person_model.indexOf("person")+"person".length());

log.info person_model;

def request = context.expand('${CreatePerson#Request}');
def person_xml = new XmlParser().parseText(request);
person_xml.breadthFirst().each
{
	if(it.@model!=null)
	{
		it.@model=person_model;
		log.info it.@model+"edit";
	}
}

def stringWriter = new StringWriter();
new XmlNodePrinter(new PrintWriter(stringWriter)).print(person_xml);
def newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreatePerson"].setPropertyValue("Request",newXml);

response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("person") &amp;&amp; Found==0)
		{
			person_create_webservice = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!person_create_webservice.contains(host))
{
	int index = person_create_webservice.indexOf("webservice")+"webservice".length();
	person_create_webservice = host + person_create_webservice.substring(index);
}
context.testCase.testSteps["CreatePerson"].setPropertyValue("EndPoint",person_create_webservice);
log.info person_create_webservice;</script></con:config></con:testStep><con:testStep type="groovy" name="SetPersonName" id="0586e702-0730-4f01-ba5f-9c0c5e56ac8f"><con:settings/><con:config><script>String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

String surname = "QA-Admin-Test-"+GetTime();
def request = context.expand('${CreatePerson#Request}');
def person_xml = new XmlParser().parseText(request);
person_xml.breadthFirst().each
{
	if(it.@name.toString().contains("surName"))
	it.'vdf:value'[0].value=surname;
}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(person_xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["CreatePerson"].setPropertyValue("Request",newXml);

log.info GetTime();</script></con:config></con:testStep><con:testStep type="httprequest" name="CreatePerson" id="644878b9-11c8-4f1c-87ef-19eccc963e09"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="b77e8f63-c621-42f3-9602-e3fbc331665a" name="CreatePerson" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/publication/qa/escenic/person</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.person">
      <vdf:field name="com.escenic.username"/>
      <vdf:field name="com.escenic.firstName">
        <vdf:value>personname</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.surName">
        <vdf:value>QA-Admin-Test-12:59:0:580</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.occupation"/>
      <vdf:field name="com.escenic.address"/>
      <vdf:field name="com.escenic.postalcode"/>
      <vdf:field name="com.escenic.city"/>
      <vdf:field name="com.escenic.phonework"/>
      <vdf:field name="com.escenic.phonemobile"/>
      <vdf:field name="com.escenic.phoneprivate"/>
      <vdf:field name="com.escenic.emailaddress"/>
    </vdf:payload>
  </content>
  <title type="text">QA-Admin-Test</title>
  <summary type="text">QA-Admin-Test</summary>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://host-ip-address/webservice/escenic/publication/qa/" title="test"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8fbdecdb-027a-46fb-a215-538958d2d1ef" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","201");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="201")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetPersonURI" id="ae7dc13f-bfbb-4e63-bf9c-53c8a8548e00"><con:settings/><con:config><script>def httpResponseHeaders = context.testCase.testSteps["CreatePerson"].testRequest.response.responseHeaders
def location = httpResponseHeaders["Location"][0];
context.testCase.testSteps["RetrivePerson"].setPropertyValue("EndPoint",location);
context.testCase.testSteps["UpdatePerson"].setPropertyValue("EndPoint",location);
context.testCase.testSteps["RetriveUpdatedPerson"].setPropertyValue("EndPoint",location);


</script></con:config></con:testStep><con:testStep type="httprequest" name="RetrivePerson" id="904bcac1-6f70-4228-8acb-7bcd6e755d31"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b7e18899-2c27-46a1-84ff-28e097ab8245" name="RetrivePerson" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/person/11</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="16056121-ba19-4189-8b5f-88f16a83139d" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="EditPerson" id="87b01a57-6505-4a94-9934-494b50d7806c"><con:settings/><con:config><script>def response = context.expand('${RetrivePerson#Response}');
def xml = new XmlParser().parseText(response);
def toAdd = "&lt;vdf:value>Software Eng.&lt;/vdf:value>";
def nodetoAdd = new XmlParser(false,false).parseText(toAdd);//new XmlSlurper().parseText(toAdd);

xml.breadthFirst().each
{
	if(it.@'name'.toString().contains("occupation"))
	//log.info it.@'name'.toString();
	it.children().add(nodetoAdd);
}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["UpdatePerson"].setPropertyValue("Request",newXml);

</script></con:config></con:testStep><con:testStep type="httprequest" name="UpdatePerson" id="501a46fa-651e-4728-8c3b-0b5ef91c7c85"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="d8d3ff21-b953-4e43-8328-10284d0af877" name="UpdatePerson" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/person/11</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>http://qa-beta:8080/webservice/escenic/person/11</id>
  <link rel="self" href="http://qa-beta:8080/webservice/escenic/person/11" type="application/atom+xml; type=entry"/>
  <link rel="edit" href="http://qa-beta:8080/webservice/escenic/person/11" type="application/atom+xml; type=entry"/>
  <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-beta:8080/webservice/escenic/lock/person/11/99bd5146-651a-4a99-8f92-2e3d3d6e7207" type="application/atom+xml; type=entry"/>
  <dcterms:identifier xmlns:dcterms="http://purl.org/dc/terms/">11</dcterms:identifier>
  <link href="http://qa-beta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>
  <link href="http://qa-beta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://qa-beta:8080/webservice/escenic/publication/qa/" title="qa"/>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.person">
      <vdf:field name="com.escenic.username"/>
      <vdf:field name="com.escenic.firstName">
        <vdf:value>personname</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.surName">
        <vdf:value>QA-Admin-Test-12:59:0:580</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.occupation">
        <vdf:value>Software Eng.</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.address"/>
      <vdf:field name="com.escenic.postalCode"/>
      <vdf:field name="com.escenic.city"/>
      <vdf:field name="com.escenic.phoneWork"/>
      <vdf:field name="com.escenic.phoneMobile"/>
      <vdf:field name="com.escenic.phonePrivate"/>
      <vdf:field name="com.escenic.emailAddress"/>
      <vdf:field name="com.escenic.description"/>
    </vdf:payload>
  </content>
  <app:edited xmlns:app="http://www.w3.org/2007/app">2018-02-15T06:59:51.000Z</app:edited>
  <updated>2018-02-15T06:59:51.000Z</updated>
  <published>2018-02-15T06:59:51.000Z</published>
  <dcterms:created xmlns:dcterms="http://purl.org/dc/terms/">2018-02-15T06:59:51.000Z</dcterms:created>
  <title type="text">QA-Admin-Test-12:59:0:580</title>
  <summary type="text">personname QA-Admin-Test-12:59:0:580</summary>
  <metadata:reference xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="02dacbaf-e369-4eb0-a6aa-6e13f2ef2b93"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="684b24cf-9ff4-418e-b7d8-246a3c0e4fbd" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="RetriveUpdatedPerson" id="28408fca-c3d5-48e3-bb04-82c3caa03237"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b7e18899-2c27-46a1-84ff-28e097ab8245" name="RetriveUpdatedPerson" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/person/11</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="16056121-ba19-4189-8b5f-88f16a83139d" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int isEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${RetriveUpdatedPerson#Response}');
	def xml = new XmlParser().parseText(response);
	def occupation;
	xml.breadthFirst().each
	{
		if(it.@name.toString().contains("occupation"))
		occupation = it.'vdf:value'[0].value()[0];
	};
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Occupation is updated to Software Eng.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Occupation is updated to Software Eng.");
	if(isEqual(occupation,"Software Eng.")==1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Occupation is not updated.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2db68a46-9880-44dc-b723-b23226c472a8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestAuthorOrdering-VF-7043" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="67665e21-80ae-4cb8-aa34-b41636c4adc6"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="41e946df-0d5f-4683-b31f-728fdc940ea7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDescriptionURI" id="656d5d11-d746-4046-bd11-f51f1c8969c5"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="acdbdef4-9ba9-44e6-b593-6b3763eaf693"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="89e87086-f8d1-4944-8c32-9a298797415a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="f132c047-c366-4b62-9309-0ec23e480372"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="7bd1aa28-c480-4234-89b4-3a04ccceaf1f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetContentURI" id="f426b928-3e90-4a17-93a0-459ab53b64d1"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def content_uri;
if(httpResponseHeader!=null)
{
	content_uri = httpResponseHeader["Location"][0];
}
context.testCase.testSteps["RetriveContentStory"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["AddAuthors"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["CheckAuthorsOrder"].setPropertyValue("EndPoint",content_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveContentStory" id="ed2f002b-e4f3-4ac6-acfc-203eda8ce9fe"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d8c94b2b-5a5d-41b7-84a8-107a1f48915e" name="RetriveContentStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/content/689</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9ab91d36-bae0-45c8-a912-e7983cd3653c" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetPersonModelAndWebservice" id="46aba595-66a8-425e-adf6-0b9186b781f6"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');
def content_description_uri,root_section_uri,model,tmp;
int Found=0;
def str1;
def str2;
def person_model;
def person_create_webservice;

while(Found==0)
{
	int Index_newLine = response.indexOf("\n");
	str1 = response.substring(0,Index_newLine);
	if(Index_newLine&lt;response.size())
	{
		str2 = response.substring(Index_newLine+1);
	}
	if(str1.contains("person"))
	{
		person_model = str1;
		break;
	}
	response=str2;
}
person_model = person_model.substring(person_model.indexOf("http"));
person_model = person_model.substring(0 , person_model.indexOf("person")+"person".length());

log.info person_model;

def request = context.expand('${AuthorCreate#Request}');
def person_xml = new XmlParser().parseText(request);
person_xml.breadthFirst().each
{
	if(it.@model!=null)
	{
		it.@model=person_model;
		log.info it.@model+"edit";
	}
}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(person_xml);
def newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["AuthorCreate"].setPropertyValue("Request",newXml);

response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("person") &amp;&amp; Found==0)
		{
			person_create_webservice = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!person_create_webservice.contains(host))
{
	int index = person_create_webservice.indexOf("webservice")+"webservice".length();
	person_create_webservice = host + person_create_webservice.substring(index);
}
context.testCase.testSteps["AuthorCreate"].setPropertyValue("EndPoint",person_create_webservice);
log.info person_create_webservice;</script></con:config></con:testStep><con:testStep type="httprequest" name="AuthorCreate" id="bf7b7578-152b-4e3d-9e15-7631409d5aae"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="b77e8f63-c621-42f3-9602-e3fbc331665a" name="AuthorCreate" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/publication/qa/escenic/person</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.person">
      <vdf:field name="com.escenic.username"/>
      <vdf:field name="com.escenic.firstName">
        <vdf:value>Person - 5</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.surName">
        <vdf:value>QA-Admin-Test-13:0:40:550</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.occupation"/>
      <vdf:field name="com.escenic.address"/>
      <vdf:field name="com.escenic.postalcode"/>
      <vdf:field name="com.escenic.city"/>
      <vdf:field name="com.escenic.phonework"/>
      <vdf:field name="com.escenic.phonemobile"/>
      <vdf:field name="com.escenic.phoneprivate"/>
      <vdf:field name="com.escenic.emailaddress"/>
    </vdf:payload>
  </content>
  <title type="text">QA-Admin-Test</title>
  <summary type="text">QA-Admin-Test</summary>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://host-ip-address/webservice/escenic/publication/qa/" title="test"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8fbdecdb-027a-46fb-a215-538958d2d1ef" name="Script Assertion"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="CreateSomeAuthor" id="f492ae78-fee7-493b-95a8-2d1810fa0937"><con:settings/><con:config><script><![CDATA[def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

def authorsName = new String[6];
def authorsUri = new String[6];
def authorsToAdd="";
def response = context.expand('${RetriveContentStory#Response}');
def xml = new XmlParser().parseText(response);
String surname,firstName;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}


for(int i=0;i<5;i++)
{
	surname = "QA-Admin-Test-"+GetTime();
	firstName = "Person - " + (i+1).toString();
	def request = context.expand('${AuthorCreate#Request}');
	def person_xml = new XmlParser().parseText(request);
	person_xml.breadthFirst().each
	{
		if(it.@name.toString().contains("surName"))
		it.'vdf:value'[0].value=surname;
		if(it.@name.toString().contains("firstName"))
		it.'vdf:value'[0].value=firstName;
	}
	
	def stringWriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
	printer.preserveWhitespace=true;
	printer.print(person_xml);
	def newXml = stringWriter.toString();

	context.testCase.testSteps["AuthorCreate"].setPropertyValue("Request",newXml);

	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['AuthorCreate'])
	def httpResponseHeaders = context.testCase.testSteps["AuthorCreate"].testRequest.response.responseHeaders
	def location = httpResponseHeaders["Location"][0];
	
	authorsName[i] = firstName;
	authorsUri[i] = location;
}

for(int i=0;i<5;i++)
{
	authorsToAdd = "<author><name>"+authorsName[(4-i)]+"</name><uri>"+authorsUri[(4-i)]+"</uri></author>";
	def nodeToAdd = new XmlParser(false,false).parseText(authorsToAdd);	
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
			it.children().add(nodeToAdd);
	}
}
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["AddAuthors"].setPropertyValue("Request",newXml);]]></script></con:config></con:testStep><con:testStep type="httprequest" name="AddAuthors" id="65f6718b-61f1-4aa5-8495-f0d86da266ba"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="26fb590d-822b-46e9-a491-aec7c8923665" name="AddAuthors" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/content/689</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>http://qa-beta:8080/webservice/escenic/content/689</id>
  <link rel="self" href="http://qa-beta:8080/webservice/escenic/content/689" type="application/atom+xml; type=entry"/>
  <link rel="edit" href="http://qa-beta:8080/webservice/escenic/content/689" type="application/atom+xml; type=entry"/>
  <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-beta:8080/webservice/escenic/lock/article/689/c5d73765" type="application/atom+xml; type=entry"/>
  <dcterms:identifier xmlns:dcterms="http://purl.org/dc/terms/">689</dcterms:identifier>
  <link href="http://qa-beta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>
  <link href="http://qa-beta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://qa-beta:8080/webservice/escenic/publication/qa/" title="qa">
    <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-beta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-beta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  </metadata:publication>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-beta:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-beta:8080/webservice/escenic/content/689/log/" type="application/atom+xml; type=entry" title="History"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-beta:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-beta:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://beta.qa.local/incoming/article689.ece" type="application/xhtml+xml" title="cXense Analytics"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-beta:8080/webservice-extensions/note/note.html?url=http://qa-beta:8080/note-webservice/escenic/content/689/notes" type="application/xhtml+xml" title="Notes"/>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="subtitle"/>
      <vdf:field name="leadtext"/>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
      <vdf:field name="byline"/>
      <vdf:field name="creditLine"/>
      <vdf:field name="overline"/>
      <vdf:field name="datelineTag"/>
      <vdf:field name="shirttail"/>
      <vdf:field name="quote"/>
      <vdf:field name="storyKeywords"/>
      <vdf:field name="originatingURL"/>
      <vdf:field name="priority"/>
      <vdf:field name="indexable"/>
      <vdf:field name="followlinks"/>
      <vdf:field name="copyright"/>
      <vdf:field name="owner"/>
      <vdf:field name="source"/>
      <vdf:field name="layoutVariant"/>
      <vdf:field name="customConfig"/>
      <vdf:field name="com.escenic.tags">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <title type="text">This is a test story title</title>
  <summary type="text"/>
  <link href="http://qa-beta:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>
  <app:edited xmlns:app="http://www.w3.org/2007/app">2018-02-15T07:01:28.000Z</app:edited>
  <dcterms:created xmlns:dcterms="http://purl.org/dc/terms/">2018-02-15T07:01:28.000Z</dcterms:created>
  <metadata:reference xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="60ff6030-e978-487e-9035-f1d1f8cb426b"/>
  <author>
    <name>qa Administrator</name>
    <uri>http://qa-beta:8080/webservice/escenic/person/1</uri>
  </author>
  <metadata:creator xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:creator>
  <metadata:last-edited-by xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:last-edited-by>
  <app:control xmlns:app="http://www.w3.org/2007/app">
    <app:draft>yes</app:draft>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext" name="draft" href="http://qa-beta:8080/webservice/escenic/content/state/draft/editor"/>
  </app:control>
  <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-beta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  <link rel="usage" href="http://qa-beta:8080/webservice/usage/article/689" type="text/uri-list" title="Incoming Links"/>
  <link href="http://qa-beta:8080/webservice/escenic/content/689/preview" rel="http://www.vizrt.com/types/relation/preview"/>
  <link href="http://qa-beta:8080/webservice/escenic/content/689/log" rel="http://www.vizrt.com/types/relation/log"/>
  <link href="http://qa-beta:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>
  <author>
    <name>Person - 5</name>
    <uri>http://qa-beta:8080/webservice/escenic/person/17</uri>
  </author>
  <author>
    <name>Person - 4</name>
    <uri>http://qa-beta:8080/webservice/escenic/person/16</uri>
  </author>
  <author>
    <name>Person - 3</name>
    <uri>http://qa-beta:8080/webservice/escenic/person/15</uri>
  </author>
  <author>
    <name>Person - 2</name>
    <uri>http://qa-beta:8080/webservice/escenic/person/14</uri>
  </author>
  <author>
    <name>Person - 1</name>
    <uri>http://qa-beta:8080/webservice/escenic/person/13</uri>
  </author>
</entry>
]]></con:request><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckAuthorsOrder" id="36f237b9-344b-4795-9341-861774193480"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d8c94b2b-5a5d-41b7-84a8-107a1f48915e" name="CheckAuthorsOrder" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/content/689</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9ab91d36-bae0-45c8-a912-e7983cd3653c" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int isEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}

int CheckAuthorOrder(response,request)
{
	def xml = new XmlParser().parseText(response);
	def xml2 = new XmlParser().parseText(request);
	def responseAuthorList = new String[6];
	def requestAuthorList = new String[6];
	int i=0,j=0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("author"))
		responseAuthorList[i++] = it.'uri'[0].value()[0];
	};
	xml2.breadthFirst().each
	{
		if(it.name().toString().contains("author"))
		requestAuthorList[j++] = it.'uri'[0].value()[0];
	};

	if(i!=j)
	return -1;
	for(int k=0;k&lt;i;k++)
	{
		if(isEqual(responseAuthorList[k], requestAuthorList[k])==0)
		return 0;
	}
	return 1;
}
/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${CheckAuthorsOrder#Response}');
	def request = context.expand('${AddAuthors#Request}');
	int result = CheckAuthorOrder(response,request);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Authors are Ordered Properly.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Authors are Ordered Properly.");
	if(result==1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else if(result==0)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Authors are not Ordered Properly.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else if(result==-1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","All authors are not added.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d5ba01c8-8f63-4980-9898-7e385c730022" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AddingDuplicateAuthor-VF-7043" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="7527d1ec-f883-45cb-be79-3e5062147962"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="08f5e51c-57aa-46bc-ab4a-74c9cb59de7d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDescriptionURI" id="f7ed5805-852f-478f-82ec-f5b787dbe3f3"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="7473afb9-762c-4c0b-b0d7-687ace2179c2"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="c98961d0-be6d-4f81-a562-8fe600c16a0d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="3a542b9b-fb54-41cf-a48c-15169a10f776"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="e3c4c7fc-1202-41de-8b92-3009a0412588"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetContentURI" id="0b4d5d25-47ed-4ca2-b544-1d5370f899f2"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def content_uri;
if(httpResponseHeader!=null)
{
	content_uri = httpResponseHeader["Location"][0];
}
context.testCase.testSteps["RetriveContentStory"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["AddAuthors"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["CheckForDuplicateAuthor"].setPropertyValue("EndPoint",content_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveContentStory" id="eedd7452-ae20-4bf7-b9b9-809bd111fe42"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d8c94b2b-5a5d-41b7-84a8-107a1f48915e" name="RetriveContentStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/content/1963</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9ab91d36-bae0-45c8-a912-e7983cd3653c" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetPersonModelAndWebservice" id="6946df2d-f402-4106-8792-20fc3e29a8b4"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');
def content_description_uri,root_section_uri,model,tmp;
int Found=0;
def str1;
def str2;
def person_model;
def person_create_webservice;

while(Found==0)
{
	int Index_newLine = response.indexOf("\n");
	str1 = response.substring(0,Index_newLine);
	if(Index_newLine&lt;response.size())
	{
		str2 = response.substring(Index_newLine+1);
	}
	if(str1.contains("person"))
	{
		person_model = str1;
		break;
	}
	response=str2;
}
person_model = person_model.substring(person_model.indexOf("http"));
person_model = person_model.substring(0 , person_model.indexOf("person")+"person".length());

log.info person_model;

def request = context.expand('${AuthorCreate#Request}');
def person_xml = new XmlParser().parseText(request);
person_xml.breadthFirst().each
{
	if(it.@model!=null)
	{
		it.@model=person_model;
		log.info it.@model+"edit";
	}
}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(person_xml);
def newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["AuthorCreate"].setPropertyValue("Request",newXml);

response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("person") &amp;&amp; Found==0)
		{
			person_create_webservice = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!person_create_webservice.contains(host))
{
	int index = person_create_webservice.indexOf("webservice")+"webservice".length();
	person_create_webservice = host + person_create_webservice.substring(index);
}
context.testCase.testSteps["AuthorCreate"].setPropertyValue("EndPoint",person_create_webservice);
log.info person_create_webservice;</script></con:config></con:testStep><con:testStep type="httprequest" name="AuthorCreate" id="b2b1a23b-1621-43d5-b115-34068cc20da3"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="b77e8f63-c621-42f3-9602-e3fbc331665a" name="AuthorCreate" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/publication/qa/escenic/person</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.person">
      <vdf:field name="com.escenic.username"/>
      <vdf:field name="com.escenic.firstName">
        <vdf:value>Person - 3</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.surName">
        <vdf:value>QA-Admin-Test-14:40:50:630</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.occupation"/>
      <vdf:field name="com.escenic.address"/>
      <vdf:field name="com.escenic.postalcode"/>
      <vdf:field name="com.escenic.city"/>
      <vdf:field name="com.escenic.phonework"/>
      <vdf:field name="com.escenic.phonemobile"/>
      <vdf:field name="com.escenic.phoneprivate"/>
      <vdf:field name="com.escenic.emailaddress"/>
    </vdf:payload>
  </content>
  <title type="text">QA-Admin-Test</title>
  <summary type="text">QA-Admin-Test</summary>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://host-ip-address/webservice/escenic/publication/qa/" title="test"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8fbdecdb-027a-46fb-a215-538958d2d1ef" name="Script Assertion"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="CreateSomeAuthor" id="555d259b-1ac6-4f79-b0a9-51eb4ab0d0bf"><con:settings/><con:config><script><![CDATA[def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

def authorsName = new String[3];
def authorsUri = new String[3];
def authorsToAdd="";
def response = context.expand('${RetriveContentStory#Response}');
def xml = new XmlParser().parseText(response);
String surname,firstName;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}


for(int i=0;i<3;i++)
{
	surname = "QA-Admin-Test-"+GetTime();
	firstName = "Person - " + (i+1).toString();
	def request = context.expand('${AuthorCreate#Request}');
	def person_xml = new XmlParser().parseText(request);
	person_xml.breadthFirst().each
	{
		if(it.@name.toString().contains("surName"))
		it.'vdf:value'[0].value=surname;
		if(it.@name.toString().contains("firstName"))
		it.'vdf:value'[0].value=firstName;
	}
	
	def stringWriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
	printer.preserveWhitespace=true;
	printer.print(person_xml);
	def newXml = stringWriter.toString();

	context.testCase.testSteps["AuthorCreate"].setPropertyValue("Request",newXml);

	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['AuthorCreate'])
	def httpResponseHeaders = context.testCase.testSteps["AuthorCreate"].testRequest.response.responseHeaders
	def location = httpResponseHeaders["Location"][0];
	
	authorsName[i] = firstName;
	authorsUri[i] = location;
}

for(int i=0;i<3;i++)
{
	authorsToAdd = "<author><name>"+authorsName[i]+"</name><uri>"+authorsUri[i]+"</uri></author>";
	def nodeToAdd = new XmlParser(false,false).parseText(authorsToAdd);	
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
			it.children().add(nodeToAdd);
	}
}
def nodeToAdd = new XmlParser(false,false).parseText(authorsToAdd);	
xml.breadthFirst().each
{
	if(it.name().toString().contains("entry"))
		it.children().add(nodeToAdd);
}
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["AddAuthors"].setPropertyValue("Request",newXml);]]></script></con:config></con:testStep><con:testStep type="httprequest" name="AddAuthors" id="305f4c06-b206-423f-94f8-b3d5a061e0f1"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="26fb590d-822b-46e9-a491-aec7c8923665" name="AddAuthors" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/content/1963</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>http://qa-bianca:8080/webservice/escenic/content/1963</id>
  <link rel="self" href="http://qa-bianca:8080/webservice/escenic/content/1963" type="application/atom+xml; type=entry"/>
  <link rel="edit" href="http://qa-bianca:8080/webservice/escenic/content/1963" type="application/atom+xml; type=entry"/>
  <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-bianca:8080/webservice/escenic/lock/article/1963/1a9ea0d1" type="application/atom+xml; type=entry"/>
  <dcterms:identifier xmlns:dcterms="http://purl.org/dc/terms/">1963</dcterms:identifier>
  <link href="http://qa-bianca:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>
  <link href="http://qa-bianca:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://qa-bianca:8080/webservice/escenic/publication/qa/" title="qa">
    <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-bianca:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-bianca:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  </metadata:publication>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-bianca:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-bianca:8080/webservice/escenic/content/1963/log/" type="application/atom+xml; type=entry" title="History"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-bianca:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-bianca:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://bianca.qa.local/incoming/article1963.ece" type="application/xhtml+xml" title="cXense Analytics"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-bianca:8080/webservice-extensions/note/note.html?url=http://qa-bianca:8080/note-webservice/escenic/content/1963/notes" type="application/xhtml+xml" title="Notes"/>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="subtitle"/>
      <vdf:field name="leadtext"/>
      <vdf:field name="maxAge"/>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
      <vdf:field name="byline"/>
      <vdf:field name="creditLine"/>
      <vdf:field name="overline"/>
      <vdf:field name="datelineTag"/>
      <vdf:field name="shirttail"/>
      <vdf:field name="quote"/>
      <vdf:field name="suggested-tags"/>
      <vdf:field name="storyKeywords"/>
      <vdf:field name="originatingURL"/>
      <vdf:field name="priority"/>
      <vdf:field name="indexable"/>
      <vdf:field name="followlinks"/>
      <vdf:field name="copyright"/>
      <vdf:field name="owner"/>
      <vdf:field name="source"/>
      <vdf:field name="layoutVariant"/>
      <vdf:field name="customConfig"/>
      <vdf:field name="com.escenic.tags">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <title type="text">This is a test story title</title>
  <summary type="text"/>
  <link href="http://bianca.qa.local/incoming/article1963.ece" rel="alternate"/>
  <link href="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>
  <app:edited xmlns:app="http://www.w3.org/2007/app">2017-10-27T08:40:56.000Z</app:edited>
  <dcterms:created xmlns:dcterms="http://purl.org/dc/terms/">2017-10-27T08:40:56.000Z</dcterms:created>
  <metadata:reference xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="2ef0102f-02fd-4055-909b-e2964b82cf97"/>
  <author>
    <name>qa Administrator</name>
    <uri>http://qa-bianca:8080/webservice/escenic/person/1</uri>
  </author>
  <metadata:creator xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:creator>
  <metadata:last-edited-by xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:last-edited-by>
  <app:control xmlns:app="http://www.w3.org/2007/app">
    <app:draft>yes</app:draft>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext" name="draft" href="http://qa-bianca:8080/webservice/escenic/content/state/draft/editor"/>
  </app:control>
  <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-bianca:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  <link rel="usage" href="http://qa-bianca:8080/webservice/usage/article/1963" type="text/uri-list" title="Incoming Links"/>
  <link href="http://qa-bianca:8080/webservice/escenic/content/1963/preview" rel="http://www.vizrt.com/types/relation/preview"/>
  <link href="http://qa-bianca:8080/webservice/escenic/content/1963/log" rel="http://www.vizrt.com/types/relation/log"/>
  <link href="http://qa-bianca:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>
  <author>
    <name>Person - 1</name>
    <uri>http://qa-bianca:8080/webservice/escenic/person/162</uri>
  </author>
  <author>
    <name>Person - 2</name>
    <uri>http://qa-bianca:8080/webservice/escenic/person/163</uri>
  </author>
  <author>
    <name>Person - 3</name>
    <uri>http://qa-bianca:8080/webservice/escenic/person/164</uri>
  </author>
  <author>
    <name>Person - 3</name>
    <uri>http://qa-bianca:8080/webservice/escenic/person/164</uri>
  </author>
</entry>
]]></con:request><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckForDuplicateAuthor" id="0276bfb3-e5bb-482e-8984-89329215222f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d8c94b2b-5a5d-41b7-84a8-107a1f48915e" name="CheckForDuplicateAuthor" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/content/1963</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9ab91d36-bae0-45c8-a912-e7983cd3653c" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int isEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}

int CheckForDuplicateAuthor(response,request)
{
	def xml = new XmlParser().parseText(response);
	def xml2 = new XmlParser().parseText(request);
	def responseAuthorList = new String[6];
	def requestAuthorList = new String[6];
	int i=0,j=0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("author"))
		responseAuthorList[i++] = it.'uri'[0].value()[0];
	};
	xml2.breadthFirst().each
	{
		if(it.name().toString().contains("author"))
		requestAuthorList[j++] = it.'uri'[0].value()[0];
	};
	
	if(i!=(j-1))
	return 0;
	for(int k=0;k&lt;i;k++)
	{
		for(int ll=k+1;ll&lt;i;ll++)
		{
			if(isEqual(responseAuthorList[ll], responseAuthorList[k])==1)
			return 0;
		}
	}
	return 1;
}
/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${CheckForDuplicateAuthor#Response}');
	def request = context.expand('${AddAuthors#Request}');
	int result = CheckForDuplicateAuthor(response,request);
	
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","No Authors added twice.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","No Authors added twice.");
	if(result==1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Same author added more than once.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2367c315-cc79-4f11-8bcc-453ed13dc2b6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AddingInvalidAuthor-VF-7043" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="ca9fb7ae-52cf-4a88-aa87-c00a912c8753"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="58e7f771-f957-41ce-9aa5-7f59bbbb340a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDescriptionURI" id="e1a41427-6df5-44a0-98c5-b22a836277bf"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="55c3198e-1617-45fc-952c-de89e347462f"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="4d5c1d0a-a2a4-4c47-a92d-d605b700c892"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="f5b56e02-b44f-4bf7-86d0-ec159093eb2f"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="257090b4-9288-439d-9764-2f97bae864d3"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetContentURI" id="03517c02-f68c-4879-9675-0a13e5e65452"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def content_uri;
if(httpResponseHeader!=null)
{
	content_uri = httpResponseHeader["Location"][0];
}
context.testCase.testSteps["RetriveContentStory"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["AddAuthors"].setPropertyValue("EndPoint",content_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveContentStory" id="caf0d294-0570-42ec-bf06-3bb839fc2247"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d8c94b2b-5a5d-41b7-84a8-107a1f48915e" name="RetriveContentStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/content/1964</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9ab91d36-bae0-45c8-a912-e7983cd3653c" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetPersonModelAndWebservice" id="91565942-474d-4c6c-ad28-9bdbf18dccb3"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');
def content_description_uri,root_section_uri,model,tmp;
int Found=0;
def str1;
def str2;
def person_model;
def person_create_webservice;

while(Found==0)
{
	int Index_newLine = response.indexOf("\n");
	str1 = response.substring(0,Index_newLine);
	if(Index_newLine&lt;response.size())
	{
		str2 = response.substring(Index_newLine+1);
	}
	if(str1.contains("person"))
	{
		person_model = str1;
		break;
	}
	response=str2;
}
person_model = person_model.substring(person_model.indexOf("http"));
person_model = person_model.substring(0 , person_model.indexOf("person")+"person".length());

log.info person_model;

def request = context.expand('${AuthorCreate#Request}');
def person_xml = new XmlParser().parseText(request);
person_xml.breadthFirst().each
{
	if(it.@model!=null)
	{
		it.@model=person_model;
		log.info it.@model+"edit";
	}
}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(person_xml);
def newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["AuthorCreate"].setPropertyValue("Request",newXml);

response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("person") &amp;&amp; Found==0)
		{
			person_create_webservice = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!person_create_webservice.contains(host))
{
	int index = person_create_webservice.indexOf("webservice")+"webservice".length();
	person_create_webservice = host + person_create_webservice.substring(index);
}
context.testCase.testSteps["AuthorCreate"].setPropertyValue("EndPoint",person_create_webservice);
log.info person_create_webservice;</script></con:config></con:testStep><con:testStep type="httprequest" name="AuthorCreate" id="12953245-b3d3-4f14-839f-f25a93fedb93"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="b77e8f63-c621-42f3-9602-e3fbc331665a" name="AuthorCreate" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/publication/qa/escenic/person</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.person">
      <vdf:field name="com.escenic.username"/>
      <vdf:field name="com.escenic.firstName">
        <vdf:value>Person - 5</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.surName">
        <vdf:value>QA-Admin-Test-14:40:54:653</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.occupation"/>
      <vdf:field name="com.escenic.address"/>
      <vdf:field name="com.escenic.postalcode"/>
      <vdf:field name="com.escenic.city"/>
      <vdf:field name="com.escenic.phonework"/>
      <vdf:field name="com.escenic.phonemobile"/>
      <vdf:field name="com.escenic.phoneprivate"/>
      <vdf:field name="com.escenic.emailaddress"/>
    </vdf:payload>
  </content>
  <title type="text">QA-Admin-Test</title>
  <summary type="text">QA-Admin-Test</summary>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://host-ip-address/webservice/escenic/publication/qa/" title="test"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8fbdecdb-027a-46fb-a215-538958d2d1ef" name="Script Assertion"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="CreateSomeAuthor" id="f2637276-7910-44f8-a39d-8601a91b30c2"><con:settings/><con:config><script><![CDATA[def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

def authorsName = new String[6];
def authorsUri = new String[6];
def authorsToAdd="";
def response = context.expand('${RetriveContentStory#Response}');
def xml = new XmlParser().parseText(response);
String surname,firstName;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}


for(int i=0;i<5;i++)
{
	surname = "QA-Admin-Test-"+GetTime();
	firstName = "Person - " + (i+1).toString();
	def request = context.expand('${AuthorCreate#Request}');
	def person_xml = new XmlParser().parseText(request);
	person_xml.breadthFirst().each
	{
		if(it.@name.toString().contains("surName"))
		it.'vdf:value'[0].value=surname;
		if(it.@name.toString().contains("firstName"))
		it.'vdf:value'[0].value=firstName;
	}
	
	def stringWriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
	printer.preserveWhitespace=true;
	printer.print(person_xml);
	def newXml = stringWriter.toString();

	context.testCase.testSteps["AuthorCreate"].setPropertyValue("Request",newXml);

	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['AuthorCreate'])
	def httpResponseHeaders = context.testCase.testSteps["AuthorCreate"].testRequest.response.responseHeaders
	def location = httpResponseHeaders["Location"][0];
	
	authorsName[i] = firstName;
	authorsUri[i] = location;
}

for(int i=0;i<5;i++)
{
	authorsToAdd = "<author><name>"+authorsName[(4-i)]+"</name><uri>"+authorsUri[(4-i)]+"</uri></author>";
	def nodeToAdd = new XmlParser(false,false).parseText(authorsToAdd);	
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
			it.children().add(nodeToAdd);
	}
}

def tmpAuthor = authorsUri[4];
def num = tmpAuthor.findAll(/\d+/)*.toInteger();
int authorID =  num[num.size()-1];

tmpAuthor = tmpAuthor.replace(authorID.toString() , (authorID+10).toString());
authorsToAdd = "<author><name>"+authorsName[4]+"</name><uri>"+tmpAuthor+"</uri></author>";
def nodeToAdd = new XmlParser(false,false).parseText(authorsToAdd);	
xml.breadthFirst().each
{
	if(it.name().toString().contains("entry"))
		it.children().add(nodeToAdd);
}
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["AddAuthors"].setPropertyValue("Request",newXml);]]></script></con:config></con:testStep><con:testStep type="httprequest" name="AddAuthors" id="b7e7537e-f6dd-4534-a6dd-2f3b036403cb"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="26fb590d-822b-46e9-a491-aec7c8923665" name="AddAuthors" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/content/1964</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>http://qa-bianca:8080/webservice/escenic/content/1964</id>
  <link rel="self" href="http://qa-bianca:8080/webservice/escenic/content/1964" type="application/atom+xml; type=entry"/>
  <link rel="edit" href="http://qa-bianca:8080/webservice/escenic/content/1964" type="application/atom+xml; type=entry"/>
  <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-bianca:8080/webservice/escenic/lock/article/1964/892c45a1" type="application/atom+xml; type=entry"/>
  <dcterms:identifier xmlns:dcterms="http://purl.org/dc/terms/">1964</dcterms:identifier>
  <link href="http://qa-bianca:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>
  <link href="http://qa-bianca:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://qa-bianca:8080/webservice/escenic/publication/qa/" title="qa">
    <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-bianca:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-bianca:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  </metadata:publication>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-bianca:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-bianca:8080/webservice/escenic/content/1964/log/" type="application/atom+xml; type=entry" title="History"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-bianca:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-bianca:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://bianca.qa.local/incoming/article1964.ece" type="application/xhtml+xml" title="cXense Analytics"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-bianca:8080/webservice-extensions/note/note.html?url=http://qa-bianca:8080/note-webservice/escenic/content/1964/notes" type="application/xhtml+xml" title="Notes"/>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="subtitle"/>
      <vdf:field name="leadtext"/>
      <vdf:field name="maxAge"/>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
      <vdf:field name="byline"/>
      <vdf:field name="creditLine"/>
      <vdf:field name="overline"/>
      <vdf:field name="datelineTag"/>
      <vdf:field name="shirttail"/>
      <vdf:field name="quote"/>
      <vdf:field name="suggested-tags"/>
      <vdf:field name="storyKeywords"/>
      <vdf:field name="originatingURL"/>
      <vdf:field name="priority"/>
      <vdf:field name="indexable"/>
      <vdf:field name="followlinks"/>
      <vdf:field name="copyright"/>
      <vdf:field name="owner"/>
      <vdf:field name="source"/>
      <vdf:field name="layoutVariant"/>
      <vdf:field name="customConfig"/>
      <vdf:field name="com.escenic.tags">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <title type="text">This is a test story title</title>
  <summary type="text"/>
  <link href="http://bianca.qa.local/incoming/article1964.ece" rel="alternate"/>
  <link href="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>
  <app:edited xmlns:app="http://www.w3.org/2007/app">2017-10-27T08:41:00.000Z</app:edited>
  <dcterms:created xmlns:dcterms="http://purl.org/dc/terms/">2017-10-27T08:41:00.000Z</dcterms:created>
  <metadata:reference xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="6a800b6d-e0f1-4cd5-b3f5-addc01ccc215"/>
  <author>
    <name>qa Administrator</name>
    <uri>http://qa-bianca:8080/webservice/escenic/person/1</uri>
  </author>
  <metadata:creator xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:creator>
  <metadata:last-edited-by xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:last-edited-by>
  <app:control xmlns:app="http://www.w3.org/2007/app">
    <app:draft>yes</app:draft>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext" name="draft" href="http://qa-bianca:8080/webservice/escenic/content/state/draft/editor"/>
  </app:control>
  <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-bianca:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  <link rel="usage" href="http://qa-bianca:8080/webservice/usage/article/1964" type="text/uri-list" title="Incoming Links"/>
  <link href="http://qa-bianca:8080/webservice/escenic/content/1964/preview" rel="http://www.vizrt.com/types/relation/preview"/>
  <link href="http://qa-bianca:8080/webservice/escenic/content/1964/log" rel="http://www.vizrt.com/types/relation/log"/>
  <link href="http://qa-bianca:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>
  <author>
    <name>Person - 5</name>
    <uri>http://qa-bianca:8080/webservice/escenic/person/170</uri>
  </author>
  <author>
    <name>Person - 4</name>
    <uri>http://qa-bianca:8080/webservice/escenic/person/169</uri>
  </author>
  <author>
    <name>Person - 3</name>
    <uri>http://qa-bianca:8080/webservice/escenic/person/168</uri>
  </author>
  <author>
    <name>Person - 2</name>
    <uri>http://qa-bianca:8080/webservice/escenic/person/167</uri>
  </author>
  <author>
    <name>Person - 1</name>
    <uri>http://qa-bianca:8080/webservice/escenic/person/166</uri>
  </author>
  <author>
    <name>Person - 5</name>
    <uri>http://qa-bianca:8080/webservice/escenic/person/180</uri>
  </author>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="eb9441f4-bc45-4f7c-bf70-6432ae109d04" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","400 or 404");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="400" || httpStatusCode=="404")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);	
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="06ce77a2-d466-40cb-8479-96eea2aa0bdc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestRemovingAllAuthors-VF-7191" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="4a0b7537-2881-407a-bf56-5e3da6f840bb"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="18f7ac92-d312-486c-81f1-26a6bb648afc"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDescriptionURI" id="c189a656-8571-4d98-834d-ea8241d49310"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="1aa1faa6-0e04-4b1a-8f54-f6701272e9a2"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="6b39b333-2ce7-4e6d-8170-20fc7bb02a12"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="8e171184-e568-41c3-9264-66d455ab0513"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="75d80d91-3562-4cee-9cb2-ef2dc381040e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetContentURI" id="e50cac61-2cc2-469b-9a99-36d980e507e7"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def content_uri;
if(httpResponseHeader!=null)
{
	content_uri = httpResponseHeader["Location"][0];
}
context.testCase.testSteps["RetriveContentStory"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["UpdateContentWithoutAuthor"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["IsAuthorRemoved"].setPropertyValue("EndPoint",content_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveContentStory" id="c019f0e2-f9f8-4f24-9daa-7bbb4adf91c8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d8c94b2b-5a5d-41b7-84a8-107a1f48915e" name="RetriveContentStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/content/1965</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9ab91d36-bae0-45c8-a912-e7983cd3653c" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="RemoveAuthor" id="cdae33f9-8611-4837-ba73-4ca4632e6995"><con:settings/><con:config><script>def response = context.expand('${RetriveContentStory#Response}');
def xml = new XmlParser().parseText(response);
def nodeToRemove;
xml.breadthFirst().each
{
	if(it.name().toString().contains("author"))
	nodeToRemove = it;
};

xml.remove(nodeToRemove);

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(xml);
String newXml = stringWriter.toString();

context.testCase.testSteps["UpdateContentWithoutAuthor"].setPropertyValue("Request",newXml);
</script></con:config></con:testStep><con:testStep type="httprequest" name="UpdateContentWithoutAuthor" id="81625b47-c58b-4a90-a334-36fde089ee9e"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="61e30812-0d25-4925-940a-eeba6a1d8225" name="UpdateContentWithoutAuthor" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/content/1965</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>http://qa-bianca:8080/webservice/escenic/content/1965</id>
  <link rel="self" href="http://qa-bianca:8080/webservice/escenic/content/1965" type="application/atom+xml; type=entry"/>
  <link rel="edit" href="http://qa-bianca:8080/webservice/escenic/content/1965" type="application/atom+xml; type=entry"/>
  <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-bianca:8080/webservice/escenic/lock/article/1965/e873848a" type="application/atom+xml; type=entry"/>
  <dcterms:identifier xmlns:dcterms="http://purl.org/dc/terms/">1965</dcterms:identifier>
  <link href="http://qa-bianca:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>
  <link href="http://qa-bianca:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://qa-bianca:8080/webservice/escenic/publication/qa/" title="qa">
    <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-bianca:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-bianca:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  </metadata:publication>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-bianca:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-bianca:8080/webservice/escenic/content/1965/log/" type="application/atom+xml; type=entry" title="History"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-bianca:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-bianca:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://bianca.qa.local/incoming/article1965.ece" type="application/xhtml+xml" title="cXense Analytics"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-bianca:8080/webservice-extensions/note/note.html?url=http://qa-bianca:8080/note-webservice/escenic/content/1965/notes" type="application/xhtml+xml" title="Notes"/>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="subtitle"/>
      <vdf:field name="leadtext"/>
      <vdf:field name="maxAge"/>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
      <vdf:field name="byline"/>
      <vdf:field name="creditLine"/>
      <vdf:field name="overline"/>
      <vdf:field name="datelineTag"/>
      <vdf:field name="shirttail"/>
      <vdf:field name="quote"/>
      <vdf:field name="suggested-tags"/>
      <vdf:field name="storyKeywords"/>
      <vdf:field name="originatingURL"/>
      <vdf:field name="priority"/>
      <vdf:field name="indexable"/>
      <vdf:field name="followlinks"/>
      <vdf:field name="copyright"/>
      <vdf:field name="owner"/>
      <vdf:field name="source"/>
      <vdf:field name="layoutVariant"/>
      <vdf:field name="customConfig"/>
      <vdf:field name="com.escenic.tags">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <title type="text">This is a test story title</title>
  <summary type="text"/>
  <link href="http://bianca.qa.local/incoming/article1965.ece" rel="alternate"/>
  <link href="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>
  <app:edited xmlns:app="http://www.w3.org/2007/app">2017-10-27T08:41:03.000Z</app:edited>
  <dcterms:created xmlns:dcterms="http://purl.org/dc/terms/">2017-10-27T08:41:03.000Z</dcterms:created>
  <metadata:reference xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="a14fb91f-b1dc-4bb9-9c1a-0f6267f13969"/>
  <metadata:creator xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:creator>
  <metadata:last-edited-by xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:last-edited-by>
  <app:control xmlns:app="http://www.w3.org/2007/app">
    <app:draft>yes</app:draft>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext" name="draft" href="http://qa-bianca:8080/webservice/escenic/content/state/draft/editor"/>
  </app:control>
  <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-bianca:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  <link rel="usage" href="http://qa-bianca:8080/webservice/usage/article/1965" type="text/uri-list" title="Incoming Links"/>
  <link href="http://qa-bianca:8080/webservice/escenic/content/1965/preview" rel="http://www.vizrt.com/types/relation/preview"/>
  <link href="http://qa-bianca:8080/webservice/escenic/content/1965/log" rel="http://www.vizrt.com/types/relation/log"/>
  <link href="http://qa-bianca:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="2bdd8577-35bf-4141-b250-31bfa33347eb" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);	
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="IsAuthorRemoved" id="42c2e89f-ab5b-431d-a0ff-3bc6f2c17eb9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d8c94b2b-5a5d-41b7-84a8-107a1f48915e" name="IsAuthorRemoved" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/content/1965</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9ab91d36-bae0-45c8-a912-e7983cd3653c" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);


int IsAuthorsRemoved(response)
{
	def xml = new XmlParser().parseText(response);
	def node;
	int authorRemoved = 1;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("author"))
		authorRemoved = 0;
	}
	return authorRemoved;
}

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);


/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","All authors should be removed");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","All authors are removed");
	def response = context.expand('${IsAuthorRemoved#Response}');
	int result = IsAuthorsRemoved(response);
	log.info result+2;
	if(result==1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","All authors are not removed");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0b75598c-56f7-41b6-9348-73ecb43dbe8e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AddingForeignAuthor-VF-7043" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="ffce4131-d785-4508-aaa4-cc5fbb238209"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="d7d57d79-bfa2-4f98-86c5-d7992076b0c9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDescriptionURI" id="d1f2e3b3-6613-4573-86b2-5fa2667b993a"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="8ac66934-8c45-4b64-ae4d-7bd204b3045a"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContent"].setPropertyValue("EndPoint",content_create_uri);
log.info content_create_uri;</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="6230cc9c-26ed-4dcb-80a4-f339b344bdfd"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="de27dcc9-f69f-4c48-98c6-4f13dbada7a9"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContent#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContent"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContent" id="64fc2b8e-6cb0-4955-be10-dd52e1470461"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContent" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="201")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetContentURI" id="cbc409e2-77e0-4b1d-9add-bd8a88dae6f9"><con:settings/><con:config><script>def httpResponseHeader = context.testCase.testSteps["CreateContent"].testRequest.response.responseHeaders
def content_uri;
if(httpResponseHeader!=null)
{
	content_uri = httpResponseHeader["Location"][0];
}
context.testCase.testSteps["RetriveContentStory"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["AddAuthors"].setPropertyValue("EndPoint",content_uri);
context.testCase.testSteps["CheckAuthorsOrder"].setPropertyValue("EndPoint",content_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveContentStory" id="51d7b233-7cb0-408c-878f-28f6d4d3dbc6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d8c94b2b-5a5d-41b7-84a8-107a1f48915e" name="RetriveContentStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/content/1966</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9ab91d36-bae0-45c8-a912-e7983cd3653c" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetPersonModelAndWebservice" id="70d60d3c-25ea-4308-8ad7-f976605677a3"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');
def content_description_uri,root_section_uri,model,tmp;
int Found=0;
def str1;
def str2;
def person_model;
def person_create_webservice;

while(Found==0)
{
	int Index_newLine = response.indexOf("\n");
	str1 = response.substring(0,Index_newLine);
	if(Index_newLine&lt;response.size())
	{
		str2 = response.substring(Index_newLine+1);
	}
	if(str1.contains("person"))
	{
		person_model = str1;
		break;
	}
	response=str2;
}
person_model = person_model.substring(person_model.indexOf("http"));
person_model = person_model.substring(0 , person_model.indexOf("person")+"person".length());

log.info person_model;

def request = context.expand('${AuthorCreate#Request}');
def person_xml = new XmlParser().parseText(request);
person_xml.breadthFirst().each
{
	if(it.@model!=null)
	{
		it.@model=person_model;
		log.info it.@model+"edit";
	}
}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(person_xml);
def newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["AuthorCreate"].setPropertyValue("Request",newXml);

response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("person") &amp;&amp; Found==0)
		{
			person_create_webservice = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!person_create_webservice.contains(host))
{
	int index = person_create_webservice.indexOf("webservice")+"webservice".length();
	person_create_webservice = host + person_create_webservice.substring(index);
}
context.testCase.testSteps["AuthorCreate"].setPropertyValue("EndPoint",person_create_webservice);
log.info person_create_webservice;</script></con:config></con:testStep><con:testStep type="httprequest" name="AuthorCreate" id="17bdec45-a61f-447c-99a8-cad7252c264a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="b77e8f63-c621-42f3-9602-e3fbc331665a" name="AuthorCreate" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/publication/qa/escenic/person</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.person">
      <vdf:field name="com.escenic.username"/>
      <vdf:field name="com.escenic.firstName">
        <vdf:value>Person - 5</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.surName">
        <vdf:value>QA-Admin-Test-14:41:2:158</vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.occupation"/>
      <vdf:field name="com.escenic.address"/>
      <vdf:field name="com.escenic.postalcode"/>
      <vdf:field name="com.escenic.city"/>
      <vdf:field name="com.escenic.phonework"/>
      <vdf:field name="com.escenic.phonemobile"/>
      <vdf:field name="com.escenic.phoneprivate"/>
      <vdf:field name="com.escenic.emailaddress"/>
    </vdf:payload>
  </content>
  <title type="text">QA-Admin-Test</title>
  <summary type="text">QA-Admin-Test</summary>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://host-ip-address/webservice/escenic/publication/qa/" title="test"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="8fbdecdb-027a-46fb-a215-538958d2d1ef" name="Script Assertion"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="CreateSomeAuthor" id="cf014ca9-26a1-45c8-9659-d3dc2fd6a724"><con:settings/><con:config><script><![CDATA[def project = testRunner.testCase.testSuite.project
String suitename = context.testCase.testSuite.name;
String testcase = context.testCase.name;

def authorsName = new String[6];
def authorsUri = new String[6];
def authorsToAdd="";
def response = context.expand('${RetriveContentStory#Response}');
def xml = new XmlParser().parseText(response);
String surname,firstName;

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}


for(int i=0;i<5;i++)
{
	surname = "QA-Admin-Test-"+GetTime();
	firstName = "Person - " + (i+1).toString();
	def request = context.expand('${AuthorCreate#Request}');
	def person_xml = new XmlParser().parseText(request);
	person_xml.breadthFirst().each
	{
		if(it.@name.toString().contains("surName"))
		it.'vdf:value'[0].value=surname;
		if(it.@name.toString().contains("firstName"))
		it.'vdf:value'[0].value=firstName;
	}
	
	def stringWriter = new StringWriter();
	def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
	printer.preserveWhitespace=true;
	printer.print(person_xml);
	def newXml = stringWriter.toString();

	context.testCase.testSteps["AuthorCreate"].setPropertyValue("Request",newXml);

	testRunner.runTestStep(project.testSuites[suitename].testCases[testcase].testSteps['AuthorCreate'])
	def httpResponseHeaders = context.testCase.testSteps["AuthorCreate"].testRequest.response.responseHeaders
	def location = httpResponseHeaders["Location"][0];
	
	authorsName[i] = firstName;
	authorsUri[i] = location;
}

for(int i=0;i<5;i++)
{
	authorsToAdd = "<author><name>"+authorsName[(4-i)]+"</name><uri>"+authorsUri[(4-i)]+"</uri></author>";
	def nodeToAdd = new XmlParser(false,false).parseText(authorsToAdd);	
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("entry"))
			it.children().add(nodeToAdd);
	}
}
def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["AddAuthors"].setPropertyValue("Request",newXml);]]></script></con:config></con:testStep><con:testStep type="groovy" name="AddForeignAuthors" id="18fb652e-e613-4af4-861b-fb7a6bf11c43"><con:settings/><con:config><script><![CDATA[def request = context.expand('${AddAuthors#Request}');
def xml = new XmlParser().parseText(request);

def httpResponseHeaders = context.testCase.testSteps["AuthorCreate"].testRequest.response.responseHeaders
def location = httpResponseHeaders["Location"][0];
def endpoint = location;
def port = endpoint.findAll(/\d+/)*.toInteger()[0];
def personID = endpoint.findAll(/\d+/)*.toInteger()[1];
def otherserver = "http://some-other-server:";
def authorsUri =  otherserver + endpoint.substring(endpoint.indexOf(port.toString()));
authorsUri = authorsUri.replaceAll( (personID).toString() , (personID*10).toString() );
authorsToAdd = "<author><name>"+"Foreign Author - 2"+"</name><uri>"+authorsUri+"</uri></author>";

def nodeToAdd = new XmlParser(false,false).parseText(authorsToAdd);	
xml.breadthFirst().each
{
	if(it.name().toString().contains("entry"))
		it.children().add(nodeToAdd);
}

authorsToAdd = "<author><name>"+"Foreign Author - 1"+"</name><uri>"+authorsUri+"</uri></author>";

authorsUri = authorsUri.replaceAll( (personID*10).toString() , (personID+10).toString() );
authorsToAdd = "<author><name>"+"Foreign Author - 1"+"</name><uri>"+authorsUri+"</uri></author>";

def nodeToAdd2 = new XmlParser(false,false).parseText(authorsToAdd);	
xml.breadthFirst().each
{
	if(it.name().toString().contains("entry"))
		it.children().add(nodeToAdd2);
}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["AddAuthors"].setPropertyValue("Request",newXml);]]></script></con:config></con:testStep><con:testStep type="httprequest" name="AddAuthors" id="34ac4b50-433e-4a9b-bd1b-4736a44f7094"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="26fb590d-822b-46e9-a491-aec7c8923665" name="AddAuthors" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/content/1966</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>http://qa-bianca:8080/webservice/escenic/content/1966</id>
  <link rel="self" href="http://qa-bianca:8080/webservice/escenic/content/1966" type="application/atom+xml; type=entry"/>
  <link rel="edit" href="http://qa-bianca:8080/webservice/escenic/content/1966" type="application/atom+xml; type=entry"/>
  <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-bianca:8080/webservice/escenic/lock/article/1966/20f83ce4" type="application/atom+xml; type=entry"/>
  <dcterms:identifier xmlns:dcterms="http://purl.org/dc/terms/">1966</dcterms:identifier>
  <link href="http://qa-bianca:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>
  <link href="http://qa-bianca:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://qa-bianca:8080/webservice/escenic/publication/qa/" title="qa">
    <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-bianca:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-bianca:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  </metadata:publication>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-bianca:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-bianca:8080/webservice/escenic/content/1966/log/" type="application/atom+xml; type=entry" title="History"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-bianca:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-bianca:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://bianca.qa.local/incoming/article1966.ece" type="application/xhtml+xml" title="cXense Analytics"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-bianca:8080/webservice-extensions/note/note.html?url=http://qa-bianca:8080/note-webservice/escenic/content/1966/notes" type="application/xhtml+xml" title="Notes"/>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="subtitle"/>
      <vdf:field name="leadtext"/>
      <vdf:field name="maxAge"/>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
      <vdf:field name="byline"/>
      <vdf:field name="creditLine"/>
      <vdf:field name="overline"/>
      <vdf:field name="datelineTag"/>
      <vdf:field name="shirttail"/>
      <vdf:field name="quote"/>
      <vdf:field name="suggested-tags"/>
      <vdf:field name="storyKeywords"/>
      <vdf:field name="originatingURL"/>
      <vdf:field name="priority"/>
      <vdf:field name="indexable"/>
      <vdf:field name="followlinks"/>
      <vdf:field name="copyright"/>
      <vdf:field name="owner"/>
      <vdf:field name="source"/>
      <vdf:field name="layoutVariant"/>
      <vdf:field name="customConfig"/>
      <vdf:field name="com.escenic.tags">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <title type="text">This is a test story title</title>
  <summary type="text"/>
  <link href="http://bianca.qa.local/incoming/article1966.ece" rel="alternate"/>
  <link href="http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>
  <app:edited xmlns:app="http://www.w3.org/2007/app">2017-10-27T08:41:07.000Z</app:edited>
  <dcterms:created xmlns:dcterms="http://purl.org/dc/terms/">2017-10-27T08:41:07.000Z</dcterms:created>
  <metadata:reference xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="7c7b0ea1-0f34-4668-8a3d-3bd56c8623d4"/>
  <author>
    <name>qa Administrator</name>
    <uri>http://qa-bianca:8080/webservice/escenic/person/1</uri>
  </author>
  <metadata:creator xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:creator>
  <metadata:last-edited-by xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:last-edited-by>
  <app:control xmlns:app="http://www.w3.org/2007/app">
    <app:draft>yes</app:draft>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext" name="draft" href="http://qa-bianca:8080/webservice/escenic/content/state/draft/editor"/>
  </app:control>
  <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-bianca:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  <link rel="usage" href="http://qa-bianca:8080/webservice/usage/article/1966" type="text/uri-list" title="Incoming Links"/>
  <link href="http://qa-bianca:8080/webservice/escenic/content/1966/preview" rel="http://www.vizrt.com/types/relation/preview"/>
  <link href="http://qa-bianca:8080/webservice/escenic/content/1966/log" rel="http://www.vizrt.com/types/relation/log"/>
  <link href="http://qa-bianca:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>
  <author>
    <name>Person - 5</name>
    <uri>http://qa-bianca:8080/webservice/escenic/person/176</uri>
  </author>
  <author>
    <name>Person - 4</name>
    <uri>http://qa-bianca:8080/webservice/escenic/person/175</uri>
  </author>
  <author>
    <name>Person - 3</name>
    <uri>http://qa-bianca:8080/webservice/escenic/person/174</uri>
  </author>
  <author>
    <name>Person - 2</name>
    <uri>http://qa-bianca:8080/webservice/escenic/person/173</uri>
  </author>
  <author>
    <name>Person - 1</name>
    <uri>http://qa-bianca:8080/webservice/escenic/person/172</uri>
  </author>
  <author>
    <name>Foreign Author - 2</name>
    <uri>http://some-other-server:8080/webservice/escenic/person/1760</uri>
  </author>
  <author>
    <name>Foreign Author - 1</name>
    <uri>http://some-other-server:8080/webservice/escenic/person/186</uri>
  </author>
</entry>
]]></con:request><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckAuthorsOrder" id="69f803fa-e8f1-4372-9961-731f3b3bc094"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d8c94b2b-5a5d-41b7-84a8-107a1f48915e" name="CheckAuthorsOrder" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/content/1966</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9ab91d36-bae0-45c8-a912-e7983cd3653c" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int isEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}

int CheckAuthorOrder(response,request)
{
	def xml = new XmlParser().parseText(response);
	def xml2 = new XmlParser().parseText(request);
	def responseAuthorList = new String[10];
	def requestAuthorList = new String[10];
	int i=0,j=0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("author"))
		responseAuthorList[i++] = it.'uri'[0].value()[0];
	};
	xml2.breadthFirst().each
	{
		if(it.name().toString().contains("author"))
		requestAuthorList[j++] = it.'uri'[0].value()[0];
	};
	if(i==j)
	return -1;
	for(int k=0;k&lt;i-1;k++)
	{
		if(isEqual(responseAuthorList[k], requestAuthorList[k])==0)
		return 0;
	}
	return 1;
}
/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${CheckAuthorsOrder#Response}');
	def request = context.expand('${AddAuthors#Request}');
	int result = CheckAuthorOrder(response,request);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Foreign duplicate author is not added.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Foreign duplicate author is not added.");
	if(result==1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else if(result==0)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Authors are not Ordered or added Properly.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else if(result==-1)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Duplicate foreign authors are added.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="a1d140da-a137-4cf6-8d40-30e66a5ef8d5" name="ImageTest"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="cf2282da-bcf9-46c3-ae97-5ec8af868422" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateImage-VF-3759" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Description" id="033ad143-0eda-46db-acbd-842f0ae14782"><con:settings/><con:config><script>/*

 Does not work for Engine 5.7 versions as filter in the url needs to be added 
 using hard coding for search Picture.
 If filter= *** is added in search url then the testcase can be used for 
 Engine 5.7 versions.
 
 */</script></con:config></con:testStep><con:testStep type="groovy" name="SetCredentials" id="641f0c17-4375-4c0c-bb4a-f1fd44e46c1b"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="e077b8e3-6bf9-40cb-9861-8d69b7c3ea53"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-alpha:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseWebservices" id="0c75d26b-f745-45cd-8c54-d07350c1229f"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Tag_Search_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="search-description")
		{
			Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}

		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-search-description")
		{
			Tag_Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

context.testCase.testSteps["GetSearchDescription"].setPropertyValue("EndPoint",Search_URI);
//context.testCase.testSteps["GetTagSearchDescription"].setPropertyValue("EndPoint",Tag_Search_URI);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSearchDescription" id="f64ac759-0e6d-4c4a-8c0b-7484e2485677"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetSearchDescription" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-alpha:8080/webservice/open-search/content-search-description.xml</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetEndPoints" id="db66d4cd-de5b-4370-90e2-fa3b3faaa428"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSearchDescription#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Search_URI_2;

def html_search;
int URL_FOUND=0;

int isEqualString(String a,String b)
{
	if(a.size()!=b.size())
	return 0;
	for(int i=0;i<a.size();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
String MakeProperURL(String url)
{
	int st,ed;
	String res="";
	String SearchTerms = "searchTerms";
	String tmp="";
	int FOUND=0;
	for(int i=0;i<url.size();i++)
	{
		if(url[i]=='{')
		{
			st=i;
			for(int j=st;j<url.size();j++)
			{
				if(url[j]=='}')
				{
					ed = j;
					break;
				}
			}
			tmp = url.substring(st,ed+1);
			tmp2 = url.substring(st+1,ed);//excluding {}
			if(isEqualString(tmp2,SearchTerms))
			{
				url = url.replaceAll("searchTerms","*");
			}
			else
			{
				url = url.replaceAll(tmp2,"");
			}
		}
	}
	tmp="";
	for(int i=0;i<url.size();i++)
	{
		if(url[i]!='{' && url[i]!='}')
		tmp=tmp+url[i];
	}
	for(int i=0;i<tmp.size();i++)
	{
		if(tmp[i]=='?')
		{
			if(FOUND==0)
			{
				res=res+tmp[i];
				FOUND=1;
			}
			else
			continue;
			
		}
		else
		res=res+tmp[i];
	}
	return res;
}
xml.breadthFirst().
each {
		if(it.name().toString().contains("Url") &&
		it.@'type'=="application/atom+xml"
		)
		{
			if(URL_FOUND==0)
			{
				Search_URI = it.@'template';
				URL_FOUND=1;
			}
			else
			Search_URI_2 = it.@'template';
		}
		if(it.name().toString().contains("Url") &&
		it.@'type'=="text/html")
		html_search = it.@'template';
	};

if(Search_URI)
{
	Search_URI =  MakeProperURL(Search_URI);
}

context.testCase.testSteps["FilterSearchPicture"].setPropertyValue("Endpoint",Search_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="GetModelURI" id="dbaab0c6-788f-4346-b0d5-16a6e6652ad4"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}

context.testCase.testSteps["GetModel"].setPropertyValue("Endpoint",content_description_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModel" id="341faea2-1489-4691-b418-9ace88a1a666"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="169c2de7-955e-4c6f-ade1-e1335084c24b" name="GetModel" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-alpha:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5653be1f-a84f-4f1d-bc28-cadbaae1b3ac" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseModels" id="507d8835-deef-489d-9266-8399c9725b8f"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetModel#Response}');
def models = new String [1000];
int startIndex = response.indexOf("http:");
int lastIndex = response.indexOf("\n");
int idx = 0;
def endPoint;
while(response.size())
{
	if(lastIndex>=0 && lastIndex>=startIndex)
	{
		models[idx]=response.substring(startIndex,lastIndex);
		//log.info models[idx];
		idx+=1;
	}
	if(lastIndex<response.size())
	{
		response = response.substring(lastIndex+1);
		startIndex = response.indexOf("http:");
		lastIndex = response.indexOf("\n");
	}
}

for(int i=0;i<idx;i++)
{
	if(models[i].contains("picture"))
	{
		endPoint = context.expand('${FilterSearchPicture#EndPoint}');
		models[i]=models[i].trim();
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		context.testCase.testSteps["FilterSearchPicture"].setPropertyValue("EndPoint",endPoint);
	}
}]]></script></con:config></con:testStep><con:testStep type="httprequest" name="FilterSearchPicture" id="f2be8c36-8ae9-42e9-80d6-db969af9f193"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="FilterSearchPicture" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-alpha:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-alpha:8080/webservice/escenic/publication/qa/model/content-type/picture&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="788e11c1-9654-4609-9c4a-f51bb7a8b0cf" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetAnImageURI" id="44d0be1a-d362-41d0-b68c-d9c226b3cff0"><con:settings/><con:config><script>def response = context.expand('${FilterSearchPicture#Response}');
def xml =  new XmlParser().parseText(response);
int FOUND = 0;
def endpoint;
xml.breadthFirst().each
{
	if(it.name().toString().contains("entry") &amp;&amp; FOUND==0)
	{
		if(it.'link'.size()>0)
		{
			for(int i=0;i&lt;it.'link'.size();i++)
			{
				if(it.'link'[i].@rel=="self")
				{
					FOUND = 1;
					endpoint = it.'link'[i].@href;
				}
			}
		}
	}
};


context.testCase.testSteps["GetImage"].setPropertyValue("EndPoint",endpoint);
context.testCase.testSteps["UpdateImage"].setPropertyValue("EndPoint",endpoint);
context.testCase.testSteps["CheckImageCaption"].setPropertyValue("EndPoint",endpoint);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetImage" id="3b876a28-bd09-48c7-bda2-cfe9a6f8a9cd"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="92103905-416d-4bf8-b41e-b57200db9e41" name="GetImage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-alpha:8080/webservice/escenic/content/1230</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="b652b93a-f99a-4f13-9772-b8b22f1f185a" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="EditImage" id="8009e851-0bf2-4c06-8d7d-139502e95180"><con:settings/><con:config><script>def response = context.expand('${GetImage#Response}');
def xml = new XmlParser().parseText(response);

String GetTime()
{
	Date now = new Date();
	Calendar calendar = GregorianCalendar.getInstance();
	calendar.setTime(now);
	String time = calendar.get(Calendar.HOUR_OF_DAY)+":"+calendar.get(Calendar.MINUTE)+":"+calendar.get(Calendar.SECOND)+":"+calendar.get(Calendar.MILLISECOND);
	return time;
}

def toAdd = "&lt;vdf:value>Edited Caption at Time : "+GetTime()+"&lt;/vdf:value>";
def nodetoAdd = new XmlParser(false,false).parseText(toAdd);//new XmlSlurper().parseText(toAdd);

xml.breadthFirst().each
{
	if(it.@'name'.toString().contains("caption"))
	//log.info it.@'name'.toString();
	it.children().add(nodetoAdd);
}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["UpdateImage"].setPropertyValue("Request",newXml);

</script></con:config></con:testStep><con:testStep type="httprequest" name="UpdateImage" id="6a084754-566a-4233-b978-3d464251bef0"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="81e38ed0-52d7-475d-ad8b-78195fe576d2" name="UpdateImage" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-alpha:8080/webservice/escenic/content/1230</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>http://qa-alpha:8080/webservice/escenic/content/1230</id>
  <link rel="self" href="http://qa-alpha:8080/webservice/escenic/content/1230" type="application/atom+xml; type=entry"/>
  <link rel="edit" href="http://qa-alpha:8080/webservice/escenic/content/1230" type="application/atom+xml; type=entry"/>
  <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-alpha:8080/webservice/escenic/lock/article/1230/4a349262" type="application/atom+xml; type=entry"/>
  <dcterms:identifier xmlns:dcterms="http://purl.org/dc/terms/">1230</dcterms:identifier>
  <link href="http://qa-alpha:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>
  <link href="http://qa-alpha:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://qa-alpha:8080/webservice/escenic/publication/qa/" title="qa">
    <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-alpha:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-alpha:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  </metadata:publication>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-alpha:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-alpha:8080/webservice/escenic/content/1230/log/" type="application/atom+xml; type=entry" title="History"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-alpha:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-alpha:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://alpha.qa.local/incoming/article1230.ece" type="application/xhtml+xml" title="cXense Analytics"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-alpha:8080/webservice-extensions/note/note.html?url=http://qa-alpha:8080/note-webservice/escenic/content/1230/notes" type="application/xhtml+xml" title="Notes"/>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-alpha:8080/webservice/escenic/publication/qa/model/content-type/picture">
      <vdf:field name="title">
        <vdf:value>0-sa-d4-18fdf567ca21e4c8facbda64e1ac83c6.jpg</vdf:value>
      </vdf:field>
      <vdf:field name="leadtext"/>
      <vdf:field name="caption">
        <vdf:value>Edited Caption at Time : 16:4:1:712</vdf:value>
      </vdf:field>
      <vdf:field name="alttext"/>
      <vdf:field name="photographer"/>
      <vdf:field name="credits"/>
      <vdf:field name="description"/>
      <vdf:field name="binary">
        <vdf:value>
          <link rel="edit-media" href="http://qa-alpha:8080/webservice/escenic/binary/1230/2018/2/27/11/0-sa-d4-18fdf567ca21e4c8facbda64e1ac83c6.jpg" type="image/jpeg" title="0-sa-d4-18fdf567ca21e4c8facbda64e1ac83c6.jpg"/>
        </vdf:value>
      </vdf:field>
      <vdf:field name="com.escenic.defaultmetadata">
        <vdf:list>
          <vdf:payload>
            <vdf:field name="com.escenic.defaultmetadata">
              <vdf:field name="key">
                <vdf:value>mime-type</vdf:value>
              </vdf:field>
              <vdf:field name="value">
                <vdf:value>image/jpeg</vdf:value>
              </vdf:field>
            </vdf:field>
          </vdf:payload>
          <vdf:payload>
            <vdf:field name="com.escenic.defaultmetadata">
              <vdf:field name="key">
                <vdf:value>format</vdf:value>
              </vdf:field>
              <vdf:field name="value">
                <vdf:value>JPEG</vdf:value>
              </vdf:field>
            </vdf:field>
          </vdf:payload>
          <vdf:payload>
            <vdf:field name="com.escenic.defaultmetadata">
              <vdf:field name="key">
                <vdf:value>width</vdf:value>
              </vdf:field>
              <vdf:field name="value">
                <vdf:value>1200</vdf:value>
              </vdf:field>
            </vdf:field>
          </vdf:payload>
          <vdf:payload>
            <vdf:field name="com.escenic.defaultmetadata">
              <vdf:field name="key">
                <vdf:value>file-name</vdf:value>
              </vdf:field>
              <vdf:field name="value">
                <vdf:value>0-sa-d4-18fdf567ca21e4c8facbda64e1ac83c6.jpg</vdf:value>
              </vdf:field>
            </vdf:field>
          </vdf:payload>
          <vdf:payload>
            <vdf:field name="com.escenic.defaultmetadata">
              <vdf:field name="key">
                <vdf:value>original-mime-type</vdf:value>
              </vdf:field>
              <vdf:field name="value">
                <vdf:value>image/jpeg</vdf:value>
              </vdf:field>
            </vdf:field>
          </vdf:payload>
          <vdf:payload>
            <vdf:field name="com.escenic.defaultmetadata">
              <vdf:field name="key">
                <vdf:value>height</vdf:value>
              </vdf:field>
              <vdf:field name="value">
                <vdf:value>1200</vdf:value>
              </vdf:field>
            </vdf:field>
          </vdf:payload>
          <vdf:payload>
            <vdf:field name="com.escenic.defaultmetadata">
              <vdf:field name="key">
                <vdf:value>last-modified</vdf:value>
              </vdf:field>
              <vdf:field name="value">
                <vdf:value>1519726602000</vdf:value>
              </vdf:field>
            </vdf:field>
          </vdf:payload>
          <vdf:payload>
            <vdf:field name="com.escenic.defaultmetadata">
              <vdf:field name="key">
                <vdf:value>content-length</vdf:value>
              </vdf:field>
              <vdf:field name="value">
                <vdf:value>227199</vdf:value>
              </vdf:field>
            </vdf:field>
          </vdf:payload>
        </vdf:list>
      </vdf:field>
      <vdf:field name="alternates"/>
      <vdf:field name="com.escenic.tags">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <title type="text">0-sa-d4-18fdf567ca21e4c8facbda64e1ac83c6.jpg</title>
  <summary type="text"/>
  <link href="http://qa-alpha:8080/webservice/escenic/publication/qa/model/content-summary/picture" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="picture"/>
  <app:edited xmlns:app="http://www.w3.org/2007/app">2018-02-27T10:16:42.000Z</app:edited>
  <dcterms:created xmlns:dcterms="http://purl.org/dc/terms/">2018-02-27T10:16:42.000Z</dcterms:created>
  <metadata:reference xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="f4359331-9810-4c01-8242-c88539e0b042"/>
  <author>
    <name>qa Administrator</name>
    <uri>http://qa-alpha:8080/webservice/escenic/person/1</uri>
  </author>
  <metadata:creator xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:creator>
  <metadata:last-edited-by xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:last-edited-by>
  <app:control xmlns:app="http://www.w3.org/2007/app">
    <app:draft>yes</app:draft>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext" name="draft" href="http://qa-alpha:8080/webservice/escenic/content/state/draft/editor"/>
  </app:control>
  <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-alpha:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  <link rel="usage" href="http://qa-alpha:8080/webservice/usage/article/1230" type="text/uri-list" title="Incoming Links"/>
  <link href="http://qa-alpha:8080/webservice/escenic/binary/1230/2018/2/27/11/0-sa-d4-18fdf567ca21e4c8facbda64e1ac83c6.jpg" rel="edit-media" type="image/jpeg" title="0-sa-d4-18fdf567ca21e4c8facbda64e1ac83c6.jpg"/>
  <media:group xmlns:media="http://search.yahoo.com/mrss">
    <media:thumbnail url="http://qa-alpha:8080/webservice/thumbnail/article/1230"/>
    <media:content url="http://qa-alpha:8080/webservice/escenic/binary/1230/2018/2/27/11/0-sa-d4-18fdf567ca21e4c8facbda64e1ac83c6.jpg" type="image/jpeg" isDefault="true" expression="full" medium="image"/>
  </media:group>
  <link href="http://qa-alpha:8080/webservice/escenic/content/1230/preview" rel="http://www.vizrt.com/types/relation/preview"/>
  <link href="http://qa-alpha:8080/webservice/escenic/content/1230/log" rel="http://www.vizrt.com/types/relation/log"/>
  <link href="http://qa-alpha:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>
  <link href="http://qa-alpha:8080/webservice/thumbnail/article/1230" rel="thumbnail" type="image/png"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="e16bcc97-1602-4e2c-b50e-5fe0b61535bb" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","204");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="204")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="CheckImageCaption" id="0eb43855-ec2f-4369-83bc-53dfd40ba56f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="92103905-416d-4bf8-b41e-b57200db9e41" name="CheckImageCaption" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-alpha:8080/webservice/escenic/content/1230</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="b94a9b4e-4315-41e4-bf07-bc53a4ff0fc8" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int IsEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}

int IsCaptionUpdated(res,req)
{
	def a = new XmlParser().parseText(res);
	def b = new XmlParser().parseText(req);
	def updatedCaption;
	def editedCaption;

	a.breadthFirst().each
	{
		if(it.@name.toString().contains("caption"))
		updatedCaption = it.'vdf:value'[0].value()[0];
	};
	b.breadthFirst().each
	{
		if(it.@name.toString().contains("caption"))
		editedCaption = it.'vdf:value'[0].value()[0];
	};
	return IsEqual(updatedCaption.toString(),editedCaption.toString());
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${CheckImageCaption#Response}');
	def request = context.expand('${UpdateImage#Request}');
	int result = IsCaptionUpdated(response,request);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Caption Updated.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Caption Updated.");
	
	if(result==1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Caption Not Updated.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4dafd1f3-a0b1-43c7-af3b-17be9b4839de" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ImplementJSONFieldsTest-VF-6429" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="83261ac2-5f4c-45dd-9646-6271e4079e68"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="e2302cec-765a-481a-92a5-699c16c78538"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetModelURI" id="46a9f6bf-13d4-45c5-898e-ec385595a46f"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}

context.testCase.testSteps["GetModel"].setPropertyValue("Endpoint",content_description_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModel" id="f885eec9-a9c5-4717-a8e9-01a35c5ab12a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="169c2de7-955e-4c6f-ade1-e1335084c24b" name="GetModel" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5653be1f-a84f-4f1d-bc28-cadbaae1b3ac" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetPictureModelURI" id="88f21bc3-323b-4ef6-b35c-77c6b5867c4e"><con:settings/><con:config><script>def response = context.expand('${GetModel#Response}');
def models = new String [1000];
int startIndex = response.indexOf("http:");
int lastIndex = response.indexOf("\n");
int idx = 0;
def endPoint;
while(response.size())
{
	if(lastIndex>=0 &amp;&amp; lastIndex>=startIndex)
	{
		models[idx]=response.substring(startIndex,lastIndex);
		idx+=1;
	}
	if(lastIndex&lt;response.size())
	{
		response = response.substring(lastIndex+1);
		startIndex = response.indexOf("http:");
		lastIndex = response.indexOf("\n");
	}
}

for(int i=0;i&lt;idx;i++)
{
	if(models[i].contains("picture"))
	{
		context.testCase.testSteps["CheckJSONFiels"].setPropertyValue("EndPoint",models[i]);
		break;
	}
}</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckJSONFiels" id="dc59b8da-0e02-423f-86a6-b23ffba51eac"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d0c6a249-cbf8-4d5e-b471-ed48d532afcd" name="CheckJSONFiels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/picture
</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="ecb1d4fd-f329-4b83-b7c8-440e64a96aa2" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int DoesJSONFieldExist(res)
{
	def xml = new XmlParser().parseText(res);
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(it.@name.toString().contains("alternates") &amp;&amp; it.@mediatype.toString().contains("json"))
		FOUND=1;
	};
	return FOUND;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${CheckJSONFiels#Response}');
	
	int result = DoesJSONFieldExist(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","JSON field exists.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","JSON field exists.");
	
	if(result==1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","JSON field does not exist.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d5894a63-e0ec-45df-889e-4f062a77cf16" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CropInfoOnImageVersionTest-VF-6430" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="f0193e85-965e-47fe-9657-320e1d8eae6b"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="b2a1f0ea-35d3-4685-a3a7-630b3c13da96"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetModelURI" id="4c4e7cd8-1819-4545-99f4-e6f884049d88"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}

context.testCase.testSteps["GetModel"].setPropertyValue("Endpoint",content_description_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModel" id="d470dff4-bdee-44f2-b108-1d83a1a8aec1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="169c2de7-955e-4c6f-ade1-e1335084c24b" name="GetModel" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5653be1f-a84f-4f1d-bc28-cadbaae1b3ac" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetPictureModelURI" id="58a38428-84ab-429a-bce6-5b1de53fc6c0"><con:settings/><con:config><script>def response = context.expand('${GetModel#Response}');
def models = new String [1000];
int startIndex = response.indexOf("http:");
int lastIndex = response.indexOf("\n");
int idx = 0;
def endPoint;
while(response.size())
{
	if(lastIndex>=0 &amp;&amp; lastIndex>=startIndex)
	{
		models[idx]=response.substring(startIndex,lastIndex);
		idx+=1;
	}
	if(lastIndex&lt;response.size())
	{
		response = response.substring(lastIndex+1);
		startIndex = response.indexOf("http:");
		lastIndex = response.indexOf("\n");
	}
}

for(int i=0;i&lt;idx;i++)
{
	if(models[i].contains("picture"))
	{
		context.testCase.testSteps["CheckCropInfoOnImageVersion"].setPropertyValue("EndPoint",models[i]);
		break;
	}
}</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckCropInfoOnImageVersion" id="00adafde-4787-42a0-8e7b-e8623636d83a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d0c6a249-cbf8-4d5e-b471-ed48d532afcd" name="CheckCropInfoOnImageVersion" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/picture
</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="ecb1d4fd-f329-4b83-b7c8-440e64a96aa2" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

int IsEqual(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}

int DoesJSONFieldExist(res)
{
	def xml = new XmlParser().parseText(res);
	int FOUND = 0;
	xml.breadthFirst().each
	{
		if(it.@name.toString().contains("alternates"))
		{
			if(it.children()[0]!=null &amp;&amp; it.children()[0].name().toString().contains("rep") &amp;&amp; it.children()[0].name().toString().contains("representations"))
			{
				log.info it.children()[0].name().toString();
				FOUND=1;
			}
		}
	};
	return FOUND;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${CheckCropInfoOnImageVersion#Response}');
	
	int result = DoesJSONFieldExist(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","\"alternates\" field definition has \"rep:representations\" xml nodes.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","\"alternates\" field definition has \"rep:representations\" xml nodes.");
	
	if(result==1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","\"alternates\" field definition does not have \"rep:representations\" xml nodes.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="964850d6-15b7-4858-a1a8-fd09d74f1892" name="PublicationTestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="5a0b7529-9ea9-4689-a734-c0d43d1e983c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="HitPublicationTest-VF-6765" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="816e6643-0f14-482e-87fd-cafbec9dd1ba"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="80f57142-ddb8-4bb9-806a-bee2573768a4"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetROOTSection" id="bd6cd550-14c4-4510-be5a-4bda42f0f0f9"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String ROOT_Section_Uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='sections' && it.@href.toString().contains("ROOT") && FOUND==0)
		{
			ROOT_Section_Uri = it.@'href';
			FOUND=1;
		}
	};

if(ROOT_Section_Uri.toString().contains("webservice"))
{
	int index = ROOT_Section_Uri.indexOf("webservice")+"webservice".length();
	ROOT_Section_Uri = context.expand('${GetWebservices#EndPoint}') + ROOT_Section_Uri.substring(index);
}
else
{
	ROOT_Section_Uri = context.expand('${GetWebservices#EndPoint}') +"/" +ROOT_Section_Uri;
}
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",ROOT_Section_Uri);
]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="e1d470e7-40f1-4cf7-90dc-25c1f0b085fe"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="cdd0a8f2-c213-48ba-9295-3de17b9d5eb7" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetPublicationURL" id="c26ac447-d359-4ce3-88fd-2547246c79dc"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);
String publication_Uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.@rel=="http://www.vizrt.com/types/relation/top" &amp;&amp; FOUND==0)
		{
			publication_Uri = it.@'href';
			FOUND=1;
		}
	};

if(publication_Uri.toString().contains("webservice"))
{
	int index = publication_Uri.indexOf("webservice")+"webservice".length();
	ROOT_Section_Uri = context.expand('${GetWebservices#EndPoint}') + publication_Uri.substring(index);
}
else
{
	publication_Uri = context.expand('${GetWebservices#EndPoint}') +"/" +publication_Uri;
}
context.testCase.testSteps["HitPublication"].setPropertyValue("Endpoint",ROOT_Section_Uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="HitPublication" id="8427fdd4-186d-4de5-a0ea-6f93f07adb53"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="5455b084-13c9-40d8-ae18-c04034628c09" name="HitPublication" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/publication/qa/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f7868e96-ca2f-4295-b2f2-80f27ec8b51f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def contenttype = httpResponseHeaders["Content-Type"][0];
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200-Response is an atom.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","200-Response is an atom.");
	if(contenttype.toString().contains("atom+xml"))
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","200-Response is not an atom.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="fd986824-60c6-4dfb-9ac7-96f184a3584a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestPublicationVDFPayldModel-VF-6765" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="79761fb5-5efb-4b5d-a296-d2b9c3655e5b"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="664aa567-342e-460c-b907-a0ea15e5b512"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetROOTSection" id="4d0722db-3ac1-4d71-9128-4c407c108959"><con:settings/><con:config><script><![CDATA[import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String ROOT_Section_Uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") && it.@'rel'=='sections' && it.@href.toString().contains("ROOT") && FOUND==0)
		{
			ROOT_Section_Uri = it.@'href';
			FOUND=1;
		}
	};

if(ROOT_Section_Uri.toString().contains("webservice"))
{
	int index = ROOT_Section_Uri.indexOf("webservice")+"webservice".length();
	ROOT_Section_Uri = context.expand('${GetWebservices#EndPoint}') + ROOT_Section_Uri.substring(index);
}
else
{
	ROOT_Section_Uri = context.expand('${GetWebservices#EndPoint}') +"/" +ROOT_Section_Uri;
}
context.testCase.testSteps["GetRootSection"].setPropertyValue("Endpoint",ROOT_Section_Uri);
]]></script></con:config></con:testStep><con:testStep type="httprequest" name="GetRootSection" id="d7f0d1a2-6f5e-4fef-bcce-39500704d3ac"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="cdd0a8f2-c213-48ba-9295-3de17b9d5eb7" name="GetRootSection" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/section/ROOT/subsections</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetPublicationURL" id="c45c8a61-0f6d-4adb-9f6e-8a57f2bf3848"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetRootSection#Response}');
def xml = new XmlParser().parseText(response);
String publication_Uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.@rel=="http://www.vizrt.com/types/relation/top" &amp;&amp; FOUND==0)
		{
			publication_Uri = it.@'href';
			FOUND=1;
		}
	};

if(publication_Uri.toString().contains("webservice"))
{
	int index = publication_Uri.indexOf("webservice")+"webservice".length();
	ROOT_Section_Uri = context.expand('${GetWebservices#EndPoint}') + publication_Uri.substring(index);
}
else
{
	publication_Uri = context.expand('${GetWebservices#EndPoint}') +"/" +publication_Uri;
}
context.testCase.testSteps["HitPublication"].setPropertyValue("Endpoint",ROOT_Section_Uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="HitPublication" id="97278706-cb15-4205-ba4d-6c4d0f917bd9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="5455b084-13c9-40d8-ae18-c04034628c09" name="HitPublication" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/publication/qa/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f7868e96-ca2f-4295-b2f2-80f27ec8b51f" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def contenttype = httpResponseHeaders["Content-Type"][0];
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200-Response is an atom.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","200-Response is an atom.");
	if(contenttype.toString().contains("atom+xml"))
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","200-Response is not an atom.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetVDFModel" id="1e6f247c-855b-42b2-b6d7-41faa4080a4d"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
//def project = testRunner.testCase.testSuite.project

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);
def httpResponseHeaders = context.testCase.testSteps["HitPublication"].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
log.info httpStatusCode;
//if(httpStatusCode==200)
//{
	def response = context.expand('${HitPublication#Response}');
	if(response!=null)
	{
		try
		{
			def xml = new XmlParser().parseText(response);
			int FOUND = 0;
			def model;
			xml.breadthFirst().each
			{
				if( it.@model.toString().contains("publication") &amp;&amp; FOUND==0)
				{
					model = it.@model;
					FOUND=1;
				}
			};
			
			context.testCase.testSteps["GetPublicationModel"].setPropertyValue("Endpoint",model);
			
		}
		catch(Exception ex)
		{
				context.testCase.testSteps["GetPublicationModel"].setPropertyValue("Endpoint",context.expand('${HitPublication#Endpoint}'));
		}
		
	}
//}

</script></con:config></con:testStep><con:testStep type="httprequest" name="GetPublicationModel" id="a50a51cb-9df5-4537-8153-dd273a5fc3fe"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e9b560e2-2a3d-45c4-ab8b-70555a8d2a9a" name="GetPublicationModel" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/com.escenic.publication</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="9e4da65d-46b8-439e-b3cd-e2d8a3cb6ccd" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);


/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
log.info "here";
if(httpStatusCode=="200")
{
	def response = context.expand('${GetPublicationModel#Response}');
	
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","VDF model should provide type definition appropriate for a properties file.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","VDF model should provide type definition appropriate for a properties file.");
	if(response.toString().contains("mediatype=\"text/x-java-properties\""))
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","VDF model did not provide type definition appropriate for a properties file.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="23f7b52d-6c7d-4638-885b-757bcac6f5dc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestWebserviceLinkType-ListPool-VF-6257" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="179cb259-6196-482c-92a8-63e94babbf76"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="aa4dd337-9bd9-4261-82f2-c02e1c56749f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-epsilon:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetAllListLocation" id="669566f2-254b-47fe-99f8-0eb225f70b1d"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def listsUri;
int FOUND = 0;
xml.breadthFirst().each
{
	if(it.@rel=="lists" &amp;&amp; FOUND==0)
	{
		listsUri = it.@href;
		FOUND = 1;
	}
};

if(listsUri.toString().contains("webservice"))
{
	int index = listsUri.indexOf("webservice")+"webservice".length();
	listsUri = context.expand('${GetWebservices#EndPoint}') + listsUri.substring(index);
}
else
{
	listsUri = context.expand('${GetWebservices#EndPoint}') +"/" +listsUri;
}
context.testCase.testSteps["CheckListPool"].setPropertyValue("Endpoint",listsUri);
</script></con:config></con:testStep><con:testStep type="httprequest" name="CheckListPool" id="971792a1-4b10-4fe9-bf0b-5bd36938c67e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="60edff1a-d0c5-4abc-974b-1ecd22bde13d" name="CheckListPool" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/publication/qa/escenic/lists/</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="60c6ddaa-f2f7-4d5d-9309-21aefc1fd684" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

int isSame(String a,String b)
{
	if(a.length()!=b.length())
	return 0;
	for(int i=0;i&lt;a.length();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
String checkListPoolLinkType(response)
{
	def xml = new XmlParser().parseText(response);
	String linktype = "application/atom+xml";
	xml.breadthFirst().each
	{
		if(it.@rel=="http://www.vizrt.com/types/relation/list-pool")
		{
			if(isSame(it.@type.toString(),"application/atom+xml")==0)
			linktype = it.@type;
		}
	};
	return linktype;
}

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${CheckListPool#Response}');
	String linkType = checkListPoolLinkType(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","List-pool link type is application/atom+xml.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","List-pool link type is application/atom+xml.");
	if(isSame(linkType,"application/atom+xml")==1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","List-pool link type is "+linkType);
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="edf1d55b-b89f-4864-8285-41f968283006" name="FieldsOfContentTest"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="c5ddf023-3dc9-4337-96e1-3bab0f8dd228" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestMin-MaxOfNum-Webservice-VF-6424" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="e27f4a2d-8347-4bc1-81b9-e8d7589b1a55"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="0d95254f-c753-4194-9e1a-fbb5a8e5ba25"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-gamma:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelURI" id="e03f8a02-43a1-44dc-bb9c-2a368fb21675"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="63c241c0-25db-4a75-819c-d1c9d0c7b49d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-gamma:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetStoryModel" id="82dec57f-612f-4568-bb15-b7ed81de9d9a"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

context.testCase.testSteps["GetStoryModel"].setPropertyValue("EndPoint",model);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetStoryModel" id="f62585d1-2386-400a-99d6-ca9b76e896a7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetStoryModel" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-gamma:8080/webservice/escenic/publication/qa/model/content-type/story</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText><![CDATA[def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

def NumberFiled = 
"""<field name="maxAge" type="number">
	<ui:label>Maximum age (in seconds)</ui:label>
	<constraints>
		<minimum>0</minimum>
		<maximum>86400</maximum>
	</constraints>
	<ui:value-if-unset>60</ui:value-if-unset>
</field>""";
suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

int CheckNumberConstraints(response)
{
	def xml = new XmlParser().parseText(response);
	int FOUND=0;
	xml.breadthFirst().each
	{
		if(it.@name.toString().contains("maxAge") && FOUND==0)
		{
			FOUND=2;
			for( s in it.children())
			{
				if(s.name().toString().contains("constraints"))
				{
					for(child in s.children())
					{
						if(child.name().toString().contains("maximum"))
						{
							FOUND=1;
						}
					}
				}
			}
		}
	};
	return FOUND;
}
/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${GetStoryModel#Response}');
	int result = CheckNumberConstraints(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Min and Max Constraints of Number found.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Min and Max Constraints of Number found.");
	if(result==1)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else if(result==2)
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Min and Max Constraints of Number Missing.");
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
	else
	{
		project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Please add Number field with constrain as ."+NumberFiled.toString());
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
]]></scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3d25d331-bda6-458e-8f3e-7471b35488e8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestMin-MaxValueOfNumField-VF-6425" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="39c65210-055c-4881-b6d1-a2bb512d5410"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="6f17c7a4-5fcc-472d-8161-fb84213dc688"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="531c1462-f2ef-4a49-8246-6d7228337c6f" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-gamma:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5df89b00-7f6b-4099-b1a4-37caa8afad42" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="GetContentDescriptionURI" id="2e6010b1-8696-41f2-8a45-c79bb20e03e6"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}
context.testCase.testSteps["GetModels"].setPropertyValue("Endpoint",content_description_uri);
</script></con:config></con:testStep><con:testStep type="groovy" name="SetURIForContentCreation" id="2120ead9-f198-43f2-aa0b-b356d6602f4e"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def content_create_uri;
Found=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("link"))
	{
		
		if(it.@'content-descriptor'.toString().contains("story") &amp;&amp; Found==0)
		{
			content_create_uri = it.@'href';
			Found=1;
		}
	}
};

def host = context.expand('${GetWebservices#EndPoint}');
if(!content_create_uri.contains(host))
{
	int index = content_create_uri.indexOf("webservice")+"webservice".length();
	content_create_uri = host + content_create_uri.substring(index);
}
context.testCase.testSteps["CreateContentWithInvalidNumber"].setPropertyValue("EndPoint",content_create_uri);
context.testCase.testSteps["CreateContentWithInvalidMinValue"].setPropertyValue("EndPoint",content_create_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModels" id="0af7587f-f158-4e36-8cd4-ce73ea91cda9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="86074093-e0da-4188-aa3d-680313993014" name="GetModels" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-gamma:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="62a44758-9d42-47bb-8eca-cfee7d7206b4" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetModelOfContent" id="7729dd32-17cf-4912-a469-28febec1ca96"><con:settings/><con:config><script>import groovy.xml.dom.DOMCategory
import com.eviware.soapui.support.types.StringToStringMap

def response = context.expand('${GetModels#Response}');
def host_uri = context.expand('${GetWebservices#EndPoint}');

def content_description_uri,root_section_uri,model,tmp;

int index = response.indexOf("story")+"story".length();
response = response.toString().substring(0,index);
int i;
for(i=index-1;i>=0;i--)
{
	model = response.substring(i);
	if(model.indexOf(host_uri)>0)
	{
		break;
	}
}
log.info i+":=i"
model = model.substring(model.indexOf('http'));

/*
 *Edit Story Content 
 */
def request = context.expand('${CreateContentWithInvalidNumber#Request}');
def story_xml = new XmlParser().parseText(request);
story_xml.'content'.'vdf:payload'.each{
		it.@'model'=model;
	}

def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
String newXml = stringWriter.toString();
log.info newXml;
context.testCase.testSteps["CreateContentWithInvalidNumber"].setPropertyValue("Request",newXml);
context.testCase.testSteps["CreateContentWithInvalidMinValue"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="groovy" name="CreateWithInvalidMaxValue" id="bbd60e30-e320-4954-915c-a8d378ead4a7"><con:settings/><con:config><script>def request = context.expand('${CreateContentWithInvalidNumber#Request}');
def story_xml = new XmlParser().parseText(request);
def MX_VAL,MN_VAL;
def toAdd = "&lt;vdf:field name=\"maxAge\">&lt;vdf:value>10000000&lt;/vdf:value>&lt;/vdf:field>";
def nodetoAdd = new XmlParser(false,false).parseText(toAdd);//new XmlSlurper().parseText(toAdd);
int FOUND=0;
story_xml.breadthFirst().each
{
	if(it.@name.toString().contains("maxAge"))
	{
		def child = it.children();
		child[0].value="5000000";
		FOUND=1;
	}
}

if(FOUND==0)
{
	story_xml.breadthFirst().each
	{
		if(it.name().toString().contains("payload"))
		it.children().add(nodetoAdd);
	}
}


def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
def newXml = stringWriter.toString();
//log.info newXml;

context.testCase.testSteps["CreateContentWithInvalidNumber"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContentWithInvalidNumber" id="d711c9ce-8db7-4c9b-9b43-4a792f62b8b0"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContentWithInvalidNumber" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-gamma:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-gamma:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
      <vdf:field name="maxAge">
        <vdf:value>5000000</vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","400 - Checked invalid MAX value for field 'maxAge' Successfully.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode.toString()+" - Checked invalid MAX value for field 'maxAge' Successfully.");
if(httpStatusCode=="400")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode.toString()+" - Faield to check invalid MAX value for field 'maxAge'.");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="CreateWithInvalidMinValue" id="7728b7d9-2877-4753-a8c4-272abcf327d8"><con:settings/><con:config><script>def request = context.expand('${CreateContentWithInvalidMinValue#Request}');
def story_xml = new XmlParser().parseText(request);
def MX_VAL,MN_VAL;
def toAdd = "&lt;vdf:field name=\"maxAge\">&lt;vdf:value>-10&lt;/vdf:value>&lt;/vdf:field>";
def nodetoAdd = new XmlParser(false,false).parseText(toAdd);//new XmlSlurper().parseText(toAdd);
int FOUND=0;
story_xml.breadthFirst().each
{
	if(it.@name.toString().contains("maxAge"))
	{
		def child = it.children();
		child[0].value="-10";
		FOUND=1;
	}
}

if(FOUND==0)
{
	story_xml.breadthFirst().each
	{
		if(it.name().toString().contains("payload"))
		it.children().add(nodetoAdd);
	}
}


def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
def newXml = stringWriter.toString();
//log.info newXml;

context.testCase.testSteps["CreateContentWithInvalidMinValue"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="CreateContentWithInvalidMinValue" id="b043ad61-b3d2-4c29-b194-3807313b4a24"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="72275c13-2743-403e-8ac7-80f058f11b91" name="CreateContentWithInvalidMinValue" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-gamma:8080/webservice/escenic/section/2/content-items</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-gamma:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
      <vdf:field name="maxAge">
        <vdf:value>-10</vdf:value>
      </vdf:field>
    </vdf:payload>
  </content>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="93e8613c-9434-4c69-a1e5-21652a984da5" name="TestContentCreation"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","400 - Checked invalid MIN value for field 'maxAge' Successfully.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode.toString()+" - Checked invalid MIN value for field 'maxAge' Successfully.");
if(httpStatusCode=="400")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode.toString()+" - Faield to check invalid MIN value for field 'maxAge'.");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f2649a81-a8fd-42f6-899f-f825bd44c872" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestUpdateNumFieldWithInvalidValue-VF-6425" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="3b4986a0-bb0c-4805-807c-d3a8045cde79"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="7a6de468-cc08-4141-a5e9-3c3a14bf8820"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseWebservices" id="c10b0a60-9cde-4f0a-9de0-5846ab43246c"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Tag_Search_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="search-description")
		{
			Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}

		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-search-description")
		{
			Tag_Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

context.testCase.testSteps["GetSearchDescription"].setPropertyValue("EndPoint",Search_URI);
//context.testCase.testSteps["GetTagSearchDescription"].setPropertyValue("EndPoint",Tag_Search_URI);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSearchDescription" id="b0cb782c-25b4-43fe-bb38-1f3aa6db7b95"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetSearchDescription" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/open-search/content-search-description.xml</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetEndPoints" id="bb8f136b-a048-4b3d-b3f6-aec5b826a0ff"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSearchDescription#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Search_URI_2;

def html_search;
int URL_FOUND=0;

int isEqualString(String a,String b)
{
	if(a.size()!=b.size())
	return 0;
	for(int i=0;i<a.size();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
String MakeProperURL(String url)
{
	int st,ed;
	String res="";
	String SearchTerms = "searchTerms";
	String tmp="";
	int FOUND=0;
	for(int i=0;i<url.size();i++)
	{
		if(url[i]=='{')
		{
			st=i;
			for(int j=st;j<url.size();j++)
			{
				if(url[j]=='}')
				{
					ed = j;
					break;
				}
			}
			tmp = url.substring(st,ed+1);
			tmp2 = url.substring(st+1,ed);//excluding {}
			if(isEqualString(tmp2,SearchTerms))
			{
				url = url.replaceAll("searchTerms","*");
			}
			else
			{
				url = url.replaceAll(tmp2,"");
			}
		}
	}
	tmp="";
	for(int i=0;i<url.size();i++)
	{
		if(url[i]!='{' && url[i]!='}')
		tmp=tmp+url[i];
	}
	for(int i=0;i<tmp.size();i++)
	{
		if(tmp[i]=='?')
		{
			if(FOUND==0)
			{
				res=res+tmp[i];
				FOUND=1;
			}
			else
			continue;
			
		}
		else
		res=res+tmp[i];
	}
	return res;
}
xml.breadthFirst().
each {
		if(it.name().toString().contains("Url") &&
		it.@'type'=="application/atom+xml"
		)
		{
			if(URL_FOUND==0)
			{
				Search_URI = it.@'template';
				URL_FOUND=1;
			}
			else
			Search_URI_2 = it.@'template';
		}
		if(it.name().toString().contains("Url") &&
		it.@'type'=="text/html")
		html_search = it.@'template';
	};

if(Search_URI)
{
	Search_URI =  MakeProperURL(Search_URI);
}

context.testCase.testSteps["FilterSearchStory"].setPropertyValue("Endpoint",Search_URI);]]></script></con:config></con:testStep><con:testStep type="groovy" name="GetModelURI" id="b6a392a2-53a3-42c8-87b7-ac1a21c6b42a"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}

context.testCase.testSteps["GetModel"].setPropertyValue("Endpoint",content_description_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModel" id="b8abb804-46a7-43c1-bf7c-7365c4a0a96f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="169c2de7-955e-4c6f-ade1-e1335084c24b" name="GetModel" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5653be1f-a84f-4f1d-bc28-cadbaae1b3ac" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseModels" id="181b1a58-aecd-4823-a7ff-01d4e2116705"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetModel#Response}');
def models = new String [1000];
int startIndex = response.indexOf("http:");
int lastIndex = response.indexOf("\n");
int idx = 0;
def endPoint;
while(response.size())
{
	if(lastIndex>=0 && lastIndex>=startIndex)
	{
		models[idx]=response.substring(startIndex,lastIndex);
		//log.info models[idx];
		idx+=1;
	}
	if(lastIndex<response.size())
	{
		response = response.substring(lastIndex+1);
		startIndex = response.indexOf("http:");
		lastIndex = response.indexOf("\n");
	}
}

for(int i=0;i<idx;i++)
{
	if(models[i].contains("story"))
	{
		models[i]=models[i].trim();
		endPoint = context.expand('${FilterSearchStory#EndPoint}');
		if(endPoint.contains("&filters="))
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		else
		endPoint = endPoint+"&filters="+models[i];
		context.testCase.testSteps["FilterSearchStory"].setPropertyValue("EndPoint",endPoint);
		break;
	}
}]]></script></con:config></con:testStep><con:testStep type="httprequest" name="FilterSearchStory" id="ba71ae32-77ce-4a03-bfbd-b417e5ade5bc"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="FilterSearchStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint><![CDATA[http://qa-beta:8080/webservice/publication/qa/search/*/?pw=&c=&tag=&df=&filters=http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/story&start=&end=]]></con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f05ae613-602d-424e-adb2-5ad80bee8f83" name="Script Assertion" disabled="true"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;
int maxItemPerPage(response)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	return itemsPerPage.toInteger();
}
int GetTotalResult(response)
{
	def xml = new XmlParser().parseText(response);
	def totalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		totalResult=it.value()[0];
	};
	return totalResult.toInteger();
}
int checkResult(response,String type)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage = 0;
	int count = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total=it.value()[0];
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	xml.breadthFirst().each
	{
		if(it.@rel=="http://www.escenic.com/types/relation/model" &amp;&amp; it.@title.toString().contains(type))
		count+=1;
	};
	return count;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${FilterSearchStory#Response}');
	def type="story";
	int totalResult = GetTotalResult(response);
	int result = checkResult(response,type);
	int itemsPerPage = maxItemPerPage(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked "+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked"+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+(itemsPerPage-result).toString()+" results found are not "+type+" type.");
	log.info itemsPerPage;
	log.info result;
	if(result==itemsPerPage)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetStoryLocation" id="09a68e95-2284-4770-b1d5-f043a5ed1415"><con:settings/><con:config><script>def response = context.expand('${FilterSearchStory#Response}');
def xml = new XmlParser().parseText(response);
def location;
int FOUND=0;
xml.breadthFirst().each
{
	if(it.name().toString().contains("entry") &amp;&amp; FOUND==0)
	{
		for(s in it.children())
		{
			if(s.name().toString().contains("link") &amp;&amp; s.@rel=="self")
			{
				location = s.@href;
				FOUND=1;
			}
		}
	}
};

log.info location;
context.testCase.testSteps["RetriveStory"].setPropertyValue("EndPoint",location);
context.testCase.testSteps["UpdateStoryWithMaxInvalidValue"].setPropertyValue("EndPoint",location);
context.testCase.testSteps["UpdateStoryWithMinInvalidValue"].setPropertyValue("EndPoint",location);</script></con:config></con:testStep><con:testStep type="httprequest" name="RetriveStory" id="d471d560-2bd5-47cc-8020-52f188ae8efc"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="086cb033-aaf2-428a-bf04-c54b967d349e" name="RetriveStory" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/content/1612</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="UpdateWithInvalidMaxValue" id="22f619b0-85ec-4f25-bc2c-f44e6ddce33f"><con:settings/><con:config><script>def response = context.expand('${RetriveStory#Response}');
def story_xml = new XmlParser().parseText(response);

def toAdd = "&lt;vdf:value>2000000&lt;/vdf:value>";
def nodetoAdd = new XmlParser(false,false).parseText(toAdd);
story_xml.breadthFirst().each
{
	if(it.@name.toString().contains("maxAge"))
	{
		def child = it.children();
		if(child.size())
		{
			child[0].value="1000000";
		}
		else
		{
			it.children().add(nodetoAdd);
		}
	}
};


def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["UpdateStoryWithMaxInvalidValue"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="UpdateStoryWithMaxInvalidValue" id="13d9db40-f149-4cbe-9a02-6def6c30618a"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="054ebd2b-04e0-4d7b-951a-59c5e49394e8" name="UpdateStoryWithMaxInvalidValue" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/content/1612</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>http://qa-beta:8080/webservice/escenic/content/1612</id>
  <link rel="self" href="http://qa-beta:8080/webservice/escenic/content/1612" type="application/atom+xml; type=entry"/>
  <link rel="edit" href="http://qa-beta:8080/webservice/escenic/content/1612" type="application/atom+xml; type=entry"/>
  <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-beta:8080/webservice/escenic/lock/article/1612/427771f3" type="application/atom+xml; type=entry"/>
  <dcterms:identifier xmlns:dcterms="http://purl.org/dc/terms/">1612</dcterms:identifier>
  <link href="http://qa-beta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>
  <link href="http://qa-beta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://qa-beta:8080/webservice/escenic/publication/qa/" title="qa">
    <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-beta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-beta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  </metadata:publication>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-beta:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-beta:8080/webservice/escenic/content/1612/log/" type="application/atom+xml; type=entry" title="History"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-beta:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-beta:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://beta.qa.local/incoming/article1612.ece" type="application/xhtml+xml" title="cXense Analytics"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-beta:8080/webservice-extensions/note/note.html?url=http://qa-beta:8080/note-webservice/escenic/content/1612/notes" type="application/xhtml+xml" title="Notes"/>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="subtitle"/>
      <vdf:field name="leadtext"/>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
      <vdf:field name="byline"/>
      <vdf:field name="maxAge">
        <vdf:value>2000000</vdf:value>
      </vdf:field>
      <vdf:field name="creditLine"/>
      <vdf:field name="overline"/>
      <vdf:field name="datelineTag"/>
      <vdf:field name="shirttail"/>
      <vdf:field name="quote"/>
      <vdf:field name="storyKeywords"/>
      <vdf:field name="originatingURL"/>
      <vdf:field name="priority"/>
      <vdf:field name="indexable"/>
      <vdf:field name="followlinks"/>
      <vdf:field name="copyright"/>
      <vdf:field name="owner"/>
      <vdf:field name="source"/>
      <vdf:field name="layoutVariant"/>
      <vdf:field name="customConfig"/>
      <vdf:field name="com.escenic.tags">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <title type="text">This is a test story title</title>
  <summary type="text"/>
  <link href="http://qa-beta:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>
  <app:edited xmlns:app="http://www.w3.org/2007/app">2018-02-28T09:50:32.000Z</app:edited>
  <dcterms:created xmlns:dcterms="http://purl.org/dc/terms/">2018-02-28T09:50:28.000Z</dcterms:created>
  <metadata:reference xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="cf7ddfe9-813b-42d5-9a02-c363914981b1"/>
  <author>
    <name>qa Administrator</name>
    <uri>http://qa-beta:8080/webservice/escenic/person/1</uri>
  </author>
  <author>
    <name>Person - 5</name>
    <uri>http://qa-beta:8080/webservice/escenic/person/123</uri>
  </author>
  <author>
    <name>Person - 4</name>
    <uri>http://qa-beta:8080/webservice/escenic/person/122</uri>
  </author>
  <author>
    <name>Person - 3</name>
    <uri>http://qa-beta:8080/webservice/escenic/person/121</uri>
  </author>
  <author>
    <name>Person - 2</name>
    <uri>http://qa-beta:8080/webservice/escenic/person/120</uri>
  </author>
  <author>
    <name>Person - 1</name>
    <uri>http://qa-beta:8080/webservice/escenic/person/119</uri>
  </author>
  <author>
    <name>Foreign Author - 2</name>
    <uri>http://some-other-server:8080/webservice/escenic/person/1230</uri>
  </author>
  <author>
    <name>Foreign Author - 1</name>
    <uri>http://some-other-server:8080/webservice/escenic/person/133</uri>
  </author>
  <metadata:creator xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:creator>
  <metadata:last-edited-by xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:last-edited-by>
  <app:control xmlns:app="http://www.w3.org/2007/app">
    <app:draft>yes</app:draft>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext" name="draft" href="http://qa-beta:8080/webservice/escenic/content/state/draft/editor"/>
  </app:control>
  <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-beta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  <link rel="usage" href="http://qa-beta:8080/webservice/usage/article/1612" type="text/uri-list" title="Incoming Links"/>
  <link href="http://qa-beta:8080/webservice/escenic/content/1612/preview" rel="http://www.vizrt.com/types/relation/preview"/>
  <link href="http://qa-beta:8080/webservice/escenic/content/1612/log" rel="http://www.vizrt.com/types/relation/log"/>
  <link href="http://qa-beta:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="63357486-c2f3-4ad3-8ec4-fbcb4fd7ef14" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","400 - Checked invalid MAX value Update for field 'maxAge' Successfully.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode.toString()+" - Checked invalid MAX value Update for field 'maxAge' Successfully.");
if(httpStatusCode=="400")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode.toString()+" - Faield to check invalid MAX value Update for field 'maxAge'.");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="UpdateWithInvalidMinValue" id="032f3177-8eb1-4eb8-b96b-5c6381f9b53c"><con:settings/><con:config><script>def response = context.expand('${RetriveStory#Response}');
def story_xml = new XmlParser().parseText(response);

def toAdd = "&lt;vdf:value>2000000&lt;/vdf:value>";
def nodetoAdd = new XmlParser(false,false).parseText(toAdd);
story_xml.breadthFirst().each
{
	if(it.@name.toString().contains("maxAge"))
	{
		def child = it.children();
		if(child.size())
		{
			child[0].value="-5";
		}
		else
		{
			it.children().add(nodetoAdd);
		}
	}
};


def stringWriter = new StringWriter();
def printer = new XmlNodePrinter(new PrintWriter(stringWriter));
printer.preserveWhitespace=true;
printer.print(story_xml);
def newXml = stringWriter.toString();

context.testCase.testSteps["UpdateStoryWithMinInvalidValue"].setPropertyValue("Request",newXml);</script></con:config></con:testStep><con:testStep type="httprequest" name="UpdateStoryWithMinInvalidValue" id="43b3e75f-00ee-43d1-8e3a-5739c79419c5"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="054ebd2b-04e0-4d7b-951a-59c5e49394e8" name="UpdateStoryWithMinInvalidValue" postQueryString="false" mediaType="application/atom+xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://qa-beta:8080/webservice/escenic/content/1612</con:endpoint><con:request><![CDATA[<entry xmlns="http://www.w3.org/2005/Atom">
  <id>http://qa-beta:8080/webservice/escenic/content/1612</id>
  <link rel="self" href="http://qa-beta:8080/webservice/escenic/content/1612" type="application/atom+xml; type=entry"/>
  <link rel="edit" href="http://qa-beta:8080/webservice/escenic/content/1612" type="application/atom+xml; type=entry"/>
  <link rel="http://www.vizrt.com/types/relation/lock" href="http://qa-beta:8080/webservice/escenic/lock/article/1612/427771f3" type="application/atom+xml; type=entry"/>
  <dcterms:identifier xmlns:dcterms="http://purl.org/dc/terms/">1612</dcterms:identifier>
  <link href="http://qa-beta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/top" type="application/atom+xml; type=entry" title="qa"/>
  <link href="http://qa-beta:8080/webservice/escenic/publication/qa/" rel="http://www.vizrt.com/types/relation/publication" type="application/atom+xml; type=entry" title="qa"/>
  <metadata:publication xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" href="http://qa-beta:8080/webservice/escenic/publication/qa/" title="qa">
    <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-beta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
    <link rel="http://www.vizrt.com/types/relation/section" href="http://qa-beta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  </metadata:publication>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-beta:8080/webservice-extensions/core/article-history?language=%7Blanguage%7D&amp;locale=%7Blocale%7D&amp;url=http://qa-beta:8080/webservice/escenic/content/1612/log/" type="application/atom+xml; type=entry" title="History"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-beta:8080/webservice-extensions/cxense/analytics?language=%7Blanguage%7D&amp;url=http://qa-beta:8080/webservice/escenic/proxy/cxense-analytics-url/&amp;articleUrl=http://beta.qa.local/incoming/article1612.ece" type="application/xhtml+xml" title="cXense Analytics"/>
  <link rel="http://www.vizrt.com/types/relation/more-info" href="http://qa-beta:8080/webservice-extensions/note/note.html?url=http://qa-beta:8080/note-webservice/escenic/content/1612/notes" type="application/xhtml+xml" title="Notes"/>
  <content type="application/vnd.vizrt.payload+xml">
    <vdf:payload xmlns:vdf="http://www.vizrt.com/types" model="http://qa-beta:8080/webservice/escenic/publication/qa/model/content-type/story">
      <vdf:field name="title">
        <vdf:value>This is a test story title</vdf:value>
      </vdf:field>
      <vdf:field name="subtitle"/>
      <vdf:field name="leadtext"/>
      <vdf:field name="body">
        <vdf:value>
          <div xmlns="http://www.w3.org/1999/xhtml">
            <p>This is test sample story body!</p>
          </div>
        </vdf:value>
      </vdf:field>
      <vdf:field name="byline"/>
      <vdf:field name="maxAge">
        <vdf:value>2000000</vdf:value>
      </vdf:field>
      <vdf:field name="creditLine"/>
      <vdf:field name="overline"/>
      <vdf:field name="datelineTag"/>
      <vdf:field name="shirttail"/>
      <vdf:field name="quote"/>
      <vdf:field name="storyKeywords"/>
      <vdf:field name="originatingURL"/>
      <vdf:field name="priority"/>
      <vdf:field name="indexable"/>
      <vdf:field name="followlinks"/>
      <vdf:field name="copyright"/>
      <vdf:field name="owner"/>
      <vdf:field name="source"/>
      <vdf:field name="layoutVariant"/>
      <vdf:field name="customConfig"/>
      <vdf:field name="com.escenic.tags">
        <vdf:list/>
      </vdf:field>
    </vdf:payload>
  </content>
  <title type="text">This is a test story title</title>
  <summary type="text"/>
  <link href="http://qa-beta:8080/webservice/escenic/publication/qa/model/content-summary/story" rel="http://www.escenic.com/types/relation/summary-model" type="application/vnd.vizrt.model+xml" title="story"/>
  <app:edited xmlns:app="http://www.w3.org/2007/app">2018-02-28T09:50:32.000Z</app:edited>
  <dcterms:created xmlns:dcterms="http://purl.org/dc/terms/">2018-02-28T09:50:28.000Z</dcterms:created>
  <metadata:reference xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata" source="ece-auto-gen" sourceid="cf7ddfe9-813b-42d5-9a02-c363914981b1"/>
  <author>
    <name>qa Administrator</name>
    <uri>http://qa-beta:8080/webservice/escenic/person/1</uri>
  </author>
  <author>
    <name>Person - 5</name>
    <uri>http://qa-beta:8080/webservice/escenic/person/123</uri>
  </author>
  <author>
    <name>Person - 4</name>
    <uri>http://qa-beta:8080/webservice/escenic/person/122</uri>
  </author>
  <author>
    <name>Person - 3</name>
    <uri>http://qa-beta:8080/webservice/escenic/person/121</uri>
  </author>
  <author>
    <name>Person - 2</name>
    <uri>http://qa-beta:8080/webservice/escenic/person/120</uri>
  </author>
  <author>
    <name>Person - 1</name>
    <uri>http://qa-beta:8080/webservice/escenic/person/119</uri>
  </author>
  <author>
    <name>Foreign Author - 2</name>
    <uri>http://some-other-server:8080/webservice/escenic/person/1230</uri>
  </author>
  <author>
    <name>Foreign Author - 1</name>
    <uri>http://some-other-server:8080/webservice/escenic/person/133</uri>
  </author>
  <metadata:creator xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:creator>
  <metadata:last-edited-by xmlns:metadata="http://xmlns.escenic.com/2010/atom-metadata">
    <name>qa Administrator</name>
  </metadata:last-edited-by>
  <app:control xmlns:app="http://www.w3.org/2007/app">
    <app:draft>yes</app:draft>
    <vaext:state xmlns:vaext="http://www.vizrt.com/atom-ext" name="draft" href="http://qa-beta:8080/webservice/escenic/content/state/draft/editor"/>
  </app:control>
  <link rel="http://www.vizrt.com/types/relation/home-section" href="http://qa-beta:8080/webservice/escenic/section/2" title="New Articles" type="application/atom+xml; type=entry"/>
  <link rel="usage" href="http://qa-beta:8080/webservice/usage/article/1612" type="text/uri-list" title="Incoming Links"/>
  <link href="http://qa-beta:8080/webservice/escenic/content/1612/preview" rel="http://www.vizrt.com/types/relation/preview"/>
  <link href="http://qa-beta:8080/webservice/escenic/content/1612/log" rel="http://www.vizrt.com/types/relation/log"/>
  <link href="http://qa-beta:8080/webservice/open-search/tag-search-description.xml" rel="http://www.vizrt.com/types/relation/tag-search" title="tag-search-description" type="application/opensearchdescription+xml"/>
</entry>
]]></con:request><con:assertion type="GroovyScriptAssertion" id="63357486-c2f3-4ad3-8ec4-fbcb4fd7ef14" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

/* ****ASSERT STATUS CODE   ******** */
def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","400 - Checked invalid MIN value Update for field 'maxAge' Successfully.");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode.toString()+" - Checked invalid MIN value Update for field 'maxAge' Successfully.");
if(httpStatusCode=="400")
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
}
else
{
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode.toString()+" - Faield to check invalid MIN value Update for field 'maxAge'.");
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="1642e661-b653-499f-943d-177ec56c31c3" name="EliveTestSuite" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="1daf8333-b88d-4bfc-bd82-ad52e463ca77" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestEntryCreation" searchProperties="true"><con:settings/><con:testStep type="groovy" name="SetCredentials" id="d834937f-73d8-4815-9778-dddba92de3df"><con:settings/><con:config><script>String suitename = context.testCase.testSuite.name;
String casename = context.testCase.name;

def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project

def WORKSPACE = project.testSuites['SetEnvironment'].testCases['SetEnvVariable'].testSteps["Properties"].getPropertyValue("WORKSPACE");
log.info WORKSPACE;

def xml = new XmlSlurper().parse(WORKSPACE+'\\'+"HOSTNAME.xml");
String server = xml.'host';
String webservice = xml.'webservice';
String user = xml.'user';
String password = xml.'password';
String url = server+webservice;

def testSteps = context.testCase.getTestStepList() 
testSteps.each{
	context.testCase.testSteps[it.name].setPropertyValue("Username",user);
	context.testCase.testSteps[it.name].setPropertyValue("Password",password);
}

//context.testCase.testSteps["GetWebservices"].setPropertyValue("Endpoint",url);
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetWebservices" id="fe7dc4ad-e47d-4cb0-928f-eaa83efe8f07"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3bf2ed54-a386-4f5a-8835-40e0cb0463cd" name="GetWebservices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14bc63b6-7d2c-47f3-95c6-61c0f7a460bc" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseWebservices" id="e9b56105-1108-423c-9292-65d95504f00a"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Tag_Search_URI;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="search-description")
		{
			Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}

		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=="tag-search-description")
		{
			Tag_Search_URI = context.expand('${GetWebservices#EndPoint}')+'/'+it.@'href';
		}
	};

context.testCase.testSteps["GetSearchDescription"].setPropertyValue("EndPoint",Search_URI);
//context.testCase.testSteps["GetTagSearchDescription"].setPropertyValue("EndPoint",Tag_Search_URI);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetSearchDescription" id="015ae744-8ff1-4460-a493-9a490a9a3f20"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="13123c5a-67dd-4470-83ab-fdf351a38c00" name="GetSearchDescription" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/open-search/content-search-description.xml</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="3c293a0b-853e-4b2a-ab21-7c162f3cd8da" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="SetEndPoints" id="d893562a-75d7-43fc-91e7-bb4b4f6c6f6e"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetSearchDescription#Response}');
def xml = new XmlParser().parseText(response);
def Search_URI;
def Search_URI_2;

def html_search;
int URL_FOUND=0;

int isEqualString(String a,String b)
{
	if(a.size()!=b.size())
	return 0;
	for(int i=0;i<a.size();i++)
	{
		if(a[i]!=b[i])
		return 0;
	}
	return 1;
}
String MakeProperURL(String url)
{
	int st,ed;
	String res="";
	String SearchTerms = "searchTerms";
	String tmp="";
	int FOUND=0;
	for(int i=0;i<url.size();i++)
	{
		if(url[i]=='{')
		{
			st=i;
			for(int j=st;j<url.size();j++)
			{
				if(url[j]=='}')
				{
					ed = j;
					break;
				}
			}
			tmp = url.substring(st,ed+1);
			tmp2 = url.substring(st+1,ed);//excluding {}
			if(isEqualString(tmp2,SearchTerms))
			{
				url = url.replaceAll("searchTerms","*");
			}
			else
			{
				url = url.replaceAll(tmp2,"");
			}
		}
	}
	tmp="";
	for(int i=0;i<url.size();i++)
	{
		if(url[i]!='{' && url[i]!='}')
		tmp=tmp+url[i];
	}
	for(int i=0;i<tmp.size();i++)
	{
		if(tmp[i]=='?')
		{
			if(FOUND==0)
			{
				res=res+tmp[i];
				FOUND=1;
			}
			else
			continue;
			
		}
		else
		res=res+tmp[i];
	}
	return res;
}
xml.breadthFirst().
each {
		if(it.name().toString().contains("Url") &&
		it.@'type'=="application/atom+xml"
		)
		{
			if(URL_FOUND==0)
			{
				Search_URI = it.@'template';
				URL_FOUND=1;
			}
			else
			Search_URI_2 = it.@'template';
		}
		if(it.name().toString().contains("Url") &&
		it.@'type'=="text/html")
		html_search = it.@'template';
	};

if(Search_URI)
{
	Search_URI =  MakeProperURL(Search_URI);
}

context.testCase.testSteps["FilterSearchEvent"].setPropertyValue("Endpoint",Search_URI);
]]></script></con:config></con:testStep><con:testStep type="groovy" name="GetModelURI" id="e6673a09-6346-4b09-b4c7-674484bc4a57"><con:settings/><con:config><script>def response = context.expand('${GetWebservices#Response}');
def xml = new XmlParser().parseText(response);
String content_description_uri;
int FOUND=0;
xml.breadthFirst().
each {
		if(it.name().toString().contains("link") &amp;&amp; it.@'rel'=='content-descriptions' &amp;&amp; FOUND==0)
		{
			content_description_uri = it.@'href';
			FOUND=1;
		}
	};

if(content_description_uri.toString().contains("webservice"))
{
	int index = content_description_uri.indexOf("webservice")+"webservice".length();
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri.substring(index);
}
else
{
	content_description_uri = context.expand('${GetWebservices#EndPoint}') + content_description_uri;
}

context.testCase.testSteps["GetModel"].setPropertyValue("Endpoint",content_description_uri);</script></con:config></con:testStep><con:testStep type="httprequest" name="GetModel" id="e525cc9f-2189-4f33-ab74-6a85d8e23a14"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="169c2de7-955e-4c6f-ade1-e1335084c24b" name="GetModel" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/publication/qa/model</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5653be1f-a84f-4f1d-bc28-cadbaae1b3ac" name="Script Assertion"><con:configuration><scriptText>def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def statusCode = httpResponseHeaders["#status#"]
def httpStatusCode = (statusCode=~"[1-5]\\d\\d")[0]

if(httpStatusCode=="200")
	log.info "PASS"
else
	log.info "FAIL"
</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="ParseModels" id="1af332a3-18df-4c74-b04f-491d35499c3e"><con:settings/><con:config><script><![CDATA[def response = context.expand('${GetModel#Response}');
def models = new String [1000];
int startIndex = response.indexOf("http:");
int lastIndex = response.indexOf("\n");
int idx = 0;
def endPoint;
while(response.size())
{
	if(lastIndex>=0 && lastIndex>=startIndex)
	{
		models[idx]=response.substring(startIndex,lastIndex);
		//log.info models[idx];
		idx+=1;
	}
	if(lastIndex<response.size())
	{
		response = response.substring(lastIndex+1);
		startIndex = response.indexOf("http:");
		lastIndex = response.indexOf("\n");
	}
}

for(int i=0;i<idx;i++)
{
	if(models[i].contains("event"))
	{
		endPoint = context.expand('${FilterSearchEvent#EndPoint}');
		if(endPoint.contains("&filters="))
		endPoint = endPoint.replace("&filters=","&filters="+models[i]);
		else
		endPoint = endPoint+"&filters="+models[i];
		context.testCase.testSteps["FilterSearchEvent"].setPropertyValue("EndPoint",endPoint);
	}
}]]></script></con:config></con:testStep><con:testStep type="httprequest" name="FilterSearchEvent" id="c994c0b7-849d-4af9-9eb9-14e8f253c8df"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69d4add3-8a07-49ef-a0fa-51f4b19f13c7" name="FilterSearchEvent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/publication/qa/search/*/?pw=&amp;c=&amp;tag=&amp;filters=http://qa-bianca:8080/webservice/escenic/publication/qa/model/content-type/event
&amp;start=&amp;end=</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f05ae613-602d-424e-adb2-5ad80bee8f83" name="Script Assertion"><con:configuration><scriptText>def testCase =context.testCase;
def testRunner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testCase, null);
def project = testRunner.testCase.testSuite.project
testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['ReportGeneration'])

suite = testRunner.testCase.testSuite.project.testSuites["ScriptLibrary"];
suite.testCases["Library"].testSteps["Utility"].run(testRunner,context);

def httpResponseHeaders = context.testCase.testSteps[context.getCurrentStep().getLabel()].testRequest.response.responseHeaders
def httpStatusCode = context.utility.GetStatusCode(httpResponseHeaders);
def total = 0;
int count = 0;
int maxItemPerPage(response)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	return itemsPerPage.toInteger();
}
int GetTotalResult(response)
{
	def xml = new XmlParser().parseText(response);
	def totalResult;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		totalResult=it.value()[0];
	};
	return totalResult.toInteger();
}
int checkResult(response,String type)
{
	def xml = new XmlParser().parseText(response);
	def itemsPerPage = 0;
	int count = 0;
	xml.breadthFirst().each
	{
		if(it.name().toString().contains("totalResult"))
		total=it.value()[0];
		if(it.name().toString().contains("itemsPerPage"))
		itemsPerPage=it.value()[0];
	};
	xml.breadthFirst().each
	{
		if(it.@rel=="http://www.escenic.com/types/relation/model" &amp;&amp; it.@title.toString().contains(type))
		count+=1;
	};
	return count;
}

/* ****ASSERT STATUS CODE   ******** */
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("name",context.getCurrentStep().getLabel());
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","200");
project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult",httpStatusCode);
if(httpStatusCode=="200")
{
	def response = context.expand('${FilterSearchEvent#Response}');
	def type="event";
	int totalResult = GetTotalResult(response);
	int result = checkResult(response,type);
	int itemsPerPage = maxItemPerPage(response);
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("expectedresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked "+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+result.toString()+" results are checked"+type+" type.");
	project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps["Properties"].setPropertyValue("actualresult","Total : "+totalResult.toString()+" ;"+(itemsPerPage-result).toString()+" results found are not "+type+" type.");
	log.info itemsPerPage;
	log.info result;
	if(result==itemsPerPage)
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestPass']);
	}
	else
	{
		testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
	}
}
else
{
	testRunner.runTestStep(project.testSuites['TestReport'].testCases['ReportGeneration'].testSteps['TestFail']);
}</scriptText></con:configuration></con:assertion><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="HTTP Request" id="01f428ac-e3cb-4925-84a1-171dc5a41f1d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c1fbca64-026a-4d08-8923-3f5c1c3c8d01" name="HTTP Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/webservice/escenic/content/1252</con:endpoint><con:request/><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="TestEntryCreate" id="41dd2462-e76e-4db8-abd3-adb46f967202"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="fc7fb52d-6283-46bf-a0cd-c596ec874c12" name="TestEntryCreate" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://qa-bianca:8080/live-center-editorial/event/1252/entries</con:endpoint><con:request>{
  "values":{
      "basic": "ELIVE-TestAutomation Create entry."
    }
}
</con:request><con:credentials><con:username>qa_admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>